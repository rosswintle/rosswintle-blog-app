[
    {
        "dataAsArray": {
            "id": 10126,
            "date": "2021-04-18T10:25:23",
            "date_gmt": "2021-04-18T09:25:23",
            "guid": {
                "rendered": "https:\/\/rosswintle.uk\/?p=10126"
            },
            "modified": "2021-04-18T10:25:26",
            "modified_gmt": "2021-04-18T09:25:26",
            "slug": "we-need-a-common-visual-language-for-block-editing",
            "status": "publish",
            "type": "post",
            "link": "https:\/\/rosswintle.uk\/2021\/04\/we-need-a-common-visual-language-for-block-editing\/",
            "title": {
                "rendered": "We need a common visual language for block editing"
            },
            "content": {
                "rendered": "\n<p><em>Blocks are a new paradigm. They need complex new user interfaces. And we don&#8217;t have a common visual language for them.<\/em><\/p>\n\n\n\n<p>I&#8217;m spending my Saturday morning &#8220;TV&#8221; time watching the <a href=\"https:\/\/wordpress.tv\/2021\/04\/14\/april-14-2021-fse-demo\/\">WordPress &#8220;Full Site Editing&#8221; demo<\/a>.<\/p>\n\n\n\n<p>Now&#8230; I should say some things up front.<\/p>\n\n\n\n<ol><li>I&#8217;m an old dude now. I don&#8217;t like change. I&#8217;m also a sensitive person who thinks things through deeply. I doubly don&#8217;t like change. I know this.<\/li><li>I have every respect for the people designing and building the block editor. It&#8217;s a complex piece of software with a complex interface. What they are doing is hard.<\/li><li>I&#8217;m well aware that this is unfinished work.<\/li><\/ol>\n\n\n\n<p>But &#8230; I&#8217;m watching this video, and I&#8217;m completely baffled about what is going on. There is lots of talk of refining the UI in the video, of stuff that needs to be done before this is ready. But I&#8217;m so confused. And I&#8217;m an expert at this stuff who is confident with IT and computers and things.<\/p>\n\n\n\n<p>So what is wrong?<\/p>\n\n\n\n<p>I&#8217;m looking at the UI of this thing. The myriad icons.<\/p>\n\n\n\n<figure class=\"wp-block-image size-large is-resized\"><img loading=\"lazy\" decoding=\"async\" src=\"https:\/\/rosswintle.uk\/wp-content\/uploads\/2021\/04\/iconsiconsicons.png\" alt=\"\" class=\"wp-image-10127\" width=\"454\" height=\"196\" srcset=\"https:\/\/rosswintle.uk\/wp-content\/uploads\/2021\/04\/iconsiconsicons.png 712w, https:\/\/rosswintle.uk\/wp-content\/uploads\/2021\/04\/iconsiconsicons-300x129.png 300w\" sizes=\"(max-width: 454px) 100vw, 454px\" \/><\/figure>\n\n\n\n<p>The primary, secondary and tertiary tools for blocks that appear scattered across the inline interface, the pop-up toolbar (which I have hated since day one), and the sidebar.<\/p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" decoding=\"async\" width=\"1024\" height=\"575\" src=\"https:\/\/rosswintle.uk\/wp-content\/uploads\/2021\/04\/CleanShot-2021-04-18-at-10.17.40@2x-1024x575.png\" alt=\"\" class=\"wp-image-10128\" srcset=\"https:\/\/rosswintle.uk\/wp-content\/uploads\/2021\/04\/CleanShot-2021-04-18-at-10.17.40@2x-1024x575.png 1024w, https:\/\/rosswintle.uk\/wp-content\/uploads\/2021\/04\/CleanShot-2021-04-18-at-10.17.40@2x-300x169.png 300w, https:\/\/rosswintle.uk\/wp-content\/uploads\/2021\/04\/CleanShot-2021-04-18-at-10.17.40@2x-768x432.png 768w, https:\/\/rosswintle.uk\/wp-content\/uploads\/2021\/04\/CleanShot-2021-04-18-at-10.17.40@2x-1536x863.png 1536w, https:\/\/rosswintle.uk\/wp-content\/uploads\/2021\/04\/CleanShot-2021-04-18-at-10.17.40@2x-2048x1151.png 2048w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" \/><\/figure>\n\n\n\n<p>And I want to be able to understand and use these tools.<\/p>\n\n\n\n<p>So I&#8217;m thinking: why is this so hard. The classic editor was so much easier.<\/p>\n\n\n\n<p>And the classic editor was partly easier because it was simpler. But it was also easier because it was familiar. I could say to people &#8220;It&#8217;s just like Microsoft Word&#8221; and they understood. Because the tools and icons were familiar.<\/p>\n\n\n\n<p>What we dont have right now is a common visual language for all this block editing interface. And I think that WordPress is forging its own path rather than replicating something that already exists.<\/p>\n\n\n\n<p>Perhaps WordPress&#8217;s editor will become the new &#8220;standard&#8221; block editor interface. Perhaps, in future, we will say to people &#8220;It&#8217;s just like WordPress&#8221;.<\/p>\n\n\n\n<p>But right now we are making new things that haven&#8217;t existed before. They are WAY more complex than what we had before. And we lack a known visual language for what we are making. And it&#8217;s VERY confusing.<\/p>\n",
                "protected": false
            },
            "excerpt": {
                "rendered": "<p>Blocks are a new paradigm. They need complex new user interfaces. And we don&#8217;t have a common visual language for them.<\/p>\n",
                "protected": false
            },
            "author": 2,
            "featured_media": 10127,
            "comment_status": "open",
            "ping_status": "closed",
            "sticky": false,
            "template": "",
            "format": "standard",
            "meta": {
                "sig_custom_text": "",
                "sig_image_type": "featured-image",
                "sig_custom_image": 0,
                "sig_is_disabled": false,
                "url": "",
                "footnotes": ""
            },
            "categories": [
                23,
                24,
                639
            ],
            "tags": [
                540,
                677,
                462
            ],
            "yoast_head": "<!-- This site is optimized with the Yoast SEO plugin v21.7 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>We need a common visual language for block editing - Ross Wintle<\/title>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/rosswintle.uk\/2021\/04\/we-need-a-common-visual-language-for-block-editing\/\" \/>\n<meta property=\"og:locale\" content=\"en_GB\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"We need a common visual language for block editing - Ross Wintle\" \/>\n<meta property=\"og:description\" content=\"Blocks are a new paradigm. They need complex new user interfaces. And we don&#039;t have a common visual language for them.\" \/>\n<meta property=\"og:url\" content=\"https:\/\/rosswintle.uk\/2021\/04\/we-need-a-common-visual-language-for-block-editing\/\" \/>\n<meta property=\"og:site_name\" content=\"Ross Wintle\" \/>\n<meta property=\"article:published_time\" content=\"2021-04-18T09:25:23+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2021-04-18T09:25:26+00:00\" \/>\n<meta property=\"og:image\" content=\"https:\/\/rosswintle.uk\/wp-content\/uploads\/2021\/04\/iconsiconsicons.png\" \/>\n\t<meta property=\"og:image:width\" content=\"712\" \/>\n\t<meta property=\"og:image:height\" content=\"307\" \/>\n\t<meta property=\"og:image:type\" content=\"image\/png\" \/>\n<meta name=\"author\" content=\"Ross Wintle\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:creator\" content=\"@magicroundabout\" \/>\n<meta name=\"twitter:site\" content=\"@magicroundabout\" \/>\n<meta name=\"twitter:label1\" content=\"Written by\" \/>\n\t<meta name=\"twitter:data1\" content=\"Ross Wintle\" \/>\n\t<meta name=\"twitter:label2\" content=\"Estimated reading time\" \/>\n\t<meta name=\"twitter:data2\" content=\"3 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"https:\/\/rosswintle.uk\/2021\/04\/we-need-a-common-visual-language-for-block-editing\/\",\"url\":\"https:\/\/rosswintle.uk\/2021\/04\/we-need-a-common-visual-language-for-block-editing\/\",\"name\":\"We need a common visual language for block editing - Ross Wintle\",\"isPartOf\":{\"@id\":\"https:\/\/rosswintle.uk\/#website\"},\"datePublished\":\"2021-04-18T09:25:23+00:00\",\"dateModified\":\"2021-04-18T09:25:26+00:00\",\"author\":{\"@id\":\"https:\/\/rosswintle.uk\/#\/schema\/person\/9f9bec147b2bfd762f09a2c2da7177dc\"},\"breadcrumb\":{\"@id\":\"https:\/\/rosswintle.uk\/2021\/04\/we-need-a-common-visual-language-for-block-editing\/#breadcrumb\"},\"inLanguage\":\"en-GB\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/rosswintle.uk\/2021\/04\/we-need-a-common-visual-language-for-block-editing\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/rosswintle.uk\/2021\/04\/we-need-a-common-visual-language-for-block-editing\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/rosswintle.uk\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"We need a common visual language for block editing\"}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/rosswintle.uk\/#website\",\"url\":\"https:\/\/rosswintle.uk\/\",\"name\":\"Ross Wintle\",\"description\":\"Creativity, curiosity, and code\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/rosswintle.uk\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-GB\"},{\"@type\":\"Person\",\"@id\":\"https:\/\/rosswintle.uk\/#\/schema\/person\/9f9bec147b2bfd762f09a2c2da7177dc\",\"name\":\"Ross Wintle\",\"image\":{\"@type\":\"ImageObject\",\"inLanguage\":\"en-GB\",\"@id\":\"https:\/\/rosswintle.uk\/#\/schema\/person\/image\/\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/28519fc7c37998eea059b525da5fc7ce?s=96&d=identicon&r=g\",\"contentUrl\":\"https:\/\/secure.gravatar.com\/avatar\/28519fc7c37998eea059b525da5fc7ce?s=96&d=identicon&r=g\",\"caption\":\"Ross Wintle\"},\"url\":\"https:\/\/rosswintle.uk\/author\/rosswintle\/\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->",
            "yoast_head_json": {
                "title": "We need a common visual language for block editing - Ross Wintle",
                "robots": {
                    "index": "index",
                    "follow": "follow",
                    "max-snippet": "max-snippet:-1",
                    "max-image-preview": "max-image-preview:large",
                    "max-video-preview": "max-video-preview:-1"
                },
                "canonical": "https:\/\/rosswintle.uk\/2021\/04\/we-need-a-common-visual-language-for-block-editing\/",
                "og_locale": "en_GB",
                "og_type": "article",
                "og_title": "We need a common visual language for block editing - Ross Wintle",
                "og_description": "Blocks are a new paradigm. They need complex new user interfaces. And we don't have a common visual language for them.",
                "og_url": "https:\/\/rosswintle.uk\/2021\/04\/we-need-a-common-visual-language-for-block-editing\/",
                "og_site_name": "Ross Wintle",
                "article_published_time": "2021-04-18T09:25:23+00:00",
                "article_modified_time": "2021-04-18T09:25:26+00:00",
                "og_image": [
                    {
                        "width": 712,
                        "height": 307,
                        "url": "https:\/\/rosswintle.uk\/wp-content\/uploads\/2021\/04\/iconsiconsicons.png",
                        "type": "image\/png"
                    }
                ],
                "author": "Ross Wintle",
                "twitter_card": "summary_large_image",
                "twitter_creator": "@magicroundabout",
                "twitter_site": "@magicroundabout",
                "twitter_misc": {
                    "Written by": "Ross Wintle",
                    "Estimated reading time": "3 minutes"
                },
                "schema": {
                    "@context": "https:\/\/schema.org",
                    "@graph": [
                        {
                            "@type": "WebPage",
                            "@id": "https:\/\/rosswintle.uk\/2021\/04\/we-need-a-common-visual-language-for-block-editing\/",
                            "url": "https:\/\/rosswintle.uk\/2021\/04\/we-need-a-common-visual-language-for-block-editing\/",
                            "name": "We need a common visual language for block editing - Ross Wintle",
                            "isPartOf": {
                                "@id": "https:\/\/rosswintle.uk\/#website"
                            },
                            "datePublished": "2021-04-18T09:25:23+00:00",
                            "dateModified": "2021-04-18T09:25:26+00:00",
                            "author": {
                                "@id": "https:\/\/rosswintle.uk\/#\/schema\/person\/9f9bec147b2bfd762f09a2c2da7177dc"
                            },
                            "breadcrumb": {
                                "@id": "https:\/\/rosswintle.uk\/2021\/04\/we-need-a-common-visual-language-for-block-editing\/#breadcrumb"
                            },
                            "inLanguage": "en-GB",
                            "potentialAction": [
                                {
                                    "@type": "ReadAction",
                                    "target": [
                                        "https:\/\/rosswintle.uk\/2021\/04\/we-need-a-common-visual-language-for-block-editing\/"
                                    ]
                                }
                            ]
                        },
                        {
                            "@type": "BreadcrumbList",
                            "@id": "https:\/\/rosswintle.uk\/2021\/04\/we-need-a-common-visual-language-for-block-editing\/#breadcrumb",
                            "itemListElement": [
                                {
                                    "@type": "ListItem",
                                    "position": 1,
                                    "name": "Home",
                                    "item": "https:\/\/rosswintle.uk\/"
                                },
                                {
                                    "@type": "ListItem",
                                    "position": 2,
                                    "name": "We need a common visual language for block editing"
                                }
                            ]
                        },
                        {
                            "@type": "WebSite",
                            "@id": "https:\/\/rosswintle.uk\/#website",
                            "url": "https:\/\/rosswintle.uk\/",
                            "name": "Ross Wintle",
                            "description": "Creativity, curiosity, and code",
                            "potentialAction": [
                                {
                                    "@type": "SearchAction",
                                    "target": {
                                        "@type": "EntryPoint",
                                        "urlTemplate": "https:\/\/rosswintle.uk\/?s={search_term_string}"
                                    },
                                    "query-input": "required name=search_term_string"
                                }
                            ],
                            "inLanguage": "en-GB"
                        },
                        {
                            "@type": "Person",
                            "@id": "https:\/\/rosswintle.uk\/#\/schema\/person\/9f9bec147b2bfd762f09a2c2da7177dc",
                            "name": "Ross Wintle",
                            "image": {
                                "@type": "ImageObject",
                                "inLanguage": "en-GB",
                                "@id": "https:\/\/rosswintle.uk\/#\/schema\/person\/image\/",
                                "url": "https:\/\/secure.gravatar.com\/avatar\/28519fc7c37998eea059b525da5fc7ce?s=96&d=identicon&r=g",
                                "contentUrl": "https:\/\/secure.gravatar.com\/avatar\/28519fc7c37998eea059b525da5fc7ce?s=96&d=identicon&r=g",
                                "caption": "Ross Wintle"
                            },
                            "url": "https:\/\/rosswintle.uk\/author\/rosswintle\/"
                        }
                    ]
                }
            },
            "_links": {
                "self": [
                    {
                        "href": "https:\/\/rosswintle.uk\/wp-json\/wp\/v2\/posts\/10126"
                    }
                ],
                "collection": [
                    {
                        "href": "https:\/\/rosswintle.uk\/wp-json\/wp\/v2\/posts"
                    }
                ],
                "about": [
                    {
                        "href": "https:\/\/rosswintle.uk\/wp-json\/wp\/v2\/types\/post"
                    }
                ],
                "author": [
                    {
                        "embeddable": true,
                        "href": "https:\/\/rosswintle.uk\/wp-json\/wp\/v2\/users\/2"
                    }
                ],
                "replies": [
                    {
                        "embeddable": true,
                        "href": "https:\/\/rosswintle.uk\/wp-json\/wp\/v2\/comments?post=10126"
                    }
                ],
                "version-history": [
                    {
                        "count": 1,
                        "href": "https:\/\/rosswintle.uk\/wp-json\/wp\/v2\/posts\/10126\/revisions"
                    }
                ],
                "predecessor-version": [
                    {
                        "id": 10129,
                        "href": "https:\/\/rosswintle.uk\/wp-json\/wp\/v2\/posts\/10126\/revisions\/10129"
                    }
                ],
                "wp:featuredmedia": [
                    {
                        "embeddable": true,
                        "href": "https:\/\/rosswintle.uk\/wp-json\/wp\/v2\/media\/10127"
                    }
                ],
                "wp:attachment": [
                    {
                        "href": "https:\/\/rosswintle.uk\/wp-json\/wp\/v2\/media?parent=10126"
                    }
                ],
                "wp:term": [
                    {
                        "taxonomy": "category",
                        "embeddable": true,
                        "href": "https:\/\/rosswintle.uk\/wp-json\/wp\/v2\/categories?post=10126"
                    },
                    {
                        "taxonomy": "post_tag",
                        "embeddable": true,
                        "href": "https:\/\/rosswintle.uk\/wp-json\/wp\/v2\/tags?post=10126"
                    }
                ],
                "curies": [
                    {
                        "name": "wp",
                        "href": "https:\/\/api.w.org\/{rel}",
                        "templated": true
                    }
                ]
            }
        },
        "id": 10126,
        "dateGmt": "2021-04-18T09:25:23",
        "modifiedDateGmt": "2021-04-18T09:25:26",
        "slug": "we-need-a-common-visual-language-for-block-editing",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/rosswintle.uk\/2021\/04\/we-need-a-common-visual-language-for-block-editing\/",
        "title": "We need a common visual language for block editing",
        "content": "\n<p><em>Blocks are a new paradigm. They need complex new user interfaces. And we don&#8217;t have a common visual language for them.<\/em><\/p>\n\n\n\n<p>I&#8217;m spending my Saturday morning &#8220;TV&#8221; time watching the <a href=\"https:\/\/wordpress.tv\/2021\/04\/14\/april-14-2021-fse-demo\/\">WordPress &#8220;Full Site Editing&#8221; demo<\/a>.<\/p>\n\n\n\n<p>Now&#8230; I should say some things up front.<\/p>\n\n\n\n<ol><li>I&#8217;m an old dude now. I don&#8217;t like change. I&#8217;m also a sensitive person who thinks things through deeply. I doubly don&#8217;t like change. I know this.<\/li><li>I have every respect for the people designing and building the block editor. It&#8217;s a complex piece of software with a complex interface. What they are doing is hard.<\/li><li>I&#8217;m well aware that this is unfinished work.<\/li><\/ol>\n\n\n\n<p>But &#8230; I&#8217;m watching this video, and I&#8217;m completely baffled about what is going on. There is lots of talk of refining the UI in the video, of stuff that needs to be done before this is ready. But I&#8217;m so confused. And I&#8217;m an expert at this stuff who is confident with IT and computers and things.<\/p>\n\n\n\n<p>So what is wrong?<\/p>\n\n\n\n<p>I&#8217;m looking at the UI of this thing. The myriad icons.<\/p>\n\n\n\n<figure class=\"wp-block-image size-large is-resized\"><img loading=\"lazy\" decoding=\"async\" src=\"https:\/\/rosswintle.uk\/wp-content\/uploads\/2021\/04\/iconsiconsicons.png\" alt=\"\" class=\"wp-image-10127\" width=\"454\" height=\"196\" srcset=\"https:\/\/rosswintle.uk\/wp-content\/uploads\/2021\/04\/iconsiconsicons.png 712w, https:\/\/rosswintle.uk\/wp-content\/uploads\/2021\/04\/iconsiconsicons-300x129.png 300w\" sizes=\"(max-width: 454px) 100vw, 454px\" \/><\/figure>\n\n\n\n<p>The primary, secondary and tertiary tools for blocks that appear scattered across the inline interface, the pop-up toolbar (which I have hated since day one), and the sidebar.<\/p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" decoding=\"async\" width=\"1024\" height=\"575\" src=\"https:\/\/rosswintle.uk\/wp-content\/uploads\/2021\/04\/CleanShot-2021-04-18-at-10.17.40@2x-1024x575.png\" alt=\"\" class=\"wp-image-10128\" srcset=\"https:\/\/rosswintle.uk\/wp-content\/uploads\/2021\/04\/CleanShot-2021-04-18-at-10.17.40@2x-1024x575.png 1024w, https:\/\/rosswintle.uk\/wp-content\/uploads\/2021\/04\/CleanShot-2021-04-18-at-10.17.40@2x-300x169.png 300w, https:\/\/rosswintle.uk\/wp-content\/uploads\/2021\/04\/CleanShot-2021-04-18-at-10.17.40@2x-768x432.png 768w, https:\/\/rosswintle.uk\/wp-content\/uploads\/2021\/04\/CleanShot-2021-04-18-at-10.17.40@2x-1536x863.png 1536w, https:\/\/rosswintle.uk\/wp-content\/uploads\/2021\/04\/CleanShot-2021-04-18-at-10.17.40@2x-2048x1151.png 2048w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" \/><\/figure>\n\n\n\n<p>And I want to be able to understand and use these tools.<\/p>\n\n\n\n<p>So I&#8217;m thinking: why is this so hard. The classic editor was so much easier.<\/p>\n\n\n\n<p>And the classic editor was partly easier because it was simpler. But it was also easier because it was familiar. I could say to people &#8220;It&#8217;s just like Microsoft Word&#8221; and they understood. Because the tools and icons were familiar.<\/p>\n\n\n\n<p>What we dont have right now is a common visual language for all this block editing interface. And I think that WordPress is forging its own path rather than replicating something that already exists.<\/p>\n\n\n\n<p>Perhaps WordPress&#8217;s editor will become the new &#8220;standard&#8221; block editor interface. Perhaps, in future, we will say to people &#8220;It&#8217;s just like WordPress&#8221;.<\/p>\n\n\n\n<p>But right now we are making new things that haven&#8217;t existed before. They are WAY more complex than what we had before. And we lack a known visual language for what we are making. And it&#8217;s VERY confusing.<\/p>\n",
        "excerpt": "<p>Blocks are a new paradigm. They need complex new user interfaces. And we don&#8217;t have a common visual language for them.<\/p>\n",
        "parentId": 0,
        "authorId": 2,
        "featuredMediaId": 10127
    },
    {
        "dataAsArray": {
            "id": 10108,
            "date": "2021-04-12T20:50:52",
            "date_gmt": "2021-04-12T19:50:52",
            "guid": {
                "rendered": "https:\/\/rosswintle.uk\/?p=10108"
            },
            "modified": "2021-04-12T20:56:58",
            "modified_gmt": "2021-04-12T19:56:58",
            "slug": "tweet-finder-twitter-advanced-search",
            "status": "publish",
            "type": "post",
            "link": "https:\/\/rosswintle.uk\/2021\/04\/tweet-finder-twitter-advanced-search\/",
            "title": {
                "rendered": "Mini Project: Tweet Finder &#8211; Twitter Advanced Search"
            },
            "content": {
                "rendered": "\n<p><em>How and why I made <a href=\"https:\/\/tweet-finder.veryuseful.app\/\">a simple interface for Twitter&#8217;s advanced search<\/a>.<\/em><\/p>\n\n\n\n<p>This has been on my mind for ages.<\/p>\n\n\n\n<p>I often search for Tweets that I remember seeing. And Twitter has this advanced search that lets you search Tweets from and to specific users, on or between specific dates, mentioning specific users or hashtags, and some other things.<\/p>\n\n\n\n<p>This advanced search is hard to get to: you need to do a simple search, and then click the settings dots, and then select &#8220;Advanced search&#8221; and THEN you get a pop up with the options.<\/p>\n\n\n\n<figure class=\"wp-block-embed is-type-video is-provider-vimeo wp-block-embed-vimeo\"><div class=\"wp-block-embed__wrapper\">\n<iframe loading=\"lazy\" title=\"Twitter Advanced Search - getting to it!\" src=\"https:\/\/player.vimeo.com\/video\/536005074?dnt=1&amp;app_id=122963\" width=\"640\" height=\"373\" frameborder=\"0\" allow=\"autoplay; fullscreen; picture-in-picture\" allowfullscreen><\/iframe>\n<\/div><\/figure>\n\n\n\n<p>So it&#8217;s hard to get to. But it&#8217;s also hard to use.<\/p>\n\n\n\n<ul><li>I have to think twice about whether or not usernames need @&#8217;s before them;<\/li><li>once you&#8217;ve done a search, it defaults to &#8220;Top&#8221; Tweets, which i rarely want;<\/li><li>the options pop-up resets itself so refining your search is tricky.<\/li><\/ul>\n\n\n\n<figure class=\"wp-block-embed is-type-video is-provider-vimeo wp-block-embed-vimeo\"><div class=\"wp-block-embed__wrapper\">\n<iframe loading=\"lazy\" title=\"Advanced Twitter Search - weird options experience\" src=\"https:\/\/player.vimeo.com\/video\/536009269?dnt=1&amp;app_id=122963\" width=\"640\" height=\"373\" frameborder=\"0\" allow=\"autoplay; fullscreen; picture-in-picture\" allowfullscreen><\/iframe>\n<\/div><\/figure>\n\n\n\n<p>So I&#8217;ve had this idea for a while that someone could probably pretty easily figure out how the parameters are sent to Twitter&#8217;s search page and create a simpler interface.<\/p>\n\n\n\n<p>And, though I&#8217;m sure someone must have done it before, that&#8217;s exactly what I did.<\/p>\n\n\n\n<p>I&#8217;ve started with the options I use most. Condensed the search query into a single field with explainer, and added &#8220;from account&#8221; and &#8220;to account&#8221;. This covers quite a lot of bases:<\/p>\n\n\n\n<ul><li>Find that Tweet I sent about&#8230;<\/li><li>Find that Tweet I sent to @specific_person about&#8230;<\/li><li>Find that Tweet someone sent to me about&#8230;<\/li><li>Find that Tweet the @specifc_person sent to me about&#8230;<\/li><li>Find that recent conversation I had with @specific_person<\/li><\/ul>\n\n\n\n<p>I figured out the parameters, created a form, gave it some styling and shoved it online using <a href=\"https:\/\/netlify.com\/\">Netlify<\/a> &#8211; it&#8217;s only a single HTML file and some Tailwind styles so static hosting is fine.<\/p>\n\n\n\n<p>Try it at <a href=\"https:\/\/tweet-finder.veryuseful.app\/\">https:\/\/tweet-finder.veryuseful.app\/<\/a><\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Creator notes<\/h2>\n\n\n\n<p>Creating the form was pretty simple.<\/p>\n\n\n\n<p>I had to use a bit of vanilla JavaScript to improve the experience: adding @&#8217;s to usernames where they aren&#8217;t provided so that you don&#8217;t have to think about it and compiling the form data into a query string.<\/p>\n\n\n\n<p>When it came to styling, it was total overkill, but I wanted to see how easy it was to add TailwindCSS to such a simple project.<\/p>\n\n\n\n<p>Initially I got confused by <a href=\"https:\/\/tailwindcss.com\/docs\/installation\">the documentation<\/a> which very much assumes you&#8217;re already using a framework or build tool, or otherwise have PostCSS in a toolchain somehow.<\/p>\n\n\n\n<p>I was about to give up but eventually found the &#8220;<a href=\"https:\/\/tailwindcss.com\/docs\/installation#using-tailwind-without-post-css\">Using Tailwind without PostCSS<\/a>&#8221; section. This is really not that hard to find but for some reason I ignored it the first time I read through. Maybe I thought this was about the &#8220;include vast amounts of CSS using <a href=\"https:\/\/tailwindcss.com\/docs\/installation#using-tailwind-via-cdn\">the CDN version<\/a>&#8221; approach? Not sure.<\/p>\n\n\n\n<p>Anyway, with a simple <code>npx<\/code> command (once you&#8217;ve got node and everything sorted out) you can get going.<\/p>\n\n\n\n<p>I wanted to use <a href=\"https:\/\/github.com\/tailwindlabs\/tailwindcss-forms\">the forms plugin<\/a> so I had to <a href=\"https:\/\/tailwindcss.com\/docs\/installation#customizing-your-configuration\">init myself a Tailwind config file<\/a>, create a <a href=\"https:\/\/github.com\/rosswintle\/tweet-finder\/blob\/main\/src\/tailwind.css\">boilerplate custom CSS file<\/a>, create a <code>package.json<\/code> (did the <code>npx<\/code> command do this for me?) and add <code>@tailwindcss\/forms<\/code> to it as a dependency.<\/p>\n\n\n\n<p>Suddenly I was doing a lot, and I now had custom build commands to remember, so I added these to my <code>package.json<\/code> too:<\/p>\n\n\n<div class=\"wp-block-syntaxhighlighter-code \"><pre class=\"brush: jscript; title: ; notranslate\" title=\"\">\n&quot;scripts&quot;: {\n    &quot;build&quot;: &quot;npx tailwindcss-cli@latest build .\/src\/tailwind.css -o .\/dist\/tailwind.css&quot;,\n    &quot;prod&quot;: &quot;NODE_ENV=production npx tailwindcss-cli@latest build .\/src\/tailwind.css -o .\/dist\/tailwind.css&quot;\n  },\n<\/pre><\/div>\n\n\n<p>So I can now <code>npm run build<\/code> or <code>npm run prod<\/code> to get what I need.<\/p>\n\n\n\n<p>I don&#8217;t have a hot-reloading dev environment or anything, but don&#8217;t really need that for this single-page HTML thing.<\/p>\n\n\n\n<p>And yes, let me say it again, Tailwind IS overkill, and it&#8217;s technical debt, and I&#8217;m generally against build processes for simple websites, but, hey, we learned some stuff, right! That was the aim.<\/p>\n\n\n\n<p>You can see <a href=\"https:\/\/github.com\/rosswintle\/tweet-finder\/\">the code on GitHub<\/a>.<\/p>\n\n\n\n<p>And dont forget to use the search at <a href=\"https:\/\/tweet-finder.veryuseful.app\/\">tweet-finder.veryuseful.app<\/a> !<\/p>\n",
                "protected": false
            },
            "excerpt": {
                "rendered": "<p>How and why I made a simple interface for Twitter&#8217;s advanced search.<\/p>\n",
                "protected": false
            },
            "author": 2,
            "featured_media": 10114,
            "comment_status": "open",
            "ping_status": "closed",
            "sticky": false,
            "template": "",
            "format": "standard",
            "meta": {
                "sig_custom_text": "",
                "sig_image_type": "featured-image",
                "sig_custom_image": 0,
                "sig_is_disabled": false,
                "url": "",
                "footnotes": ""
            },
            "categories": [
                23
            ],
            "tags": [
                286,
                5062,
                5063,
                5061,
                172
            ],
            "yoast_head": "<!-- This site is optimized with the Yoast SEO plugin v21.7 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>Mini Project: Tweet Finder - Twitter Advanced Search - Ross Wintle<\/title>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/rosswintle.uk\/2021\/04\/tweet-finder-twitter-advanced-search\/\" \/>\n<meta property=\"og:locale\" content=\"en_GB\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"Mini Project: Tweet Finder - Twitter Advanced Search - Ross Wintle\" \/>\n<meta property=\"og:description\" content=\"How and why I made a simple interface for Twitter&#039;s advanced search.\" \/>\n<meta property=\"og:url\" content=\"https:\/\/rosswintle.uk\/2021\/04\/tweet-finder-twitter-advanced-search\/\" \/>\n<meta property=\"og:site_name\" content=\"Ross Wintle\" \/>\n<meta property=\"article:published_time\" content=\"2021-04-12T19:50:52+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2021-04-12T19:56:58+00:00\" \/>\n<meta property=\"og:image\" content=\"https:\/\/rosswintle.uk\/wp-content\/uploads\/2021\/04\/CleanShot-2021-04-12-at-20.54.07@2x.png\" \/>\n\t<meta property=\"og:image:width\" content=\"1422\" \/>\n\t<meta property=\"og:image:height\" content=\"1396\" \/>\n\t<meta property=\"og:image:type\" content=\"image\/png\" \/>\n<meta name=\"author\" content=\"Ross Wintle\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:creator\" content=\"@magicroundabout\" \/>\n<meta name=\"twitter:site\" content=\"@magicroundabout\" \/>\n<meta name=\"twitter:label1\" content=\"Written by\" \/>\n\t<meta name=\"twitter:data1\" content=\"Ross Wintle\" \/>\n\t<meta name=\"twitter:label2\" content=\"Estimated reading time\" \/>\n\t<meta name=\"twitter:data2\" content=\"3 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"https:\/\/rosswintle.uk\/2021\/04\/tweet-finder-twitter-advanced-search\/\",\"url\":\"https:\/\/rosswintle.uk\/2021\/04\/tweet-finder-twitter-advanced-search\/\",\"name\":\"Mini Project: Tweet Finder - Twitter Advanced Search - Ross Wintle\",\"isPartOf\":{\"@id\":\"https:\/\/rosswintle.uk\/#website\"},\"datePublished\":\"2021-04-12T19:50:52+00:00\",\"dateModified\":\"2021-04-12T19:56:58+00:00\",\"author\":{\"@id\":\"https:\/\/rosswintle.uk\/#\/schema\/person\/9f9bec147b2bfd762f09a2c2da7177dc\"},\"breadcrumb\":{\"@id\":\"https:\/\/rosswintle.uk\/2021\/04\/tweet-finder-twitter-advanced-search\/#breadcrumb\"},\"inLanguage\":\"en-GB\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/rosswintle.uk\/2021\/04\/tweet-finder-twitter-advanced-search\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/rosswintle.uk\/2021\/04\/tweet-finder-twitter-advanced-search\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/rosswintle.uk\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"Mini Project: Tweet Finder &#8211; Twitter Advanced Search\"}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/rosswintle.uk\/#website\",\"url\":\"https:\/\/rosswintle.uk\/\",\"name\":\"Ross Wintle\",\"description\":\"Creativity, curiosity, and code\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/rosswintle.uk\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-GB\"},{\"@type\":\"Person\",\"@id\":\"https:\/\/rosswintle.uk\/#\/schema\/person\/9f9bec147b2bfd762f09a2c2da7177dc\",\"name\":\"Ross Wintle\",\"image\":{\"@type\":\"ImageObject\",\"inLanguage\":\"en-GB\",\"@id\":\"https:\/\/rosswintle.uk\/#\/schema\/person\/image\/\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/28519fc7c37998eea059b525da5fc7ce?s=96&d=identicon&r=g\",\"contentUrl\":\"https:\/\/secure.gravatar.com\/avatar\/28519fc7c37998eea059b525da5fc7ce?s=96&d=identicon&r=g\",\"caption\":\"Ross Wintle\"},\"url\":\"https:\/\/rosswintle.uk\/author\/rosswintle\/\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->",
            "yoast_head_json": {
                "title": "Mini Project: Tweet Finder - Twitter Advanced Search - Ross Wintle",
                "robots": {
                    "index": "index",
                    "follow": "follow",
                    "max-snippet": "max-snippet:-1",
                    "max-image-preview": "max-image-preview:large",
                    "max-video-preview": "max-video-preview:-1"
                },
                "canonical": "https:\/\/rosswintle.uk\/2021\/04\/tweet-finder-twitter-advanced-search\/",
                "og_locale": "en_GB",
                "og_type": "article",
                "og_title": "Mini Project: Tweet Finder - Twitter Advanced Search - Ross Wintle",
                "og_description": "How and why I made a simple interface for Twitter's advanced search.",
                "og_url": "https:\/\/rosswintle.uk\/2021\/04\/tweet-finder-twitter-advanced-search\/",
                "og_site_name": "Ross Wintle",
                "article_published_time": "2021-04-12T19:50:52+00:00",
                "article_modified_time": "2021-04-12T19:56:58+00:00",
                "og_image": [
                    {
                        "width": 1422,
                        "height": 1396,
                        "url": "https:\/\/rosswintle.uk\/wp-content\/uploads\/2021\/04\/CleanShot-2021-04-12-at-20.54.07@2x.png",
                        "type": "image\/png"
                    }
                ],
                "author": "Ross Wintle",
                "twitter_card": "summary_large_image",
                "twitter_creator": "@magicroundabout",
                "twitter_site": "@magicroundabout",
                "twitter_misc": {
                    "Written by": "Ross Wintle",
                    "Estimated reading time": "3 minutes"
                },
                "schema": {
                    "@context": "https:\/\/schema.org",
                    "@graph": [
                        {
                            "@type": "WebPage",
                            "@id": "https:\/\/rosswintle.uk\/2021\/04\/tweet-finder-twitter-advanced-search\/",
                            "url": "https:\/\/rosswintle.uk\/2021\/04\/tweet-finder-twitter-advanced-search\/",
                            "name": "Mini Project: Tweet Finder - Twitter Advanced Search - Ross Wintle",
                            "isPartOf": {
                                "@id": "https:\/\/rosswintle.uk\/#website"
                            },
                            "datePublished": "2021-04-12T19:50:52+00:00",
                            "dateModified": "2021-04-12T19:56:58+00:00",
                            "author": {
                                "@id": "https:\/\/rosswintle.uk\/#\/schema\/person\/9f9bec147b2bfd762f09a2c2da7177dc"
                            },
                            "breadcrumb": {
                                "@id": "https:\/\/rosswintle.uk\/2021\/04\/tweet-finder-twitter-advanced-search\/#breadcrumb"
                            },
                            "inLanguage": "en-GB",
                            "potentialAction": [
                                {
                                    "@type": "ReadAction",
                                    "target": [
                                        "https:\/\/rosswintle.uk\/2021\/04\/tweet-finder-twitter-advanced-search\/"
                                    ]
                                }
                            ]
                        },
                        {
                            "@type": "BreadcrumbList",
                            "@id": "https:\/\/rosswintle.uk\/2021\/04\/tweet-finder-twitter-advanced-search\/#breadcrumb",
                            "itemListElement": [
                                {
                                    "@type": "ListItem",
                                    "position": 1,
                                    "name": "Home",
                                    "item": "https:\/\/rosswintle.uk\/"
                                },
                                {
                                    "@type": "ListItem",
                                    "position": 2,
                                    "name": "Mini Project: Tweet Finder &#8211; Twitter Advanced Search"
                                }
                            ]
                        },
                        {
                            "@type": "WebSite",
                            "@id": "https:\/\/rosswintle.uk\/#website",
                            "url": "https:\/\/rosswintle.uk\/",
                            "name": "Ross Wintle",
                            "description": "Creativity, curiosity, and code",
                            "potentialAction": [
                                {
                                    "@type": "SearchAction",
                                    "target": {
                                        "@type": "EntryPoint",
                                        "urlTemplate": "https:\/\/rosswintle.uk\/?s={search_term_string}"
                                    },
                                    "query-input": "required name=search_term_string"
                                }
                            ],
                            "inLanguage": "en-GB"
                        },
                        {
                            "@type": "Person",
                            "@id": "https:\/\/rosswintle.uk\/#\/schema\/person\/9f9bec147b2bfd762f09a2c2da7177dc",
                            "name": "Ross Wintle",
                            "image": {
                                "@type": "ImageObject",
                                "inLanguage": "en-GB",
                                "@id": "https:\/\/rosswintle.uk\/#\/schema\/person\/image\/",
                                "url": "https:\/\/secure.gravatar.com\/avatar\/28519fc7c37998eea059b525da5fc7ce?s=96&d=identicon&r=g",
                                "contentUrl": "https:\/\/secure.gravatar.com\/avatar\/28519fc7c37998eea059b525da5fc7ce?s=96&d=identicon&r=g",
                                "caption": "Ross Wintle"
                            },
                            "url": "https:\/\/rosswintle.uk\/author\/rosswintle\/"
                        }
                    ]
                }
            },
            "_links": {
                "self": [
                    {
                        "href": "https:\/\/rosswintle.uk\/wp-json\/wp\/v2\/posts\/10108"
                    }
                ],
                "collection": [
                    {
                        "href": "https:\/\/rosswintle.uk\/wp-json\/wp\/v2\/posts"
                    }
                ],
                "about": [
                    {
                        "href": "https:\/\/rosswintle.uk\/wp-json\/wp\/v2\/types\/post"
                    }
                ],
                "author": [
                    {
                        "embeddable": true,
                        "href": "https:\/\/rosswintle.uk\/wp-json\/wp\/v2\/users\/2"
                    }
                ],
                "replies": [
                    {
                        "embeddable": true,
                        "href": "https:\/\/rosswintle.uk\/wp-json\/wp\/v2\/comments?post=10108"
                    }
                ],
                "version-history": [
                    {
                        "count": 5,
                        "href": "https:\/\/rosswintle.uk\/wp-json\/wp\/v2\/posts\/10108\/revisions"
                    }
                ],
                "predecessor-version": [
                    {
                        "id": 10113,
                        "href": "https:\/\/rosswintle.uk\/wp-json\/wp\/v2\/posts\/10108\/revisions\/10113"
                    }
                ],
                "wp:featuredmedia": [
                    {
                        "embeddable": true,
                        "href": "https:\/\/rosswintle.uk\/wp-json\/wp\/v2\/media\/10114"
                    }
                ],
                "wp:attachment": [
                    {
                        "href": "https:\/\/rosswintle.uk\/wp-json\/wp\/v2\/media?parent=10108"
                    }
                ],
                "wp:term": [
                    {
                        "taxonomy": "category",
                        "embeddable": true,
                        "href": "https:\/\/rosswintle.uk\/wp-json\/wp\/v2\/categories?post=10108"
                    },
                    {
                        "taxonomy": "post_tag",
                        "embeddable": true,
                        "href": "https:\/\/rosswintle.uk\/wp-json\/wp\/v2\/tags?post=10108"
                    }
                ],
                "curies": [
                    {
                        "name": "wp",
                        "href": "https:\/\/api.w.org\/{rel}",
                        "templated": true
                    }
                ]
            }
        },
        "id": 10108,
        "dateGmt": "2021-04-12T19:50:52",
        "modifiedDateGmt": "2021-04-12T19:56:58",
        "slug": "tweet-finder-twitter-advanced-search",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/rosswintle.uk\/2021\/04\/tweet-finder-twitter-advanced-search\/",
        "title": "Mini Project: Tweet Finder &#8211; Twitter Advanced Search",
        "content": "\n<p><em>How and why I made <a href=\"https:\/\/tweet-finder.veryuseful.app\/\">a simple interface for Twitter&#8217;s advanced search<\/a>.<\/em><\/p>\n\n\n\n<p>This has been on my mind for ages.<\/p>\n\n\n\n<p>I often search for Tweets that I remember seeing. And Twitter has this advanced search that lets you search Tweets from and to specific users, on or between specific dates, mentioning specific users or hashtags, and some other things.<\/p>\n\n\n\n<p>This advanced search is hard to get to: you need to do a simple search, and then click the settings dots, and then select &#8220;Advanced search&#8221; and THEN you get a pop up with the options.<\/p>\n\n\n\n<figure class=\"wp-block-embed is-type-video is-provider-vimeo wp-block-embed-vimeo\"><div class=\"wp-block-embed__wrapper\">\n<iframe loading=\"lazy\" title=\"Twitter Advanced Search - getting to it!\" src=\"https:\/\/player.vimeo.com\/video\/536005074?dnt=1&amp;app_id=122963\" width=\"640\" height=\"373\" frameborder=\"0\" allow=\"autoplay; fullscreen; picture-in-picture\" allowfullscreen><\/iframe>\n<\/div><\/figure>\n\n\n\n<p>So it&#8217;s hard to get to. But it&#8217;s also hard to use.<\/p>\n\n\n\n<ul><li>I have to think twice about whether or not usernames need @&#8217;s before them;<\/li><li>once you&#8217;ve done a search, it defaults to &#8220;Top&#8221; Tweets, which i rarely want;<\/li><li>the options pop-up resets itself so refining your search is tricky.<\/li><\/ul>\n\n\n\n<figure class=\"wp-block-embed is-type-video is-provider-vimeo wp-block-embed-vimeo\"><div class=\"wp-block-embed__wrapper\">\n<iframe loading=\"lazy\" title=\"Advanced Twitter Search - weird options experience\" src=\"https:\/\/player.vimeo.com\/video\/536009269?dnt=1&amp;app_id=122963\" width=\"640\" height=\"373\" frameborder=\"0\" allow=\"autoplay; fullscreen; picture-in-picture\" allowfullscreen><\/iframe>\n<\/div><\/figure>\n\n\n\n<p>So I&#8217;ve had this idea for a while that someone could probably pretty easily figure out how the parameters are sent to Twitter&#8217;s search page and create a simpler interface.<\/p>\n\n\n\n<p>And, though I&#8217;m sure someone must have done it before, that&#8217;s exactly what I did.<\/p>\n\n\n\n<p>I&#8217;ve started with the options I use most. Condensed the search query into a single field with explainer, and added &#8220;from account&#8221; and &#8220;to account&#8221;. This covers quite a lot of bases:<\/p>\n\n\n\n<ul><li>Find that Tweet I sent about&#8230;<\/li><li>Find that Tweet I sent to @specific_person about&#8230;<\/li><li>Find that Tweet someone sent to me about&#8230;<\/li><li>Find that Tweet the @specifc_person sent to me about&#8230;<\/li><li>Find that recent conversation I had with @specific_person<\/li><\/ul>\n\n\n\n<p>I figured out the parameters, created a form, gave it some styling and shoved it online using <a href=\"https:\/\/netlify.com\/\">Netlify<\/a> &#8211; it&#8217;s only a single HTML file and some Tailwind styles so static hosting is fine.<\/p>\n\n\n\n<p>Try it at <a href=\"https:\/\/tweet-finder.veryuseful.app\/\">https:\/\/tweet-finder.veryuseful.app\/<\/a><\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Creator notes<\/h2>\n\n\n\n<p>Creating the form was pretty simple.<\/p>\n\n\n\n<p>I had to use a bit of vanilla JavaScript to improve the experience: adding @&#8217;s to usernames where they aren&#8217;t provided so that you don&#8217;t have to think about it and compiling the form data into a query string.<\/p>\n\n\n\n<p>When it came to styling, it was total overkill, but I wanted to see how easy it was to add TailwindCSS to such a simple project.<\/p>\n\n\n\n<p>Initially I got confused by <a href=\"https:\/\/tailwindcss.com\/docs\/installation\">the documentation<\/a> which very much assumes you&#8217;re already using a framework or build tool, or otherwise have PostCSS in a toolchain somehow.<\/p>\n\n\n\n<p>I was about to give up but eventually found the &#8220;<a href=\"https:\/\/tailwindcss.com\/docs\/installation#using-tailwind-without-post-css\">Using Tailwind without PostCSS<\/a>&#8221; section. This is really not that hard to find but for some reason I ignored it the first time I read through. Maybe I thought this was about the &#8220;include vast amounts of CSS using <a href=\"https:\/\/tailwindcss.com\/docs\/installation#using-tailwind-via-cdn\">the CDN version<\/a>&#8221; approach? Not sure.<\/p>\n\n\n\n<p>Anyway, with a simple <code>npx<\/code> command (once you&#8217;ve got node and everything sorted out) you can get going.<\/p>\n\n\n\n<p>I wanted to use <a href=\"https:\/\/github.com\/tailwindlabs\/tailwindcss-forms\">the forms plugin<\/a> so I had to <a href=\"https:\/\/tailwindcss.com\/docs\/installation#customizing-your-configuration\">init myself a Tailwind config file<\/a>, create a <a href=\"https:\/\/github.com\/rosswintle\/tweet-finder\/blob\/main\/src\/tailwind.css\">boilerplate custom CSS file<\/a>, create a <code>package.json<\/code> (did the <code>npx<\/code> command do this for me?) and add <code>@tailwindcss\/forms<\/code> to it as a dependency.<\/p>\n\n\n\n<p>Suddenly I was doing a lot, and I now had custom build commands to remember, so I added these to my <code>package.json<\/code> too:<\/p>\n\n\n<div class=\"wp-block-syntaxhighlighter-code \"><pre class=\"brush: jscript; title: ; notranslate\" title=\"\">\n&quot;scripts&quot;: {\n    &quot;build&quot;: &quot;npx tailwindcss-cli@latest build .\/src\/tailwind.css -o .\/dist\/tailwind.css&quot;,\n    &quot;prod&quot;: &quot;NODE_ENV=production npx tailwindcss-cli@latest build .\/src\/tailwind.css -o .\/dist\/tailwind.css&quot;\n  },\n<\/pre><\/div>\n\n\n<p>So I can now <code>npm run build<\/code> or <code>npm run prod<\/code> to get what I need.<\/p>\n\n\n\n<p>I don&#8217;t have a hot-reloading dev environment or anything, but don&#8217;t really need that for this single-page HTML thing.<\/p>\n\n\n\n<p>And yes, let me say it again, Tailwind IS overkill, and it&#8217;s technical debt, and I&#8217;m generally against build processes for simple websites, but, hey, we learned some stuff, right! That was the aim.<\/p>\n\n\n\n<p>You can see <a href=\"https:\/\/github.com\/rosswintle\/tweet-finder\/\">the code on GitHub<\/a>.<\/p>\n\n\n\n<p>And dont forget to use the search at <a href=\"https:\/\/tweet-finder.veryuseful.app\/\">tweet-finder.veryuseful.app<\/a> !<\/p>\n",
        "excerpt": "<p>How and why I made a simple interface for Twitter&#8217;s advanced search.<\/p>\n",
        "parentId": 0,
        "authorId": 2,
        "featuredMediaId": 10114
    },
    {
        "dataAsArray": {
            "id": 10103,
            "date": "2021-04-12T19:22:50",
            "date_gmt": "2021-04-12T18:22:50",
            "guid": {
                "rendered": "https:\/\/rosswintle.uk\/?p=10103"
            },
            "modified": "2021-04-12T19:23:43",
            "modified_gmt": "2021-04-12T18:23:43",
            "slug": "laravel-livewire-testing-object-model-properties-of-components",
            "status": "publish",
            "type": "post",
            "link": "https:\/\/rosswintle.uk\/2021\/04\/laravel-livewire-testing-object-model-properties-of-components\/",
            "title": {
                "rendered": "Tech Notes: Laravel Livewire &#8211; testing object\/model properties of components"
            },
            "content": {
                "rendered": "\n<p>This is a super quick note to my future self &#8211; and you? &#8211; about testing object\/model properties of Laravel Livewire components.<\/p>\n\n\n\n<p>I&#8217;m working on a really simple project and using it as an excuse to practice TDD with Laravel.<\/p>\n\n\n\n<p>I have user-selectable template and my Templates component lets the user select a new template.<\/p>\n\n\n\n<p>My test is pretty simple.<\/p>\n\n\n\n<p>Set up a user and two templates, then assign the first template ID to the user. Note that templates have an owner (<code>$template-&gt;owner_id<\/code>), but the user also has a chosen template (<code>$user-&gt;template_id<\/code>):<\/p>\n\n\n<div class=\"wp-block-syntaxhighlighter-code \"><pre class=\"brush: php; title: ; notranslate\" title=\"\">\n\/\/ Arrange\n$user = User::factory()-&gt;create();\n$template1 = Template::factory()-&gt;create(&#x5B;\n    'owner_id' =&gt; $user-&gt;id,\n]);\n$template2 = Template::factory()-&gt;create(&#x5B;\n    'owner_id' =&gt; $user-&gt;id,\n]);\n$user-&gt;update(&#x5B;'template_id' =&gt; $template1-&gt;id]);\n<\/pre><\/div>\n\n\n<p>Then, acting as the user, test the <code>Templates<\/code> component, call the <code>setUserTemplate<\/code> method then assert that the <code>currentTemplate<\/code> property has changed.<\/p>\n\n\n<div class=\"wp-block-syntaxhighlighter-code \"><pre class=\"brush: plain; title: ; notranslate\" title=\"\">\n\/\/ Act\nLivewire::actingAs($user)\n    -&gt;test(\\App\\Http\\Livewire\\Templates::class)\n    -&gt;call('setUserTemplate', $template2-&gt;id)\n    -&gt;assertSet('currentTemplate', $template2);\n<\/pre><\/div>\n\n\n<p>Before we run the test, I note that the currentTemplate, in the Livewire component, is an Eloquent Model object.<\/p>\n\n\n\n<p>If we run the test we get:<\/p>\n\n\n<div class=\"wp-block-syntaxhighlighter-code \"><pre class=\"brush: plain; title: ; notranslate\" title=\"\">\nFailed asserting that two objects are equal.\n--- Expected\n+++ Actual\n@@ @@\n App\\Models\\Template Object (\n     'connection' =&gt; 'sqlite'\n-    'table' =&gt; null\n+    'table' =&gt; 'templates'\n     'primaryKey' =&gt; 'id'\n     'keyType' =&gt; 'int'\n     'incrementing' =&gt; true\n@@ @@\n     'withCount' =&gt; Array ()\n     'perPage' =&gt; 15\n     'exists' =&gt; true\n-    'wasRecentlyCreated' =&gt; true\n+    'wasRecentlyCreated' =&gt; false\n     'attributes' =&gt; Array (...)\n     'original' =&gt; Array (...)\n     'changes' =&gt; Array ()\n<\/pre><\/div>\n\n\n<p>Showing that the <code>table<\/code> and <code>wasRecentlyCreated<\/code> properties of the Template object. The object properties are the same, but it&#8217;s a slightly different object behind the scenes.<\/p>\n\n\n\n<p>The problem here is that <code>$template2<\/code> is the original template we created using the factory in the test setup. But the <code>currentTemplate<\/code> in the component will have been fetched from the database.<\/p>\n\n\n\n<p>The fix for this it to re-fetch <code>$template2<\/code> from the database before we compare it. We can do this with <code>$template2-&gt;fresh()<\/code><\/p>\n\n\n<div class=\"wp-block-syntaxhighlighter-code \"><pre class=\"brush: php; title: ; notranslate\" title=\"\">\n\/\/ Act\nLivewire::actingAs($user)\n    -&gt;test(\\App\\Http\\Livewire\\Templates::class)\n    -&gt;call('setUserTemplate', $template2-&gt;id)\n    -&gt;assertSet('currentTemplate', $template2-&gt;fresh());\n<\/pre><\/div>\n\n\n<p>This gives us a nice green test:<\/p>\n\n\n<div class=\"wp-block-syntaxhighlighter-code \"><pre class=\"brush: plain; title: ; notranslate\" title=\"\">\nPHPUnit 9.5.2 by Sebastian Bergmann and contributors.\n\n.                                                                   1 \/ 1 (100%)\n\nTime: 00:00.212, Memory: 32.50 MB\n\nOK (1 test, 3 assertions)\n<\/pre><\/div>\n\n\n<p>Hooray!<\/p>\n",
                "protected": false
            },
            "excerpt": {
                "rendered": "<p>A quick tip for testing Laravel Livewire components with object\/model properties.<\/p>\n",
                "protected": false
            },
            "author": 2,
            "featured_media": 0,
            "comment_status": "open",
            "ping_status": "closed",
            "sticky": false,
            "template": "",
            "format": "standard",
            "meta": {
                "sig_custom_text": "",
                "sig_image_type": "featured-image",
                "sig_custom_image": 0,
                "sig_is_disabled": false,
                "url": "",
                "footnotes": ""
            },
            "categories": [
                642,
                23
            ],
            "tags": [],
            "yoast_head": "<!-- This site is optimized with the Yoast SEO plugin v21.7 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>Tech Notes: Laravel Livewire - testing object\/model properties of components - Ross Wintle<\/title>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/rosswintle.uk\/2021\/04\/laravel-livewire-testing-object-model-properties-of-components\/\" \/>\n<meta property=\"og:locale\" content=\"en_GB\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"Tech Notes: Laravel Livewire - testing object\/model properties of components - Ross Wintle\" \/>\n<meta property=\"og:description\" content=\"A quick tip for testing Laravel Livewire components with object\/model properties.\" \/>\n<meta property=\"og:url\" content=\"https:\/\/rosswintle.uk\/2021\/04\/laravel-livewire-testing-object-model-properties-of-components\/\" \/>\n<meta property=\"og:site_name\" content=\"Ross Wintle\" \/>\n<meta property=\"article:published_time\" content=\"2021-04-12T18:22:50+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2021-04-12T18:23:43+00:00\" \/>\n<meta property=\"og:image\" content=\"https:\/\/rosswintle.uk\/wp-content\/uploads\/2012\/06\/DSC_0005-small.jpg\" \/>\n\t<meta property=\"og:image:width\" content=\"600\" \/>\n\t<meta property=\"og:image:height\" content=\"399\" \/>\n\t<meta property=\"og:image:type\" content=\"image\/jpeg\" \/>\n<meta name=\"author\" content=\"Ross Wintle\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:creator\" content=\"@magicroundabout\" \/>\n<meta name=\"twitter:site\" content=\"@magicroundabout\" \/>\n<meta name=\"twitter:label1\" content=\"Written by\" \/>\n\t<meta name=\"twitter:data1\" content=\"Ross Wintle\" \/>\n\t<meta name=\"twitter:label2\" content=\"Estimated reading time\" \/>\n\t<meta name=\"twitter:data2\" content=\"2 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"https:\/\/rosswintle.uk\/2021\/04\/laravel-livewire-testing-object-model-properties-of-components\/\",\"url\":\"https:\/\/rosswintle.uk\/2021\/04\/laravel-livewire-testing-object-model-properties-of-components\/\",\"name\":\"Tech Notes: Laravel Livewire - testing object\/model properties of components - Ross Wintle\",\"isPartOf\":{\"@id\":\"https:\/\/rosswintle.uk\/#website\"},\"datePublished\":\"2021-04-12T18:22:50+00:00\",\"dateModified\":\"2021-04-12T18:23:43+00:00\",\"author\":{\"@id\":\"https:\/\/rosswintle.uk\/#\/schema\/person\/9f9bec147b2bfd762f09a2c2da7177dc\"},\"breadcrumb\":{\"@id\":\"https:\/\/rosswintle.uk\/2021\/04\/laravel-livewire-testing-object-model-properties-of-components\/#breadcrumb\"},\"inLanguage\":\"en-GB\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/rosswintle.uk\/2021\/04\/laravel-livewire-testing-object-model-properties-of-components\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/rosswintle.uk\/2021\/04\/laravel-livewire-testing-object-model-properties-of-components\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/rosswintle.uk\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"Tech Notes: Laravel Livewire &#8211; testing object\/model properties of components\"}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/rosswintle.uk\/#website\",\"url\":\"https:\/\/rosswintle.uk\/\",\"name\":\"Ross Wintle\",\"description\":\"Creativity, curiosity, and code\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/rosswintle.uk\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-GB\"},{\"@type\":\"Person\",\"@id\":\"https:\/\/rosswintle.uk\/#\/schema\/person\/9f9bec147b2bfd762f09a2c2da7177dc\",\"name\":\"Ross Wintle\",\"image\":{\"@type\":\"ImageObject\",\"inLanguage\":\"en-GB\",\"@id\":\"https:\/\/rosswintle.uk\/#\/schema\/person\/image\/\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/28519fc7c37998eea059b525da5fc7ce?s=96&d=identicon&r=g\",\"contentUrl\":\"https:\/\/secure.gravatar.com\/avatar\/28519fc7c37998eea059b525da5fc7ce?s=96&d=identicon&r=g\",\"caption\":\"Ross Wintle\"},\"url\":\"https:\/\/rosswintle.uk\/author\/rosswintle\/\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->",
            "yoast_head_json": {
                "title": "Tech Notes: Laravel Livewire - testing object\/model properties of components - Ross Wintle",
                "robots": {
                    "index": "index",
                    "follow": "follow",
                    "max-snippet": "max-snippet:-1",
                    "max-image-preview": "max-image-preview:large",
                    "max-video-preview": "max-video-preview:-1"
                },
                "canonical": "https:\/\/rosswintle.uk\/2021\/04\/laravel-livewire-testing-object-model-properties-of-components\/",
                "og_locale": "en_GB",
                "og_type": "article",
                "og_title": "Tech Notes: Laravel Livewire - testing object\/model properties of components - Ross Wintle",
                "og_description": "A quick tip for testing Laravel Livewire components with object\/model properties.",
                "og_url": "https:\/\/rosswintle.uk\/2021\/04\/laravel-livewire-testing-object-model-properties-of-components\/",
                "og_site_name": "Ross Wintle",
                "article_published_time": "2021-04-12T18:22:50+00:00",
                "article_modified_time": "2021-04-12T18:23:43+00:00",
                "og_image": [
                    {
                        "width": "600",
                        "height": "399",
                        "url": "https:\/\/rosswintle.uk\/wp-content\/uploads\/2012\/06\/DSC_0005-small.jpg",
                        "type": "image\/jpeg"
                    }
                ],
                "author": "Ross Wintle",
                "twitter_card": "summary_large_image",
                "twitter_creator": "@magicroundabout",
                "twitter_site": "@magicroundabout",
                "twitter_misc": {
                    "Written by": "Ross Wintle",
                    "Estimated reading time": "2 minutes"
                },
                "schema": {
                    "@context": "https:\/\/schema.org",
                    "@graph": [
                        {
                            "@type": "WebPage",
                            "@id": "https:\/\/rosswintle.uk\/2021\/04\/laravel-livewire-testing-object-model-properties-of-components\/",
                            "url": "https:\/\/rosswintle.uk\/2021\/04\/laravel-livewire-testing-object-model-properties-of-components\/",
                            "name": "Tech Notes: Laravel Livewire - testing object\/model properties of components - Ross Wintle",
                            "isPartOf": {
                                "@id": "https:\/\/rosswintle.uk\/#website"
                            },
                            "datePublished": "2021-04-12T18:22:50+00:00",
                            "dateModified": "2021-04-12T18:23:43+00:00",
                            "author": {
                                "@id": "https:\/\/rosswintle.uk\/#\/schema\/person\/9f9bec147b2bfd762f09a2c2da7177dc"
                            },
                            "breadcrumb": {
                                "@id": "https:\/\/rosswintle.uk\/2021\/04\/laravel-livewire-testing-object-model-properties-of-components\/#breadcrumb"
                            },
                            "inLanguage": "en-GB",
                            "potentialAction": [
                                {
                                    "@type": "ReadAction",
                                    "target": [
                                        "https:\/\/rosswintle.uk\/2021\/04\/laravel-livewire-testing-object-model-properties-of-components\/"
                                    ]
                                }
                            ]
                        },
                        {
                            "@type": "BreadcrumbList",
                            "@id": "https:\/\/rosswintle.uk\/2021\/04\/laravel-livewire-testing-object-model-properties-of-components\/#breadcrumb",
                            "itemListElement": [
                                {
                                    "@type": "ListItem",
                                    "position": 1,
                                    "name": "Home",
                                    "item": "https:\/\/rosswintle.uk\/"
                                },
                                {
                                    "@type": "ListItem",
                                    "position": 2,
                                    "name": "Tech Notes: Laravel Livewire &#8211; testing object\/model properties of components"
                                }
                            ]
                        },
                        {
                            "@type": "WebSite",
                            "@id": "https:\/\/rosswintle.uk\/#website",
                            "url": "https:\/\/rosswintle.uk\/",
                            "name": "Ross Wintle",
                            "description": "Creativity, curiosity, and code",
                            "potentialAction": [
                                {
                                    "@type": "SearchAction",
                                    "target": {
                                        "@type": "EntryPoint",
                                        "urlTemplate": "https:\/\/rosswintle.uk\/?s={search_term_string}"
                                    },
                                    "query-input": "required name=search_term_string"
                                }
                            ],
                            "inLanguage": "en-GB"
                        },
                        {
                            "@type": "Person",
                            "@id": "https:\/\/rosswintle.uk\/#\/schema\/person\/9f9bec147b2bfd762f09a2c2da7177dc",
                            "name": "Ross Wintle",
                            "image": {
                                "@type": "ImageObject",
                                "inLanguage": "en-GB",
                                "@id": "https:\/\/rosswintle.uk\/#\/schema\/person\/image\/",
                                "url": "https:\/\/secure.gravatar.com\/avatar\/28519fc7c37998eea059b525da5fc7ce?s=96&d=identicon&r=g",
                                "contentUrl": "https:\/\/secure.gravatar.com\/avatar\/28519fc7c37998eea059b525da5fc7ce?s=96&d=identicon&r=g",
                                "caption": "Ross Wintle"
                            },
                            "url": "https:\/\/rosswintle.uk\/author\/rosswintle\/"
                        }
                    ]
                }
            },
            "_links": {
                "self": [
                    {
                        "href": "https:\/\/rosswintle.uk\/wp-json\/wp\/v2\/posts\/10103"
                    }
                ],
                "collection": [
                    {
                        "href": "https:\/\/rosswintle.uk\/wp-json\/wp\/v2\/posts"
                    }
                ],
                "about": [
                    {
                        "href": "https:\/\/rosswintle.uk\/wp-json\/wp\/v2\/types\/post"
                    }
                ],
                "author": [
                    {
                        "embeddable": true,
                        "href": "https:\/\/rosswintle.uk\/wp-json\/wp\/v2\/users\/2"
                    }
                ],
                "replies": [
                    {
                        "embeddable": true,
                        "href": "https:\/\/rosswintle.uk\/wp-json\/wp\/v2\/comments?post=10103"
                    }
                ],
                "version-history": [
                    {
                        "count": 4,
                        "href": "https:\/\/rosswintle.uk\/wp-json\/wp\/v2\/posts\/10103\/revisions"
                    }
                ],
                "predecessor-version": [
                    {
                        "id": 10107,
                        "href": "https:\/\/rosswintle.uk\/wp-json\/wp\/v2\/posts\/10103\/revisions\/10107"
                    }
                ],
                "wp:attachment": [
                    {
                        "href": "https:\/\/rosswintle.uk\/wp-json\/wp\/v2\/media?parent=10103"
                    }
                ],
                "wp:term": [
                    {
                        "taxonomy": "category",
                        "embeddable": true,
                        "href": "https:\/\/rosswintle.uk\/wp-json\/wp\/v2\/categories?post=10103"
                    },
                    {
                        "taxonomy": "post_tag",
                        "embeddable": true,
                        "href": "https:\/\/rosswintle.uk\/wp-json\/wp\/v2\/tags?post=10103"
                    }
                ],
                "curies": [
                    {
                        "name": "wp",
                        "href": "https:\/\/api.w.org\/{rel}",
                        "templated": true
                    }
                ]
            }
        },
        "id": 10103,
        "dateGmt": "2021-04-12T18:22:50",
        "modifiedDateGmt": "2021-04-12T18:23:43",
        "slug": "laravel-livewire-testing-object-model-properties-of-components",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/rosswintle.uk\/2021\/04\/laravel-livewire-testing-object-model-properties-of-components\/",
        "title": "Tech Notes: Laravel Livewire &#8211; testing object\/model properties of components",
        "content": "\n<p>This is a super quick note to my future self &#8211; and you? &#8211; about testing object\/model properties of Laravel Livewire components.<\/p>\n\n\n\n<p>I&#8217;m working on a really simple project and using it as an excuse to practice TDD with Laravel.<\/p>\n\n\n\n<p>I have user-selectable template and my Templates component lets the user select a new template.<\/p>\n\n\n\n<p>My test is pretty simple.<\/p>\n\n\n\n<p>Set up a user and two templates, then assign the first template ID to the user. Note that templates have an owner (<code>$template-&gt;owner_id<\/code>), but the user also has a chosen template (<code>$user-&gt;template_id<\/code>):<\/p>\n\n\n<div class=\"wp-block-syntaxhighlighter-code \"><pre class=\"brush: php; title: ; notranslate\" title=\"\">\n\/\/ Arrange\n$user = User::factory()-&gt;create();\n$template1 = Template::factory()-&gt;create(&#x5B;\n    'owner_id' =&gt; $user-&gt;id,\n]);\n$template2 = Template::factory()-&gt;create(&#x5B;\n    'owner_id' =&gt; $user-&gt;id,\n]);\n$user-&gt;update(&#x5B;'template_id' =&gt; $template1-&gt;id]);\n<\/pre><\/div>\n\n\n<p>Then, acting as the user, test the <code>Templates<\/code> component, call the <code>setUserTemplate<\/code> method then assert that the <code>currentTemplate<\/code> property has changed.<\/p>\n\n\n<div class=\"wp-block-syntaxhighlighter-code \"><pre class=\"brush: plain; title: ; notranslate\" title=\"\">\n\/\/ Act\nLivewire::actingAs($user)\n    -&gt;test(\\App\\Http\\Livewire\\Templates::class)\n    -&gt;call('setUserTemplate', $template2-&gt;id)\n    -&gt;assertSet('currentTemplate', $template2);\n<\/pre><\/div>\n\n\n<p>Before we run the test, I note that the currentTemplate, in the Livewire component, is an Eloquent Model object.<\/p>\n\n\n\n<p>If we run the test we get:<\/p>\n\n\n<div class=\"wp-block-syntaxhighlighter-code \"><pre class=\"brush: plain; title: ; notranslate\" title=\"\">\nFailed asserting that two objects are equal.\n--- Expected\n+++ Actual\n@@ @@\n App\\Models\\Template Object (\n     'connection' =&gt; 'sqlite'\n-    'table' =&gt; null\n+    'table' =&gt; 'templates'\n     'primaryKey' =&gt; 'id'\n     'keyType' =&gt; 'int'\n     'incrementing' =&gt; true\n@@ @@\n     'withCount' =&gt; Array ()\n     'perPage' =&gt; 15\n     'exists' =&gt; true\n-    'wasRecentlyCreated' =&gt; true\n+    'wasRecentlyCreated' =&gt; false\n     'attributes' =&gt; Array (...)\n     'original' =&gt; Array (...)\n     'changes' =&gt; Array ()\n<\/pre><\/div>\n\n\n<p>Showing that the <code>table<\/code> and <code>wasRecentlyCreated<\/code> properties of the Template object. The object properties are the same, but it&#8217;s a slightly different object behind the scenes.<\/p>\n\n\n\n<p>The problem here is that <code>$template2<\/code> is the original template we created using the factory in the test setup. But the <code>currentTemplate<\/code> in the component will have been fetched from the database.<\/p>\n\n\n\n<p>The fix for this it to re-fetch <code>$template2<\/code> from the database before we compare it. We can do this with <code>$template2-&gt;fresh()<\/code><\/p>\n\n\n<div class=\"wp-block-syntaxhighlighter-code \"><pre class=\"brush: php; title: ; notranslate\" title=\"\">\n\/\/ Act\nLivewire::actingAs($user)\n    -&gt;test(\\App\\Http\\Livewire\\Templates::class)\n    -&gt;call('setUserTemplate', $template2-&gt;id)\n    -&gt;assertSet('currentTemplate', $template2-&gt;fresh());\n<\/pre><\/div>\n\n\n<p>This gives us a nice green test:<\/p>\n\n\n<div class=\"wp-block-syntaxhighlighter-code \"><pre class=\"brush: plain; title: ; notranslate\" title=\"\">\nPHPUnit 9.5.2 by Sebastian Bergmann and contributors.\n\n.                                                                   1 \/ 1 (100%)\n\nTime: 00:00.212, Memory: 32.50 MB\n\nOK (1 test, 3 assertions)\n<\/pre><\/div>\n\n\n<p>Hooray!<\/p>\n",
        "excerpt": "<p>A quick tip for testing Laravel Livewire components with object\/model properties.<\/p>\n",
        "parentId": 0,
        "authorId": 2,
        "featuredMediaId": 0
    },
    {
        "dataAsArray": {
            "id": 10050,
            "date": "2021-03-26T10:49:01",
            "date_gmt": "2021-03-26T10:49:01",
            "guid": {
                "rendered": "https:\/\/rosswintle.uk\/?p=10050"
            },
            "modified": "2021-05-14T10:21:13",
            "modified_gmt": "2021-05-14T09:21:13",
            "slug": "css-only-spam-prevention-allow-list-captcha",
            "status": "publish",
            "type": "post",
            "link": "https:\/\/rosswintle.uk\/2021\/03\/css-only-spam-prevention-allow-list-captcha\/",
            "title": {
                "rendered": "Idea: CSS-only spam prevention with a simple allow-list and CAPTCHA"
            },
            "content": {
                "rendered": "\n<p>I have a client with a WordPress site who is getting lots of spam form submissions. For a long time I have used Ben Marshall&#8217;s excellent <a href=\"https:\/\/wordpress.org\/plugins\/zero-spam\/\">WordPress Zero Spam plugin<\/a>, which was originally a simple implementation of a <a href=\"https:\/\/davidwalsh.name\/wordpress-comment-spam\">simple idea from David Walsh<\/a> for preventing spam.<\/p>\n\n\n\n<p>David&#8217;s idea was kinda like a reverse honeypot. A traditional honeypot is a hidden HTML input that is empty. It tempts the bots into filling it in with a value. Because it&#8217;s hidden a human won&#8217;t see it and fill it in, so a submitted honeypot value probably means a bot filled the form in.<\/p>\n\n\n\n<p>David Walsh used JavaScript to ADD an input to the form, and the spam test was to detect this additional input. All this really did was say &#8220;this form was submitted by a browser that runs JavaScript&#8221;.<\/p>\n\n\n\n<p>There are two problems with this method.<\/p>\n\n\n\n<p>Firstly, it requires JavaScript to be working.<\/p>\n\n\n\n<p>And secondly, spam is clearly an arms race, and the game is to stay one step ahead of the bots. Most bots, it seems, aren&#8217;t currently running headless browsers that run JavaScript. I always though the David Walsh method would soon be defeated but it&#8217;s been working well for the many years I&#8217;ve been using it.<\/p>\n\n\n\n<p>BUT&#8230; Ben Marshall (note: I&#8217;m REALLY grateful for Ben&#8217;s work and I have every respect for him) removed the David Walsh method from version 5 of his plugin, and then added it back in, but it only currently seems to work for comment forms and WordPress registration forms. And I need it to integrate with WP Forms and Gravity Forms.<\/p>\n\n\n\n<p>Another implementation of the David Walsh method exists in <a href=\"https:\/\/twitter.com\/binarymoon\">Ben Gillbanks<\/a>&#8216;s excellent, multi-purpose &#8220;<a href=\"https:\/\/wordpress.org\/plugins\/wp-toolbelt\/\">Toolbelt<\/a>&#8221; plugin. But this only works for Gravity Forms and Jetpack in addition to the standard WordPress forms.<\/p>\n\n\n\n<p>NOW&#8230; both these plugins are open source, so I could pull-request the features I need into the plugins. And I may do that, but it will take time to understand the plugin structure and add it and get the changes approved and published by the authors.<\/p>\n\n\n\n<p>My client needs a quick fix.<\/p>\n\n\n\n<p>And it&#8217;s always bugged me that JavaScript is needed for the David Walsh method. So I got thinking&#8230; can we do something without JavaScript?<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">An idea<\/h2>\n\n\n\n<p>So here&#8217;s the idea.<\/p>\n\n\n\n<p>As the bots don&#8217;t seem to be running browsers, I assume they are just scraping the form, figuring out the input fields, and POST&#8217;ing responses to the action URLs.<\/p>\n\n\n\n<p>So I thought: we don&#8217;t want JavaScript, but what might we do with CSS? I eventually settled on the idea that we can load an image with CSS and this can hit a server endpoint. If we can do this conditionally based on some user action then we can tell the server we are real.<\/p>\n\n\n\n<p>The server can then add the IP address of the browser to an allow list temporarily (we&#8217;ll come back to this) and allow form submissions from it!<\/p>\n\n\n\n<p>Initially I thought you could use the &#8220;active&#8221; state on the submit button element to trigger a load of a background image &#8220;pixel&#8221; on an adjacent element using something like:<\/p>\n\n\n<div class=\"wp-block-syntaxhighlighter-code \"><pre class=\"brush: css; title: ; notranslate\" title=\"\">\ninput&#x5B;type=&quot;submit&quot;]:active + .pixel {\n  background-image: url(&lt;pixel-url&gt;);\n}\n<\/pre><\/div>\n\n\n<p>I chose <code>active<\/code> over <code>focus<\/code> because I wasn&#8217;t sure if a mobile device button press would trigger focus.<\/p>\n\n\n\n<p>The problem with <code>active<\/code> is: does this give enough time before the form submits to do the allow-listing that the pixel URL\/endpoint does?<\/p>\n\n\n\n<p>In my tests the answer was no. I thought I would get a race condition, but it actually seemed that the browser cancelled the background-image load to submit the form.<\/p>\n\n\n\n<p>So I needed another approach.<\/p>\n\n\n\n<p>I eventually discovered the <code>focus-within<\/code> state. This state is set on an element when any child element has focus. And this meant that I could load the pixel and do the allow-listing when the user is filling in the form using CSS like this:<\/p>\n\n\n<div class=\"wp-block-syntaxhighlighter-code \"><pre class=\"brush: css; title: ; notranslate\" title=\"\">\nform:focus-within .pixel {\n  background-image: url(&lt;pixel-url&gt;);\n}\n<\/pre><\/div>\n\n\n<p>We can then use the pixel URL endpoint to add the browser&#8217;s IP address to the allow-list for a set period of time (would have to be long enough for the user to fill in the form), and then check the allow list when the form is submitted.<\/p>\n\n\n\n<p>I initially tested this as a proof of concept with a simple Laravel application form:<\/p>\n\n\n\n<figure class=\"wp-block-embed is-type-video is-provider-vimeo wp-block-embed-vimeo wp-embed-aspect-16-9 wp-has-aspect-ratio\"><div class=\"wp-block-embed__wrapper\">\n<iframe loading=\"lazy\" title=\"CSS only spam\/allow-listing CAPTCHA thingy proof of concept\" src=\"https:\/\/player.vimeo.com\/video\/529274399?dnt=1&amp;app_id=122963\" width=\"640\" height=\"340\" frameborder=\"0\" allow=\"autoplay; fullscreen; picture-in-picture\" allowfullscreen><\/iframe>\n<\/div><\/figure>\n\n\n\n<p>This worked and proved the concept. But as a real test I needed to get it quickly onto my client&#8217;s site that had lots of spam, so I quickly cooked up <a href=\"https:\/\/gist.github.com\/rosswintle\/0f65bea09a59b19d4486f190c46198bb\">a one-file WordPress plugin<\/a> that integrated this method with WP Forms.<\/p>\n\n\n\n<p>I tested this locally with success:<\/p>\n\n\n\n<figure class=\"wp-block-embed is-type-video is-provider-vimeo wp-block-embed-vimeo wp-embed-aspect-16-9 wp-has-aspect-ratio\"><div class=\"wp-block-embed__wrapper\">\n<iframe loading=\"lazy\" title=\"CSS only spam\/allow-listing captcha thingy in WP Forms\" src=\"https:\/\/player.vimeo.com\/video\/529279362?dnt=1&amp;app_id=122963\" width=\"640\" height=\"326\" frameborder=\"0\" allow=\"autoplay; fullscreen; picture-in-picture\" allowfullscreen><\/iframe>\n<\/div><\/figure>\n\n\n\n<p>And then deployed to the client site to see what happened. I wait to see if it works.<\/p>\n\n\n\n<p>Update: My client has had two days with no spam, the logs I&#8217;m creating show that spam is being blocked, and we&#8217;re also seeing genuine enquiries getting through. It WORKS!! (I think!!)<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Questions and explanations<\/h2>\n\n\n\n<p>Here are some things I&#8217;ve got questions about and some things that I&#8217;ve already thought through.<\/p>\n\n\n\n<h3 class=\"wp-block-heading\">How is this better than a traditional honeypot?<\/h3>\n\n\n\n<p>Bots seem to have figured out how to circumvent some traditional honeypots. I&#8217;ve always found the David Walsh technique to be more effective.<\/p>\n\n\n\n<h3 class=\"wp-block-heading\">How is this better than the David Walsh technique?<\/h3>\n\n\n\n<p>It doesn&#8217;t use JavaScript. And it&#8217;s MINE!<\/p>\n\n\n\n<h3 class=\"wp-block-heading\">Storing the allow-list<\/h3>\n\n\n\n<p>This, like all spam-prevention solutions, is not perfect. For one thing I&#8217;m using transients to store the allow-listed IP addresses. The reason for this is that if I stored a single option with a list of IP addresses in then this could have race conditions that caused IP addresses to not make it on the list. This will clutter up the options table with transient entries. So I need to re-think that.<\/p>\n\n\n\n<p>Generating a testing a nonce has been suggested as an alternative. These are not stored in the database so are cleaner. But there&#8217;s probably page-caching issues. I will investigate this.<\/p>\n\n\n\n<h3 class=\"wp-block-heading\">Won&#8217;t bots just allow-list themselves by hitting the pixel URL?<\/h3>\n\n\n\n<p>I guess the idea here is that this is not a widely-known spam prevention measure. The aim is to get another step ahead of the bots. The bots go for the easy wins &#8211; they attack the holes that are likely to get them access across a large number of sites. So diversity of spam prevention solutions seems good.<\/p>\n\n\n\n<p>I think I could get another step ahead by periodically changing the pixel URL and the class name on the pixel element.<\/p>\n\n\n\n<h3 class=\"wp-block-heading\">Won&#8217;t this stop working once bots start using headless browsers?<\/h3>\n\n\n\n<p>Yes. But I think at that point, aside from implementing proper (Re)CAPTCHAs, I think we&#8217;re probably screwed.<\/p>\n\n\n\n<h3 class=\"wp-block-heading\">Accessibility and screen-readers and browser support<\/h3>\n\n\n\n<p>I probably need to make a couple of accessibility improvements, mainly properly hiding the pixel element from screen readers.<\/p>\n\n\n\n<p>I&#8217;m also not sure how this will work with some screen readers. Can I assume that screen readers set the focus state? Do screen readers support the focus-within state?<\/p>\n\n\n\n<p>And focus-within doesn&#8217;t work on IE11.<\/p>\n\n\n\n<p>One thought I&#8217;d has is that you could detect focus and enable the pixel using Javascript as well as CSS. Then CSS acts as a fallback for when Javascript isn&#8217;t available.<\/p>\n\n\n\n<h3 class=\"wp-block-heading\">What if CSS is disabled<\/h3>\n\n\n\n<p>It seems this can be done. But I wonder what the probably that both CSS and JS are unavailable in the real world is? My CSS is inlined, so it doesn&#8217;t need an extra file to be loaded. The only case would be if someone had deliberately disabled CSS. Does anyone do that?<\/p>\n\n\n\n<h3 class=\"wp-block-heading\">Are there privacy\/data protection\/GDPR issues?<\/h3>\n\n\n\n<p>IP addresses are classed as personal data. But if someone&#8217;s sending you a form submission then you&#8217;re probably already collecting personal data. I would just be clear in our the privacy policy that the IP address is stored temporarily for spam prevention purposes. <\/p>\n\n\n\n<h3 class=\"wp-block-heading\">Will you be making this into a WordPress plugin\/Laravel package?<\/h3>\n\n\n\n<p>Well, you can see <a href=\"https:\/\/gist.github.com\/rosswintle\/0f65bea09a59b19d4486f190c46198bb\">the simple WordPress plugin code I got working with WP Forms<\/a>. That&#8217;s currently being tested on a site that I know gets spam form entries.<\/p>\n\n\n\n<p>You can take that and try to make your own integrations\/plugins\/packages. I&#8217;d love people to take this concept and run with it.<\/p>\n\n\n\n<p><\/p>\n",
                "protected": false
            },
            "excerpt": {
                "rendered": "<p>An idea for a CSS-only spam prevention system that uses a white list and simple CAPTCHA, complete with WordPress plugin code.<\/p>\n",
                "protected": false
            },
            "author": 2,
            "featured_media": 0,
            "comment_status": "open",
            "ping_status": "closed",
            "sticky": false,
            "template": "",
            "format": "standard",
            "meta": {
                "sig_custom_text": "",
                "sig_image_type": "featured-image",
                "sig_custom_image": 0,
                "sig_is_disabled": false,
                "url": "",
                "footnotes": ""
            },
            "categories": [
                10,
                23,
                639
            ],
            "tags": [
                534,
                462
            ],
            "yoast_head": "<!-- This site is optimized with the Yoast SEO plugin v21.7 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>Idea: CSS-only spam prevention with a simple allow-list and CAPTCHA - Ross Wintle<\/title>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/rosswintle.uk\/2021\/03\/css-only-spam-prevention-allow-list-captcha\/\" \/>\n<meta property=\"og:locale\" content=\"en_GB\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"Idea: CSS-only spam prevention with a simple allow-list and CAPTCHA - Ross Wintle\" \/>\n<meta property=\"og:description\" content=\"An idea for a CSS-only spam prevention system that uses a white list and simple CAPTCHA, complete with WordPress plugin code.\" \/>\n<meta property=\"og:url\" content=\"https:\/\/rosswintle.uk\/2021\/03\/css-only-spam-prevention-allow-list-captcha\/\" \/>\n<meta property=\"og:site_name\" content=\"Ross Wintle\" \/>\n<meta property=\"article:published_time\" content=\"2021-03-26T10:49:01+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2021-05-14T09:21:13+00:00\" \/>\n<meta property=\"og:image\" content=\"https:\/\/rosswintle.uk\/wp-content\/uploads\/2012\/06\/DSC_0005-small.jpg\" \/>\n\t<meta property=\"og:image:width\" content=\"600\" \/>\n\t<meta property=\"og:image:height\" content=\"399\" \/>\n\t<meta property=\"og:image:type\" content=\"image\/jpeg\" \/>\n<meta name=\"author\" content=\"Ross Wintle\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:creator\" content=\"@magicroundabout\" \/>\n<meta name=\"twitter:site\" content=\"@magicroundabout\" \/>\n<meta name=\"twitter:label1\" content=\"Written by\" \/>\n\t<meta name=\"twitter:data1\" content=\"Ross Wintle\" \/>\n\t<meta name=\"twitter:label2\" content=\"Estimated reading time\" \/>\n\t<meta name=\"twitter:data2\" content=\"6 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"https:\/\/rosswintle.uk\/2021\/03\/css-only-spam-prevention-allow-list-captcha\/\",\"url\":\"https:\/\/rosswintle.uk\/2021\/03\/css-only-spam-prevention-allow-list-captcha\/\",\"name\":\"Idea: CSS-only spam prevention with a simple allow-list and CAPTCHA - Ross Wintle\",\"isPartOf\":{\"@id\":\"https:\/\/rosswintle.uk\/#website\"},\"datePublished\":\"2021-03-26T10:49:01+00:00\",\"dateModified\":\"2021-05-14T09:21:13+00:00\",\"author\":{\"@id\":\"https:\/\/rosswintle.uk\/#\/schema\/person\/9f9bec147b2bfd762f09a2c2da7177dc\"},\"breadcrumb\":{\"@id\":\"https:\/\/rosswintle.uk\/2021\/03\/css-only-spam-prevention-allow-list-captcha\/#breadcrumb\"},\"inLanguage\":\"en-GB\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/rosswintle.uk\/2021\/03\/css-only-spam-prevention-allow-list-captcha\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/rosswintle.uk\/2021\/03\/css-only-spam-prevention-allow-list-captcha\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/rosswintle.uk\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"Idea: CSS-only spam prevention with a simple allow-list and CAPTCHA\"}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/rosswintle.uk\/#website\",\"url\":\"https:\/\/rosswintle.uk\/\",\"name\":\"Ross Wintle\",\"description\":\"Creativity, curiosity, and code\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/rosswintle.uk\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-GB\"},{\"@type\":\"Person\",\"@id\":\"https:\/\/rosswintle.uk\/#\/schema\/person\/9f9bec147b2bfd762f09a2c2da7177dc\",\"name\":\"Ross Wintle\",\"image\":{\"@type\":\"ImageObject\",\"inLanguage\":\"en-GB\",\"@id\":\"https:\/\/rosswintle.uk\/#\/schema\/person\/image\/\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/28519fc7c37998eea059b525da5fc7ce?s=96&d=identicon&r=g\",\"contentUrl\":\"https:\/\/secure.gravatar.com\/avatar\/28519fc7c37998eea059b525da5fc7ce?s=96&d=identicon&r=g\",\"caption\":\"Ross Wintle\"},\"url\":\"https:\/\/rosswintle.uk\/author\/rosswintle\/\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->",
            "yoast_head_json": {
                "title": "Idea: CSS-only spam prevention with a simple allow-list and CAPTCHA - Ross Wintle",
                "robots": {
                    "index": "index",
                    "follow": "follow",
                    "max-snippet": "max-snippet:-1",
                    "max-image-preview": "max-image-preview:large",
                    "max-video-preview": "max-video-preview:-1"
                },
                "canonical": "https:\/\/rosswintle.uk\/2021\/03\/css-only-spam-prevention-allow-list-captcha\/",
                "og_locale": "en_GB",
                "og_type": "article",
                "og_title": "Idea: CSS-only spam prevention with a simple allow-list and CAPTCHA - Ross Wintle",
                "og_description": "An idea for a CSS-only spam prevention system that uses a white list and simple CAPTCHA, complete with WordPress plugin code.",
                "og_url": "https:\/\/rosswintle.uk\/2021\/03\/css-only-spam-prevention-allow-list-captcha\/",
                "og_site_name": "Ross Wintle",
                "article_published_time": "2021-03-26T10:49:01+00:00",
                "article_modified_time": "2021-05-14T09:21:13+00:00",
                "og_image": [
                    {
                        "width": "600",
                        "height": "399",
                        "url": "https:\/\/rosswintle.uk\/wp-content\/uploads\/2012\/06\/DSC_0005-small.jpg",
                        "type": "image\/jpeg"
                    }
                ],
                "author": "Ross Wintle",
                "twitter_card": "summary_large_image",
                "twitter_creator": "@magicroundabout",
                "twitter_site": "@magicroundabout",
                "twitter_misc": {
                    "Written by": "Ross Wintle",
                    "Estimated reading time": "6 minutes"
                },
                "schema": {
                    "@context": "https:\/\/schema.org",
                    "@graph": [
                        {
                            "@type": "WebPage",
                            "@id": "https:\/\/rosswintle.uk\/2021\/03\/css-only-spam-prevention-allow-list-captcha\/",
                            "url": "https:\/\/rosswintle.uk\/2021\/03\/css-only-spam-prevention-allow-list-captcha\/",
                            "name": "Idea: CSS-only spam prevention with a simple allow-list and CAPTCHA - Ross Wintle",
                            "isPartOf": {
                                "@id": "https:\/\/rosswintle.uk\/#website"
                            },
                            "datePublished": "2021-03-26T10:49:01+00:00",
                            "dateModified": "2021-05-14T09:21:13+00:00",
                            "author": {
                                "@id": "https:\/\/rosswintle.uk\/#\/schema\/person\/9f9bec147b2bfd762f09a2c2da7177dc"
                            },
                            "breadcrumb": {
                                "@id": "https:\/\/rosswintle.uk\/2021\/03\/css-only-spam-prevention-allow-list-captcha\/#breadcrumb"
                            },
                            "inLanguage": "en-GB",
                            "potentialAction": [
                                {
                                    "@type": "ReadAction",
                                    "target": [
                                        "https:\/\/rosswintle.uk\/2021\/03\/css-only-spam-prevention-allow-list-captcha\/"
                                    ]
                                }
                            ]
                        },
                        {
                            "@type": "BreadcrumbList",
                            "@id": "https:\/\/rosswintle.uk\/2021\/03\/css-only-spam-prevention-allow-list-captcha\/#breadcrumb",
                            "itemListElement": [
                                {
                                    "@type": "ListItem",
                                    "position": 1,
                                    "name": "Home",
                                    "item": "https:\/\/rosswintle.uk\/"
                                },
                                {
                                    "@type": "ListItem",
                                    "position": 2,
                                    "name": "Idea: CSS-only spam prevention with a simple allow-list and CAPTCHA"
                                }
                            ]
                        },
                        {
                            "@type": "WebSite",
                            "@id": "https:\/\/rosswintle.uk\/#website",
                            "url": "https:\/\/rosswintle.uk\/",
                            "name": "Ross Wintle",
                            "description": "Creativity, curiosity, and code",
                            "potentialAction": [
                                {
                                    "@type": "SearchAction",
                                    "target": {
                                        "@type": "EntryPoint",
                                        "urlTemplate": "https:\/\/rosswintle.uk\/?s={search_term_string}"
                                    },
                                    "query-input": "required name=search_term_string"
                                }
                            ],
                            "inLanguage": "en-GB"
                        },
                        {
                            "@type": "Person",
                            "@id": "https:\/\/rosswintle.uk\/#\/schema\/person\/9f9bec147b2bfd762f09a2c2da7177dc",
                            "name": "Ross Wintle",
                            "image": {
                                "@type": "ImageObject",
                                "inLanguage": "en-GB",
                                "@id": "https:\/\/rosswintle.uk\/#\/schema\/person\/image\/",
                                "url": "https:\/\/secure.gravatar.com\/avatar\/28519fc7c37998eea059b525da5fc7ce?s=96&d=identicon&r=g",
                                "contentUrl": "https:\/\/secure.gravatar.com\/avatar\/28519fc7c37998eea059b525da5fc7ce?s=96&d=identicon&r=g",
                                "caption": "Ross Wintle"
                            },
                            "url": "https:\/\/rosswintle.uk\/author\/rosswintle\/"
                        }
                    ]
                }
            },
            "_links": {
                "self": [
                    {
                        "href": "https:\/\/rosswintle.uk\/wp-json\/wp\/v2\/posts\/10050"
                    }
                ],
                "collection": [
                    {
                        "href": "https:\/\/rosswintle.uk\/wp-json\/wp\/v2\/posts"
                    }
                ],
                "about": [
                    {
                        "href": "https:\/\/rosswintle.uk\/wp-json\/wp\/v2\/types\/post"
                    }
                ],
                "author": [
                    {
                        "embeddable": true,
                        "href": "https:\/\/rosswintle.uk\/wp-json\/wp\/v2\/users\/2"
                    }
                ],
                "replies": [
                    {
                        "embeddable": true,
                        "href": "https:\/\/rosswintle.uk\/wp-json\/wp\/v2\/comments?post=10050"
                    }
                ],
                "version-history": [
                    {
                        "count": 7,
                        "href": "https:\/\/rosswintle.uk\/wp-json\/wp\/v2\/posts\/10050\/revisions"
                    }
                ],
                "predecessor-version": [
                    {
                        "id": 10063,
                        "href": "https:\/\/rosswintle.uk\/wp-json\/wp\/v2\/posts\/10050\/revisions\/10063"
                    }
                ],
                "wp:attachment": [
                    {
                        "href": "https:\/\/rosswintle.uk\/wp-json\/wp\/v2\/media?parent=10050"
                    }
                ],
                "wp:term": [
                    {
                        "taxonomy": "category",
                        "embeddable": true,
                        "href": "https:\/\/rosswintle.uk\/wp-json\/wp\/v2\/categories?post=10050"
                    },
                    {
                        "taxonomy": "post_tag",
                        "embeddable": true,
                        "href": "https:\/\/rosswintle.uk\/wp-json\/wp\/v2\/tags?post=10050"
                    }
                ],
                "curies": [
                    {
                        "name": "wp",
                        "href": "https:\/\/api.w.org\/{rel}",
                        "templated": true
                    }
                ]
            }
        },
        "id": 10050,
        "dateGmt": "2021-03-26T10:49:01",
        "modifiedDateGmt": "2021-05-14T09:21:13",
        "slug": "css-only-spam-prevention-allow-list-captcha",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/rosswintle.uk\/2021\/03\/css-only-spam-prevention-allow-list-captcha\/",
        "title": "Idea: CSS-only spam prevention with a simple allow-list and CAPTCHA",
        "content": "\n<p>I have a client with a WordPress site who is getting lots of spam form submissions. For a long time I have used Ben Marshall&#8217;s excellent <a href=\"https:\/\/wordpress.org\/plugins\/zero-spam\/\">WordPress Zero Spam plugin<\/a>, which was originally a simple implementation of a <a href=\"https:\/\/davidwalsh.name\/wordpress-comment-spam\">simple idea from David Walsh<\/a> for preventing spam.<\/p>\n\n\n\n<p>David&#8217;s idea was kinda like a reverse honeypot. A traditional honeypot is a hidden HTML input that is empty. It tempts the bots into filling it in with a value. Because it&#8217;s hidden a human won&#8217;t see it and fill it in, so a submitted honeypot value probably means a bot filled the form in.<\/p>\n\n\n\n<p>David Walsh used JavaScript to ADD an input to the form, and the spam test was to detect this additional input. All this really did was say &#8220;this form was submitted by a browser that runs JavaScript&#8221;.<\/p>\n\n\n\n<p>There are two problems with this method.<\/p>\n\n\n\n<p>Firstly, it requires JavaScript to be working.<\/p>\n\n\n\n<p>And secondly, spam is clearly an arms race, and the game is to stay one step ahead of the bots. Most bots, it seems, aren&#8217;t currently running headless browsers that run JavaScript. I always though the David Walsh method would soon be defeated but it&#8217;s been working well for the many years I&#8217;ve been using it.<\/p>\n\n\n\n<p>BUT&#8230; Ben Marshall (note: I&#8217;m REALLY grateful for Ben&#8217;s work and I have every respect for him) removed the David Walsh method from version 5 of his plugin, and then added it back in, but it only currently seems to work for comment forms and WordPress registration forms. And I need it to integrate with WP Forms and Gravity Forms.<\/p>\n\n\n\n<p>Another implementation of the David Walsh method exists in <a href=\"https:\/\/twitter.com\/binarymoon\">Ben Gillbanks<\/a>&#8216;s excellent, multi-purpose &#8220;<a href=\"https:\/\/wordpress.org\/plugins\/wp-toolbelt\/\">Toolbelt<\/a>&#8221; plugin. But this only works for Gravity Forms and Jetpack in addition to the standard WordPress forms.<\/p>\n\n\n\n<p>NOW&#8230; both these plugins are open source, so I could pull-request the features I need into the plugins. And I may do that, but it will take time to understand the plugin structure and add it and get the changes approved and published by the authors.<\/p>\n\n\n\n<p>My client needs a quick fix.<\/p>\n\n\n\n<p>And it&#8217;s always bugged me that JavaScript is needed for the David Walsh method. So I got thinking&#8230; can we do something without JavaScript?<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">An idea<\/h2>\n\n\n\n<p>So here&#8217;s the idea.<\/p>\n\n\n\n<p>As the bots don&#8217;t seem to be running browsers, I assume they are just scraping the form, figuring out the input fields, and POST&#8217;ing responses to the action URLs.<\/p>\n\n\n\n<p>So I thought: we don&#8217;t want JavaScript, but what might we do with CSS? I eventually settled on the idea that we can load an image with CSS and this can hit a server endpoint. If we can do this conditionally based on some user action then we can tell the server we are real.<\/p>\n\n\n\n<p>The server can then add the IP address of the browser to an allow list temporarily (we&#8217;ll come back to this) and allow form submissions from it!<\/p>\n\n\n\n<p>Initially I thought you could use the &#8220;active&#8221; state on the submit button element to trigger a load of a background image &#8220;pixel&#8221; on an adjacent element using something like:<\/p>\n\n\n<div class=\"wp-block-syntaxhighlighter-code \"><pre class=\"brush: css; title: ; notranslate\" title=\"\">\ninput&#x5B;type=&quot;submit&quot;]:active + .pixel {\n  background-image: url(&lt;pixel-url&gt;);\n}\n<\/pre><\/div>\n\n\n<p>I chose <code>active<\/code> over <code>focus<\/code> because I wasn&#8217;t sure if a mobile device button press would trigger focus.<\/p>\n\n\n\n<p>The problem with <code>active<\/code> is: does this give enough time before the form submits to do the allow-listing that the pixel URL\/endpoint does?<\/p>\n\n\n\n<p>In my tests the answer was no. I thought I would get a race condition, but it actually seemed that the browser cancelled the background-image load to submit the form.<\/p>\n\n\n\n<p>So I needed another approach.<\/p>\n\n\n\n<p>I eventually discovered the <code>focus-within<\/code> state. This state is set on an element when any child element has focus. And this meant that I could load the pixel and do the allow-listing when the user is filling in the form using CSS like this:<\/p>\n\n\n<div class=\"wp-block-syntaxhighlighter-code \"><pre class=\"brush: css; title: ; notranslate\" title=\"\">\nform:focus-within .pixel {\n  background-image: url(&lt;pixel-url&gt;);\n}\n<\/pre><\/div>\n\n\n<p>We can then use the pixel URL endpoint to add the browser&#8217;s IP address to the allow-list for a set period of time (would have to be long enough for the user to fill in the form), and then check the allow list when the form is submitted.<\/p>\n\n\n\n<p>I initially tested this as a proof of concept with a simple Laravel application form:<\/p>\n\n\n\n<figure class=\"wp-block-embed is-type-video is-provider-vimeo wp-block-embed-vimeo wp-embed-aspect-16-9 wp-has-aspect-ratio\"><div class=\"wp-block-embed__wrapper\">\n<iframe loading=\"lazy\" title=\"CSS only spam\/allow-listing CAPTCHA thingy proof of concept\" src=\"https:\/\/player.vimeo.com\/video\/529274399?dnt=1&amp;app_id=122963\" width=\"640\" height=\"340\" frameborder=\"0\" allow=\"autoplay; fullscreen; picture-in-picture\" allowfullscreen><\/iframe>\n<\/div><\/figure>\n\n\n\n<p>This worked and proved the concept. But as a real test I needed to get it quickly onto my client&#8217;s site that had lots of spam, so I quickly cooked up <a href=\"https:\/\/gist.github.com\/rosswintle\/0f65bea09a59b19d4486f190c46198bb\">a one-file WordPress plugin<\/a> that integrated this method with WP Forms.<\/p>\n\n\n\n<p>I tested this locally with success:<\/p>\n\n\n\n<figure class=\"wp-block-embed is-type-video is-provider-vimeo wp-block-embed-vimeo wp-embed-aspect-16-9 wp-has-aspect-ratio\"><div class=\"wp-block-embed__wrapper\">\n<iframe loading=\"lazy\" title=\"CSS only spam\/allow-listing captcha thingy in WP Forms\" src=\"https:\/\/player.vimeo.com\/video\/529279362?dnt=1&amp;app_id=122963\" width=\"640\" height=\"326\" frameborder=\"0\" allow=\"autoplay; fullscreen; picture-in-picture\" allowfullscreen><\/iframe>\n<\/div><\/figure>\n\n\n\n<p>And then deployed to the client site to see what happened. I wait to see if it works.<\/p>\n\n\n\n<p>Update: My client has had two days with no spam, the logs I&#8217;m creating show that spam is being blocked, and we&#8217;re also seeing genuine enquiries getting through. It WORKS!! (I think!!)<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Questions and explanations<\/h2>\n\n\n\n<p>Here are some things I&#8217;ve got questions about and some things that I&#8217;ve already thought through.<\/p>\n\n\n\n<h3 class=\"wp-block-heading\">How is this better than a traditional honeypot?<\/h3>\n\n\n\n<p>Bots seem to have figured out how to circumvent some traditional honeypots. I&#8217;ve always found the David Walsh technique to be more effective.<\/p>\n\n\n\n<h3 class=\"wp-block-heading\">How is this better than the David Walsh technique?<\/h3>\n\n\n\n<p>It doesn&#8217;t use JavaScript. And it&#8217;s MINE!<\/p>\n\n\n\n<h3 class=\"wp-block-heading\">Storing the allow-list<\/h3>\n\n\n\n<p>This, like all spam-prevention solutions, is not perfect. For one thing I&#8217;m using transients to store the allow-listed IP addresses. The reason for this is that if I stored a single option with a list of IP addresses in then this could have race conditions that caused IP addresses to not make it on the list. This will clutter up the options table with transient entries. So I need to re-think that.<\/p>\n\n\n\n<p>Generating a testing a nonce has been suggested as an alternative. These are not stored in the database so are cleaner. But there&#8217;s probably page-caching issues. I will investigate this.<\/p>\n\n\n\n<h3 class=\"wp-block-heading\">Won&#8217;t bots just allow-list themselves by hitting the pixel URL?<\/h3>\n\n\n\n<p>I guess the idea here is that this is not a widely-known spam prevention measure. The aim is to get another step ahead of the bots. The bots go for the easy wins &#8211; they attack the holes that are likely to get them access across a large number of sites. So diversity of spam prevention solutions seems good.<\/p>\n\n\n\n<p>I think I could get another step ahead by periodically changing the pixel URL and the class name on the pixel element.<\/p>\n\n\n\n<h3 class=\"wp-block-heading\">Won&#8217;t this stop working once bots start using headless browsers?<\/h3>\n\n\n\n<p>Yes. But I think at that point, aside from implementing proper (Re)CAPTCHAs, I think we&#8217;re probably screwed.<\/p>\n\n\n\n<h3 class=\"wp-block-heading\">Accessibility and screen-readers and browser support<\/h3>\n\n\n\n<p>I probably need to make a couple of accessibility improvements, mainly properly hiding the pixel element from screen readers.<\/p>\n\n\n\n<p>I&#8217;m also not sure how this will work with some screen readers. Can I assume that screen readers set the focus state? Do screen readers support the focus-within state?<\/p>\n\n\n\n<p>And focus-within doesn&#8217;t work on IE11.<\/p>\n\n\n\n<p>One thought I&#8217;d has is that you could detect focus and enable the pixel using Javascript as well as CSS. Then CSS acts as a fallback for when Javascript isn&#8217;t available.<\/p>\n\n\n\n<h3 class=\"wp-block-heading\">What if CSS is disabled<\/h3>\n\n\n\n<p>It seems this can be done. But I wonder what the probably that both CSS and JS are unavailable in the real world is? My CSS is inlined, so it doesn&#8217;t need an extra file to be loaded. The only case would be if someone had deliberately disabled CSS. Does anyone do that?<\/p>\n\n\n\n<h3 class=\"wp-block-heading\">Are there privacy\/data protection\/GDPR issues?<\/h3>\n\n\n\n<p>IP addresses are classed as personal data. But if someone&#8217;s sending you a form submission then you&#8217;re probably already collecting personal data. I would just be clear in our the privacy policy that the IP address is stored temporarily for spam prevention purposes. <\/p>\n\n\n\n<h3 class=\"wp-block-heading\">Will you be making this into a WordPress plugin\/Laravel package?<\/h3>\n\n\n\n<p>Well, you can see <a href=\"https:\/\/gist.github.com\/rosswintle\/0f65bea09a59b19d4486f190c46198bb\">the simple WordPress plugin code I got working with WP Forms<\/a>. That&#8217;s currently being tested on a site that I know gets spam form entries.<\/p>\n\n\n\n<p>You can take that and try to make your own integrations\/plugins\/packages. I&#8217;d love people to take this concept and run with it.<\/p>\n\n\n\n<p><\/p>\n",
        "excerpt": "<p>An idea for a CSS-only spam prevention system that uses a white list and simple CAPTCHA, complete with WordPress plugin code.<\/p>\n",
        "parentId": 0,
        "authorId": 2,
        "featuredMediaId": 0
    },
    {
        "dataAsArray": {
            "id": 9966,
            "date": "2021-03-02T11:49:34",
            "date_gmt": "2021-03-02T11:49:34",
            "guid": {
                "rendered": "https:\/\/rosswintle.uk\/?p=9966"
            },
            "modified": "2021-05-14T10:21:13",
            "modified_gmt": "2021-05-14T09:21:13",
            "slug": "getting-to-grip-with-docker-and-laravel-sail-on-apple-silicon-m1",
            "status": "publish",
            "type": "post",
            "link": "https:\/\/rosswintle.uk\/2021\/03\/getting-to-grip-with-docker-and-laravel-sail-on-apple-silicon-m1\/",
            "title": {
                "rendered": "Getting to grips with Docker and Laravel Sail (on Apple Silicon\/M1)"
            },
            "content": {
                "rendered": "\n<p>So I wanted to have a play with <a href=\"https:\/\/laravel.com\/docs\/8.x\/starter-kits#laravel-breeze\">Laravel Breeze<\/a> and <a href=\"https:\/\/jetstream.laravel.com\/\">Jetstream<\/a>. In doing so I noticed that the instructions for Breeze (and for Laravel in general) suggest a Docker-based <a href=\"https:\/\/laravel.com\/docs\/8.x\/sail\">Laravel Sail<\/a> install by default.<\/p>\n\n\n\n<p>I had not looked into Docker despite a lot of hype around it recently in my tech world. So I used the new Laravel encouragements to give it a shot.<\/p>\n\n\n\n<p>BUT&#8230;I have the slight problem that I have an ARM\/Apple Silicon\/M1 MacBook, and, while a <a href=\"https:\/\/docs.docker.com\/docker-for-mac\/apple-m1\/\">Docker Tech Preview (beta) exists for this<\/a>, it has issues, and there are some things that aren&#8217;t suppored &#8211; including MySQL!<\/p>\n\n\n\n<p>This post is a super-quick overview of Sail, the issues I had on Apple Silicon and how I fixed them.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Overview of Docker and Laravel Sail<\/h2>\n\n\n\n<p>This is covered in much more detail elsewhere, but Docker is a way of making lightweight virtual machines called &#8220;containers&#8221;. Rather than running a full blown operating system, these make use of what is already there in the existing operating system and they only add or change what is not there or different.<\/p>\n\n\n\n<p><a href=\"https:\/\/twitter.com\/olilafleur\">Olivier Lafleur<\/a> recommended <a href=\"https:\/\/twitter.com\/shanselman\">Scott Hanselman&#8217;s<\/a> excellent <a href=\"https:\/\/www.youtube.com\/watch?v=0oEsMwSxBsk\">video introduction<\/a> if you want more detail on this.<\/p>\n\n\n\n<p>Laravel Sail is a set of scripts and configurations that allow you to fire up a bunch of containers running services that, together, get a Laravel application up and running. These services include MySQL and PHP but you get others too like Redis and Mailhog.<\/p>\n\n\n\n<p>You may, after digging in a bit, note that there is no web server (Apache\/nginx) and this is because Sail uses PHP&#8217;s built-in web server. You can see it starting up <a href=\"http:\/\/command=\/usr\/bin\/php -d variables_order=EGPCS \/var\/www\/html\/artisan serve --host=0.0.0.0 --port=80\">in the supervisord.conf file<\/a> of the Laravel container.<\/p>\n\n\n\n<p>It&#8217;s also worth noting that the containers are, for the most part, temporary\/ephemeral and kinda don&#8217;t save their state. They get created. And they get destroyed.<\/p>\n\n\n\n<p>The exception to this is the MySql container which uses a Docker &#8220;volume&#8221; to store its data.<\/p>\n\n\n\n<p>If you&#8217;re not familiar with Docker and aren&#8217;t interested in its internals then what you need to know is:<\/p>\n\n\n\n<ul><li>Your Laravel project files are mapped into the container. Any changes you make locally are reflected inside the container immediately.<\/li><li>Your database is persisted. (I believe Redis state is too, but I&#8217;m not sure what the benefit of this is.)<\/li><li>Everything else is destroyed when you shut Sail down. Mostly because it doesn&#8217;t NEED to be saved. You just recreate everything in its default state the next time you need it.<\/li><\/ul>\n\n\n\n<p><a href=\"https:\/\/twitter.com\/osteel\">Yannick<\/a>&#8216;s <a href=\"https:\/\/tech.osteel.me\/posts\/you-dont-need-laravel-sail\">awesome post<\/a> gives an excellent and very detailed overview of both Docker and Sail that I&#8217;ve yet to read in full. And the free <a href=\"https:\/\/laracasts.com\/series\/whats-new-in-laravel-8\/episodes\/12\">Laracasts video<\/a> was also pretty helpful in understanding Sail.<\/p>\n\n\n\n<p>You may be a Valet or MAMP user who&#8217;s wondering what the benefits of this approach are. And I think that for smaller projects there probably aren&#8217;t many benefits. But for bigger projects there definitely are, such as ensuring the development and live environments are the same.<\/p>\n\n\n\n<p>My own curiosity came from the fact that I&#8217;d been thinking about security and how all these node and composer packages could be doing anything on my laptop. Putting them inside a container limited their ability to run amok on my laptop when doing local development. So I wanted to try it out from that point of view.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Issues with Apple Silicon\/M1<\/h2>\n\n\n\n<h3 class=\"wp-block-heading\">Summary: Sail doesn&#8217;t quite work<\/h3>\n\n\n\n<p>Sail, out of the box, doesn&#8217;t work with Apple Silicon\/M1 computers. But you can make most of it work. If you know how.<\/p>\n\n\n\n<p>Given this, I found it pretty surprising that it&#8217;s now the recommended way to get up and running with Laravel. If you&#8217;re a beginner then following the installation instructions and immediately hitting a very-complicated-to-resolve failure may put you right off. I&#8217;m NOT a beginner, but I&#8217;m empathetic and often see different sides of an experience. This would not be a good experience for a new-to-Laravel developer on an M1 Mac.<\/p>\n\n\n\n<p>Sail advertises itself as &#8220;a great starting point for building a Laravel application using PHP, MySQL, and Redis without requiring prior Docker experience&#8221;, but on my machine, I needed to learn an awful lot of Docker to make it work and understand a few other things too.<\/p>\n\n\n\n<p>You could argue that Docker for the M1 Mac&#8217;s is in tech preview\/beta, so you should not expect things to work. But I still think that people will want to try it, the documentation around it isn&#8217;t good enough, and there are some small changes that would really help.<\/p>\n\n\n\n<p>These instructions assume you have a new Laravel project created with Sail, or you&#8217;ve installed Sail into an existing Laravel project.<\/p>\n\n\n\n<h3 class=\"wp-block-heading\">Fix 1: Remove Meilisearch<\/h3>\n\n\n\n<p>Meilisearch is broken. You can build the Docker images with it in place, and you can start Sail up, but when you try to interact with Sail you get an error and Sail shuts down:<\/p>\n\n\n<div class=\"wp-block-syntaxhighlighter-code \"><pre class=\"brush: bash; title: ; notranslate\" title=\"\">\n$ vendor\/bin\/sail shell\nbreeze_meilisearch_1    tini -- \/bin\/sh -c .\/meili ...   Exit 1\nShutting down old Sail processes...\nSail is not running.\n<\/pre><\/div>\n\n\n<p>Meilisearch feels like a very optional requirement. So I removed it.<\/p>\n\n\n\n<p>Edit the docker-compose.yml in the root of your Laravel project and remove <code>meilisearch<\/code> from the <code>depends_on<\/code> section of the <code>laravel.test<\/code> service:<\/p>\n\n\n<div class=\"wp-block-syntaxhighlighter-code \"><pre class=\"brush: yaml; title: ; notranslate\" title=\"\">\n        depends_on:\n            - mariadb\n            - redis\n            - selenium\n            - meilisearch\n<\/pre><\/div>\n\n\n<p>Then you can delete, or if you&#8217;re hopeful of a future fix comment out, the lines for the <code>meilisearch<\/code> service lower down.<\/p>\n\n\n\n<p>Then rebuild your containers with <code>vendor\/bin\/sail build<\/code><\/p>\n\n\n\n<p>Note: I believe that if you&#8217;re installing Sail interactively then you are prompted to choose which services to install. You can just not install Meilisearch at this point and skip this first fix.<\/p>\n\n\n\n<h3 class=\"wp-block-heading\">Fix 2: Swap MySql for MariaDB<\/h3>\n\n\n\n<p>Next you&#8217;ll find that the <a href=\"https:\/\/hub.docker.com\/_\/mysql\">MySql Docker image<\/a> doesn&#8217;t support ARM processors like the M1. This is even <a href=\"https:\/\/docs.docker.com\/docker-for-mac\/apple-m1\/#known-issues\">documented by Docker<\/a> with two solutions:<\/p>\n\n\n\n<ul><li>Run with the <code>--platform linux\/amd64<\/code> flag, which I couldn&#8217;t figure out how to do.<\/li><li>Use MariaDB instead. This <em>seemed<\/em> like an easier option, and would perform better as it would run native.<\/li><\/ul>\n\n\n\n<p>To do this you need to modify a couple of things.<\/p>\n\n\n\n<p>First, edit the <code>docker-compose.yml<\/code> file in the root of your project and replace <code>mysql<\/code> with <code>mariadb<\/code> in the <code>depends_on<\/code> section of the <code>laravel.test<\/code> service:<\/p>\n\n\n<div class=\"wp-block-syntaxhighlighter-code \"><pre class=\"brush: plain; title: ; notranslate\" title=\"\">\n        depends_on:\n            - mariadb\n            - redis\n            - selenium\n<\/pre><\/div>\n\n\n<p>You&#8217;ll then want to rename the <code>mysql<\/code> service as a <code>mariadb<\/code> service and install the right Docker image (this needs a version number but I don&#8217;t know what to give, so I&#8217;m just using the latest I guess?)<\/p>\n\n\n<div class=\"wp-block-syntaxhighlighter-code \"><pre class=\"brush: yaml; title: ; notranslate\" title=\"\">\n    mariadb:\n        image: 'mariadb'\n<\/pre><\/div>\n\n\n<p>Leave the rest of the mysql config intact.<\/p>\n\n\n\n<p>Then again, rebuild the containers with <code>vendor\/bin\/sail build<\/code><\/p>\n\n\n\n<p>This installs MariaDB instead of MySQL which will nicely run native, but if you try to do anything with your database at this point you&#8217;ll get connection errors:<\/p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" decoding=\"async\" width=\"1024\" height=\"474\" src=\"https:\/\/rosswintle.uk\/wp-content\/uploads\/2021\/03\/CleanShot-2021-03-02-at-10.54.57@2x-1024x474.png\" alt=\"\" class=\"wp-image-9973\" srcset=\"https:\/\/rosswintle.uk\/wp-content\/uploads\/2021\/03\/CleanShot-2021-03-02-at-10.54.57@2x-1024x474.png 1024w, https:\/\/rosswintle.uk\/wp-content\/uploads\/2021\/03\/CleanShot-2021-03-02-at-10.54.57@2x-300x139.png 300w, https:\/\/rosswintle.uk\/wp-content\/uploads\/2021\/03\/CleanShot-2021-03-02-at-10.54.57@2x-768x356.png 768w, https:\/\/rosswintle.uk\/wp-content\/uploads\/2021\/03\/CleanShot-2021-03-02-at-10.54.57@2x-1536x712.png 1536w, https:\/\/rosswintle.uk\/wp-content\/uploads\/2021\/03\/CleanShot-2021-03-02-at-10.54.57@2x-2048x949.png 2048w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" \/><\/figure>\n\n\n\n<p>but you need to configure your app to talk to the right service on the network, so edit your <code>.env<\/code> and change the <code>DB_HOST<\/code> from <code>mysql<\/code> to <code>mariadb<\/code><\/p>\n\n\n<div class=\"wp-block-syntaxhighlighter-code \"><pre class=\"brush: plain; title: ; notranslate\" title=\"\">\nDB_HOST=mariadb\n<\/pre><\/div>\n\n\n<p>You don&#8217;t need to rebuild your containers for this. But this should fix everything!<\/p>\n\n\n\n<h3 class=\"wp-block-heading\">No fix for sail share \/ Expose<\/h3>\n\n\n\n<p>In theory Sail has a great sharing function that lets you share your local sail-hosted site with the outside world. It makes use of <a href=\"https:\/\/beyondco.de\/\">Beyond Code<\/a>&#8216;s open-source <a href=\"https:\/\/beyondco.de\/docs\/expose\/introduction\">Expose<\/a> product which sets up tunnels similar to ngrok and the &#8220;valet share&#8221; command if you&#8217;ve ever used that.<\/p>\n\n\n\n<p>But this also fails.<\/p>\n\n\n\n<p>This appears to run and set up a connections, but it seems that something somewhere just isn&#8217;t running. Connecting to the URL just does nothing.<\/p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" decoding=\"async\" width=\"1024\" height=\"397\" src=\"https:\/\/rosswintle.uk\/wp-content\/uploads\/2021\/03\/CleanShot-2021-03-02-at-11.01.48@2x-1024x397.png\" alt=\"\" class=\"wp-image-9974\" srcset=\"https:\/\/rosswintle.uk\/wp-content\/uploads\/2021\/03\/CleanShot-2021-03-02-at-11.01.48@2x-1024x397.png 1024w, https:\/\/rosswintle.uk\/wp-content\/uploads\/2021\/03\/CleanShot-2021-03-02-at-11.01.48@2x-300x116.png 300w, https:\/\/rosswintle.uk\/wp-content\/uploads\/2021\/03\/CleanShot-2021-03-02-at-11.01.48@2x-768x297.png 768w, https:\/\/rosswintle.uk\/wp-content\/uploads\/2021\/03\/CleanShot-2021-03-02-at-11.01.48@2x-1536x595.png 1536w, https:\/\/rosswintle.uk\/wp-content\/uploads\/2021\/03\/CleanShot-2021-03-02-at-11.01.48@2x-2048x793.png 2048w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" \/><\/figure>\n\n\n\n<p>I&#8217;m not sure if this is an M1-specific problem or not. I&#8217;ve copied <a href=\"https:\/\/github.com\/laravel\/sail\/blob\/f7a857531a135c756c980f6df1bc47978577ca8e\/bin\/sail#L268\">the command from the Sail script<\/a> and tried running it manually with the platform flag:<\/p>\n\n\n<div class=\"wp-block-syntaxhighlighter-code \"><pre class=\"brush: bash; title: ; notranslate\" title=\"\">\ndocker run --platform linux\/amd64 --init beyondcodegmbh\/expose-server share http:\/\/host.docker.internal:&quot;$APP_PORT&quot; \\\n            --server-host=laravel-sail.site \\\n            --server-port=8080\n<\/pre><\/div>\n\n\n<p>This gets rid of the platform error, but this still didn&#8217;t work, so maybe it&#8217;s a wider expose problem. I don&#8217;t know.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Where are my volumes\/databases?<\/h2>\n\n\n\n<p>Finally, there&#8217;s this very hidden-away bit of Docker that I really wanted to understand but couldn&#8217;t: volumes.<\/p>\n\n\n\n<p>I&#8217;d wondered if I could see the database files and maybe run a non-Docker database against them. But for all my hunting I could not find any data files for my application.<\/p>\n\n\n\n<p>The closest I got was running <code>docker inspect &lt;volume name&gt;<\/code>, which gave me this:<\/p>\n\n\n<div class=\"wp-block-syntaxhighlighter-code \"><pre class=\"brush: plain; title: ; notranslate\" title=\"\">\n$ docker inspect breeze_sailmysql\n&#x5B;\n    {\n        &quot;CreatedAt&quot;: &quot;2021-03-02T10:53:58Z&quot;,\n        &quot;Driver&quot;: &quot;local&quot;,\n        &quot;Labels&quot;: {\n            &quot;com.docker.compose.project&quot;: &quot;breeze&quot;,\n            &quot;com.docker.compose.version&quot;: &quot;1.28.2&quot;,\n            &quot;com.docker.compose.volume&quot;: &quot;sailmysql&quot;\n        },\n        &quot;Mountpoint&quot;: &quot;\/var\/lib\/docker\/volumes\/breeze_sailmysql\/_data&quot;,\n        &quot;Name&quot;: &quot;breeze_sailmysql&quot;,\n        &quot;Options&quot;: null,\n        &quot;Scope&quot;: &quot;local&quot;\n    }\n]\n<\/pre><\/div>\n\n\n<p>And I figured I should look for <code>\/var\/lib\/docker\/volumes\/breeze_sailmysql\/_data<\/code>, but I couldn&#8217;t find this or anything like it anywhere.<\/p>\n\n\n\n<p>Searching my local filesystem for Docker stuff revealed a 60GB file at <code>\/Users\/rosswintle\/Library\/Containers\/com.docker.docker\/Data\/vms\/0\/data\/Docker.raw<\/code><\/p>\n\n\n\n<p>This is referenced in the Docker preferences:<\/p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" decoding=\"async\" width=\"1024\" height=\"641\" src=\"https:\/\/rosswintle.uk\/wp-content\/uploads\/2021\/03\/CleanShot-2021-03-02-at-11.31.42@2x-1024x641.png\" alt=\"\" class=\"wp-image-9977\" srcset=\"https:\/\/rosswintle.uk\/wp-content\/uploads\/2021\/03\/CleanShot-2021-03-02-at-11.31.42@2x-1024x641.png 1024w, https:\/\/rosswintle.uk\/wp-content\/uploads\/2021\/03\/CleanShot-2021-03-02-at-11.31.42@2x-300x188.png 300w, https:\/\/rosswintle.uk\/wp-content\/uploads\/2021\/03\/CleanShot-2021-03-02-at-11.31.42@2x-768x481.png 768w, https:\/\/rosswintle.uk\/wp-content\/uploads\/2021\/03\/CleanShot-2021-03-02-at-11.31.42@2x-1536x961.png 1536w, https:\/\/rosswintle.uk\/wp-content\/uploads\/2021\/03\/CleanShot-2021-03-02-at-11.31.42@2x-2048x1282.png 2048w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" \/><\/figure>\n\n\n\n<p>So I&#8217;m assuming this is some kind of virtual filesystem thing that stores my containers volumes locally. This was kinda <a href=\"https:\/\/twitter.com\/osteel\/status\/1366287151382597634?s=20\">confirmed by Yannik<\/a> also.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Fin<\/h2>\n\n\n\n<p>That&#8217;s all I got. Let me know what you think of Sail, of if you think I got anything wrong.<\/p>\n",
                "protected": false
            },
            "excerpt": {
                "rendered": "<p>So I wanted to have a play with Laravel Breeze and Jetstream. In doing so I noticed that the instructions for Breeze (and for Laravel in general) suggest a Docker-based Laravel Sail install by default. I had not looked into Docker despite a lot of hype around it recently in my tech world. So I [&hellip;]<\/p>\n",
                "protected": false
            },
            "author": 2,
            "featured_media": 0,
            "comment_status": "open",
            "ping_status": "closed",
            "sticky": false,
            "template": "",
            "format": "standard",
            "meta": {
                "sig_custom_text": "",
                "sig_image_type": "featured-image",
                "sig_custom_image": 0,
                "sig_is_disabled": false,
                "url": "",
                "footnotes": ""
            },
            "categories": [
                642,
                23
            ],
            "tags": [
                64,
                5054,
                643,
                5053
            ],
            "yoast_head": "<!-- This site is optimized with the Yoast SEO plugin v21.7 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>Getting to grips with Docker and Laravel Sail (on Apple Silicon\/M1) - Ross Wintle<\/title>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/rosswintle.uk\/2021\/03\/getting-to-grip-with-docker-and-laravel-sail-on-apple-silicon-m1\/\" \/>\n<meta property=\"og:locale\" content=\"en_GB\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"Getting to grips with Docker and Laravel Sail (on Apple Silicon\/M1) - Ross Wintle\" \/>\n<meta property=\"og:description\" content=\"So I wanted to have a play with Laravel Breeze and Jetstream. In doing so I noticed that the instructions for Breeze (and for Laravel in general) suggest a Docker-based Laravel Sail install by default. I had not looked into Docker despite a lot of hype around it recently in my tech world. So I [&hellip;]\" \/>\n<meta property=\"og:url\" content=\"https:\/\/rosswintle.uk\/2021\/03\/getting-to-grip-with-docker-and-laravel-sail-on-apple-silicon-m1\/\" \/>\n<meta property=\"og:site_name\" content=\"Ross Wintle\" \/>\n<meta property=\"article:published_time\" content=\"2021-03-02T11:49:34+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2021-05-14T09:21:13+00:00\" \/>\n<meta property=\"og:image\" content=\"https:\/\/rosswintle.uk\/wp-content\/uploads\/2021\/03\/CleanShot-2021-03-02-at-10.54.57@2x-1024x474.png\" \/>\n<meta name=\"author\" content=\"Ross Wintle\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:creator\" content=\"@magicroundabout\" \/>\n<meta name=\"twitter:site\" content=\"@magicroundabout\" \/>\n<meta name=\"twitter:label1\" content=\"Written by\" \/>\n\t<meta name=\"twitter:data1\" content=\"Ross Wintle\" \/>\n\t<meta name=\"twitter:label2\" content=\"Estimated reading time\" \/>\n\t<meta name=\"twitter:data2\" content=\"8 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"https:\/\/rosswintle.uk\/2021\/03\/getting-to-grip-with-docker-and-laravel-sail-on-apple-silicon-m1\/\",\"url\":\"https:\/\/rosswintle.uk\/2021\/03\/getting-to-grip-with-docker-and-laravel-sail-on-apple-silicon-m1\/\",\"name\":\"Getting to grips with Docker and Laravel Sail (on Apple Silicon\/M1) - Ross Wintle\",\"isPartOf\":{\"@id\":\"https:\/\/rosswintle.uk\/#website\"},\"datePublished\":\"2021-03-02T11:49:34+00:00\",\"dateModified\":\"2021-05-14T09:21:13+00:00\",\"author\":{\"@id\":\"https:\/\/rosswintle.uk\/#\/schema\/person\/9f9bec147b2bfd762f09a2c2da7177dc\"},\"breadcrumb\":{\"@id\":\"https:\/\/rosswintle.uk\/2021\/03\/getting-to-grip-with-docker-and-laravel-sail-on-apple-silicon-m1\/#breadcrumb\"},\"inLanguage\":\"en-GB\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/rosswintle.uk\/2021\/03\/getting-to-grip-with-docker-and-laravel-sail-on-apple-silicon-m1\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/rosswintle.uk\/2021\/03\/getting-to-grip-with-docker-and-laravel-sail-on-apple-silicon-m1\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/rosswintle.uk\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"Getting to grips with Docker and Laravel Sail (on Apple Silicon\/M1)\"}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/rosswintle.uk\/#website\",\"url\":\"https:\/\/rosswintle.uk\/\",\"name\":\"Ross Wintle\",\"description\":\"Creativity, curiosity, and code\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/rosswintle.uk\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-GB\"},{\"@type\":\"Person\",\"@id\":\"https:\/\/rosswintle.uk\/#\/schema\/person\/9f9bec147b2bfd762f09a2c2da7177dc\",\"name\":\"Ross Wintle\",\"image\":{\"@type\":\"ImageObject\",\"inLanguage\":\"en-GB\",\"@id\":\"https:\/\/rosswintle.uk\/#\/schema\/person\/image\/\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/28519fc7c37998eea059b525da5fc7ce?s=96&d=identicon&r=g\",\"contentUrl\":\"https:\/\/secure.gravatar.com\/avatar\/28519fc7c37998eea059b525da5fc7ce?s=96&d=identicon&r=g\",\"caption\":\"Ross Wintle\"},\"url\":\"https:\/\/rosswintle.uk\/author\/rosswintle\/\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->",
            "yoast_head_json": {
                "title": "Getting to grips with Docker and Laravel Sail (on Apple Silicon\/M1) - Ross Wintle",
                "robots": {
                    "index": "index",
                    "follow": "follow",
                    "max-snippet": "max-snippet:-1",
                    "max-image-preview": "max-image-preview:large",
                    "max-video-preview": "max-video-preview:-1"
                },
                "canonical": "https:\/\/rosswintle.uk\/2021\/03\/getting-to-grip-with-docker-and-laravel-sail-on-apple-silicon-m1\/",
                "og_locale": "en_GB",
                "og_type": "article",
                "og_title": "Getting to grips with Docker and Laravel Sail (on Apple Silicon\/M1) - Ross Wintle",
                "og_description": "So I wanted to have a play with Laravel Breeze and Jetstream. In doing so I noticed that the instructions for Breeze (and for Laravel in general) suggest a Docker-based Laravel Sail install by default. I had not looked into Docker despite a lot of hype around it recently in my tech world. So I [&hellip;]",
                "og_url": "https:\/\/rosswintle.uk\/2021\/03\/getting-to-grip-with-docker-and-laravel-sail-on-apple-silicon-m1\/",
                "og_site_name": "Ross Wintle",
                "article_published_time": "2021-03-02T11:49:34+00:00",
                "article_modified_time": "2021-05-14T09:21:13+00:00",
                "og_image": [
                    {
                        "url": "https:\/\/rosswintle.uk\/wp-content\/uploads\/2021\/03\/CleanShot-2021-03-02-at-10.54.57@2x-1024x474.png"
                    }
                ],
                "author": "Ross Wintle",
                "twitter_card": "summary_large_image",
                "twitter_creator": "@magicroundabout",
                "twitter_site": "@magicroundabout",
                "twitter_misc": {
                    "Written by": "Ross Wintle",
                    "Estimated reading time": "8 minutes"
                },
                "schema": {
                    "@context": "https:\/\/schema.org",
                    "@graph": [
                        {
                            "@type": "WebPage",
                            "@id": "https:\/\/rosswintle.uk\/2021\/03\/getting-to-grip-with-docker-and-laravel-sail-on-apple-silicon-m1\/",
                            "url": "https:\/\/rosswintle.uk\/2021\/03\/getting-to-grip-with-docker-and-laravel-sail-on-apple-silicon-m1\/",
                            "name": "Getting to grips with Docker and Laravel Sail (on Apple Silicon\/M1) - Ross Wintle",
                            "isPartOf": {
                                "@id": "https:\/\/rosswintle.uk\/#website"
                            },
                            "datePublished": "2021-03-02T11:49:34+00:00",
                            "dateModified": "2021-05-14T09:21:13+00:00",
                            "author": {
                                "@id": "https:\/\/rosswintle.uk\/#\/schema\/person\/9f9bec147b2bfd762f09a2c2da7177dc"
                            },
                            "breadcrumb": {
                                "@id": "https:\/\/rosswintle.uk\/2021\/03\/getting-to-grip-with-docker-and-laravel-sail-on-apple-silicon-m1\/#breadcrumb"
                            },
                            "inLanguage": "en-GB",
                            "potentialAction": [
                                {
                                    "@type": "ReadAction",
                                    "target": [
                                        "https:\/\/rosswintle.uk\/2021\/03\/getting-to-grip-with-docker-and-laravel-sail-on-apple-silicon-m1\/"
                                    ]
                                }
                            ]
                        },
                        {
                            "@type": "BreadcrumbList",
                            "@id": "https:\/\/rosswintle.uk\/2021\/03\/getting-to-grip-with-docker-and-laravel-sail-on-apple-silicon-m1\/#breadcrumb",
                            "itemListElement": [
                                {
                                    "@type": "ListItem",
                                    "position": 1,
                                    "name": "Home",
                                    "item": "https:\/\/rosswintle.uk\/"
                                },
                                {
                                    "@type": "ListItem",
                                    "position": 2,
                                    "name": "Getting to grips with Docker and Laravel Sail (on Apple Silicon\/M1)"
                                }
                            ]
                        },
                        {
                            "@type": "WebSite",
                            "@id": "https:\/\/rosswintle.uk\/#website",
                            "url": "https:\/\/rosswintle.uk\/",
                            "name": "Ross Wintle",
                            "description": "Creativity, curiosity, and code",
                            "potentialAction": [
                                {
                                    "@type": "SearchAction",
                                    "target": {
                                        "@type": "EntryPoint",
                                        "urlTemplate": "https:\/\/rosswintle.uk\/?s={search_term_string}"
                                    },
                                    "query-input": "required name=search_term_string"
                                }
                            ],
                            "inLanguage": "en-GB"
                        },
                        {
                            "@type": "Person",
                            "@id": "https:\/\/rosswintle.uk\/#\/schema\/person\/9f9bec147b2bfd762f09a2c2da7177dc",
                            "name": "Ross Wintle",
                            "image": {
                                "@type": "ImageObject",
                                "inLanguage": "en-GB",
                                "@id": "https:\/\/rosswintle.uk\/#\/schema\/person\/image\/",
                                "url": "https:\/\/secure.gravatar.com\/avatar\/28519fc7c37998eea059b525da5fc7ce?s=96&d=identicon&r=g",
                                "contentUrl": "https:\/\/secure.gravatar.com\/avatar\/28519fc7c37998eea059b525da5fc7ce?s=96&d=identicon&r=g",
                                "caption": "Ross Wintle"
                            },
                            "url": "https:\/\/rosswintle.uk\/author\/rosswintle\/"
                        }
                    ]
                }
            },
            "_links": {
                "self": [
                    {
                        "href": "https:\/\/rosswintle.uk\/wp-json\/wp\/v2\/posts\/9966"
                    }
                ],
                "collection": [
                    {
                        "href": "https:\/\/rosswintle.uk\/wp-json\/wp\/v2\/posts"
                    }
                ],
                "about": [
                    {
                        "href": "https:\/\/rosswintle.uk\/wp-json\/wp\/v2\/types\/post"
                    }
                ],
                "author": [
                    {
                        "embeddable": true,
                        "href": "https:\/\/rosswintle.uk\/wp-json\/wp\/v2\/users\/2"
                    }
                ],
                "replies": [
                    {
                        "embeddable": true,
                        "href": "https:\/\/rosswintle.uk\/wp-json\/wp\/v2\/comments?post=9966"
                    }
                ],
                "version-history": [
                    {
                        "count": 6,
                        "href": "https:\/\/rosswintle.uk\/wp-json\/wp\/v2\/posts\/9966\/revisions"
                    }
                ],
                "predecessor-version": [
                    {
                        "id": 9981,
                        "href": "https:\/\/rosswintle.uk\/wp-json\/wp\/v2\/posts\/9966\/revisions\/9981"
                    }
                ],
                "wp:attachment": [
                    {
                        "href": "https:\/\/rosswintle.uk\/wp-json\/wp\/v2\/media?parent=9966"
                    }
                ],
                "wp:term": [
                    {
                        "taxonomy": "category",
                        "embeddable": true,
                        "href": "https:\/\/rosswintle.uk\/wp-json\/wp\/v2\/categories?post=9966"
                    },
                    {
                        "taxonomy": "post_tag",
                        "embeddable": true,
                        "href": "https:\/\/rosswintle.uk\/wp-json\/wp\/v2\/tags?post=9966"
                    }
                ],
                "curies": [
                    {
                        "name": "wp",
                        "href": "https:\/\/api.w.org\/{rel}",
                        "templated": true
                    }
                ]
            }
        },
        "id": 9966,
        "dateGmt": "2021-03-02T11:49:34",
        "modifiedDateGmt": "2021-05-14T09:21:13",
        "slug": "getting-to-grip-with-docker-and-laravel-sail-on-apple-silicon-m1",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/rosswintle.uk\/2021\/03\/getting-to-grip-with-docker-and-laravel-sail-on-apple-silicon-m1\/",
        "title": "Getting to grips with Docker and Laravel Sail (on Apple Silicon\/M1)",
        "content": "\n<p>So I wanted to have a play with <a href=\"https:\/\/laravel.com\/docs\/8.x\/starter-kits#laravel-breeze\">Laravel Breeze<\/a> and <a href=\"https:\/\/jetstream.laravel.com\/\">Jetstream<\/a>. In doing so I noticed that the instructions for Breeze (and for Laravel in general) suggest a Docker-based <a href=\"https:\/\/laravel.com\/docs\/8.x\/sail\">Laravel Sail<\/a> install by default.<\/p>\n\n\n\n<p>I had not looked into Docker despite a lot of hype around it recently in my tech world. So I used the new Laravel encouragements to give it a shot.<\/p>\n\n\n\n<p>BUT&#8230;I have the slight problem that I have an ARM\/Apple Silicon\/M1 MacBook, and, while a <a href=\"https:\/\/docs.docker.com\/docker-for-mac\/apple-m1\/\">Docker Tech Preview (beta) exists for this<\/a>, it has issues, and there are some things that aren&#8217;t suppored &#8211; including MySQL!<\/p>\n\n\n\n<p>This post is a super-quick overview of Sail, the issues I had on Apple Silicon and how I fixed them.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Overview of Docker and Laravel Sail<\/h2>\n\n\n\n<p>This is covered in much more detail elsewhere, but Docker is a way of making lightweight virtual machines called &#8220;containers&#8221;. Rather than running a full blown operating system, these make use of what is already there in the existing operating system and they only add or change what is not there or different.<\/p>\n\n\n\n<p><a href=\"https:\/\/twitter.com\/olilafleur\">Olivier Lafleur<\/a> recommended <a href=\"https:\/\/twitter.com\/shanselman\">Scott Hanselman&#8217;s<\/a> excellent <a href=\"https:\/\/www.youtube.com\/watch?v=0oEsMwSxBsk\">video introduction<\/a> if you want more detail on this.<\/p>\n\n\n\n<p>Laravel Sail is a set of scripts and configurations that allow you to fire up a bunch of containers running services that, together, get a Laravel application up and running. These services include MySQL and PHP but you get others too like Redis and Mailhog.<\/p>\n\n\n\n<p>You may, after digging in a bit, note that there is no web server (Apache\/nginx) and this is because Sail uses PHP&#8217;s built-in web server. You can see it starting up <a href=\"http:\/\/command=\/usr\/bin\/php -d variables_order=EGPCS \/var\/www\/html\/artisan serve --host=0.0.0.0 --port=80\">in the supervisord.conf file<\/a> of the Laravel container.<\/p>\n\n\n\n<p>It&#8217;s also worth noting that the containers are, for the most part, temporary\/ephemeral and kinda don&#8217;t save their state. They get created. And they get destroyed.<\/p>\n\n\n\n<p>The exception to this is the MySql container which uses a Docker &#8220;volume&#8221; to store its data.<\/p>\n\n\n\n<p>If you&#8217;re not familiar with Docker and aren&#8217;t interested in its internals then what you need to know is:<\/p>\n\n\n\n<ul><li>Your Laravel project files are mapped into the container. Any changes you make locally are reflected inside the container immediately.<\/li><li>Your database is persisted. (I believe Redis state is too, but I&#8217;m not sure what the benefit of this is.)<\/li><li>Everything else is destroyed when you shut Sail down. Mostly because it doesn&#8217;t NEED to be saved. You just recreate everything in its default state the next time you need it.<\/li><\/ul>\n\n\n\n<p><a href=\"https:\/\/twitter.com\/osteel\">Yannick<\/a>&#8216;s <a href=\"https:\/\/tech.osteel.me\/posts\/you-dont-need-laravel-sail\">awesome post<\/a> gives an excellent and very detailed overview of both Docker and Sail that I&#8217;ve yet to read in full. And the free <a href=\"https:\/\/laracasts.com\/series\/whats-new-in-laravel-8\/episodes\/12\">Laracasts video<\/a> was also pretty helpful in understanding Sail.<\/p>\n\n\n\n<p>You may be a Valet or MAMP user who&#8217;s wondering what the benefits of this approach are. And I think that for smaller projects there probably aren&#8217;t many benefits. But for bigger projects there definitely are, such as ensuring the development and live environments are the same.<\/p>\n\n\n\n<p>My own curiosity came from the fact that I&#8217;d been thinking about security and how all these node and composer packages could be doing anything on my laptop. Putting them inside a container limited their ability to run amok on my laptop when doing local development. So I wanted to try it out from that point of view.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Issues with Apple Silicon\/M1<\/h2>\n\n\n\n<h3 class=\"wp-block-heading\">Summary: Sail doesn&#8217;t quite work<\/h3>\n\n\n\n<p>Sail, out of the box, doesn&#8217;t work with Apple Silicon\/M1 computers. But you can make most of it work. If you know how.<\/p>\n\n\n\n<p>Given this, I found it pretty surprising that it&#8217;s now the recommended way to get up and running with Laravel. If you&#8217;re a beginner then following the installation instructions and immediately hitting a very-complicated-to-resolve failure may put you right off. I&#8217;m NOT a beginner, but I&#8217;m empathetic and often see different sides of an experience. This would not be a good experience for a new-to-Laravel developer on an M1 Mac.<\/p>\n\n\n\n<p>Sail advertises itself as &#8220;a great starting point for building a Laravel application using PHP, MySQL, and Redis without requiring prior Docker experience&#8221;, but on my machine, I needed to learn an awful lot of Docker to make it work and understand a few other things too.<\/p>\n\n\n\n<p>You could argue that Docker for the M1 Mac&#8217;s is in tech preview\/beta, so you should not expect things to work. But I still think that people will want to try it, the documentation around it isn&#8217;t good enough, and there are some small changes that would really help.<\/p>\n\n\n\n<p>These instructions assume you have a new Laravel project created with Sail, or you&#8217;ve installed Sail into an existing Laravel project.<\/p>\n\n\n\n<h3 class=\"wp-block-heading\">Fix 1: Remove Meilisearch<\/h3>\n\n\n\n<p>Meilisearch is broken. You can build the Docker images with it in place, and you can start Sail up, but when you try to interact with Sail you get an error and Sail shuts down:<\/p>\n\n\n<div class=\"wp-block-syntaxhighlighter-code \"><pre class=\"brush: bash; title: ; notranslate\" title=\"\">\n$ vendor\/bin\/sail shell\nbreeze_meilisearch_1    tini -- \/bin\/sh -c .\/meili ...   Exit 1\nShutting down old Sail processes...\nSail is not running.\n<\/pre><\/div>\n\n\n<p>Meilisearch feels like a very optional requirement. So I removed it.<\/p>\n\n\n\n<p>Edit the docker-compose.yml in the root of your Laravel project and remove <code>meilisearch<\/code> from the <code>depends_on<\/code> section of the <code>laravel.test<\/code> service:<\/p>\n\n\n<div class=\"wp-block-syntaxhighlighter-code \"><pre class=\"brush: yaml; title: ; notranslate\" title=\"\">\n        depends_on:\n            - mariadb\n            - redis\n            - selenium\n            - meilisearch\n<\/pre><\/div>\n\n\n<p>Then you can delete, or if you&#8217;re hopeful of a future fix comment out, the lines for the <code>meilisearch<\/code> service lower down.<\/p>\n\n\n\n<p>Then rebuild your containers with <code>vendor\/bin\/sail build<\/code><\/p>\n\n\n\n<p>Note: I believe that if you&#8217;re installing Sail interactively then you are prompted to choose which services to install. You can just not install Meilisearch at this point and skip this first fix.<\/p>\n\n\n\n<h3 class=\"wp-block-heading\">Fix 2: Swap MySql for MariaDB<\/h3>\n\n\n\n<p>Next you&#8217;ll find that the <a href=\"https:\/\/hub.docker.com\/_\/mysql\">MySql Docker image<\/a> doesn&#8217;t support ARM processors like the M1. This is even <a href=\"https:\/\/docs.docker.com\/docker-for-mac\/apple-m1\/#known-issues\">documented by Docker<\/a> with two solutions:<\/p>\n\n\n\n<ul><li>Run with the <code>--platform linux\/amd64<\/code> flag, which I couldn&#8217;t figure out how to do.<\/li><li>Use MariaDB instead. This <em>seemed<\/em> like an easier option, and would perform better as it would run native.<\/li><\/ul>\n\n\n\n<p>To do this you need to modify a couple of things.<\/p>\n\n\n\n<p>First, edit the <code>docker-compose.yml<\/code> file in the root of your project and replace <code>mysql<\/code> with <code>mariadb<\/code> in the <code>depends_on<\/code> section of the <code>laravel.test<\/code> service:<\/p>\n\n\n<div class=\"wp-block-syntaxhighlighter-code \"><pre class=\"brush: plain; title: ; notranslate\" title=\"\">\n        depends_on:\n            - mariadb\n            - redis\n            - selenium\n<\/pre><\/div>\n\n\n<p>You&#8217;ll then want to rename the <code>mysql<\/code> service as a <code>mariadb<\/code> service and install the right Docker image (this needs a version number but I don&#8217;t know what to give, so I&#8217;m just using the latest I guess?)<\/p>\n\n\n<div class=\"wp-block-syntaxhighlighter-code \"><pre class=\"brush: yaml; title: ; notranslate\" title=\"\">\n    mariadb:\n        image: 'mariadb'\n<\/pre><\/div>\n\n\n<p>Leave the rest of the mysql config intact.<\/p>\n\n\n\n<p>Then again, rebuild the containers with <code>vendor\/bin\/sail build<\/code><\/p>\n\n\n\n<p>This installs MariaDB instead of MySQL which will nicely run native, but if you try to do anything with your database at this point you&#8217;ll get connection errors:<\/p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" decoding=\"async\" width=\"1024\" height=\"474\" src=\"https:\/\/rosswintle.uk\/wp-content\/uploads\/2021\/03\/CleanShot-2021-03-02-at-10.54.57@2x-1024x474.png\" alt=\"\" class=\"wp-image-9973\" srcset=\"https:\/\/rosswintle.uk\/wp-content\/uploads\/2021\/03\/CleanShot-2021-03-02-at-10.54.57@2x-1024x474.png 1024w, https:\/\/rosswintle.uk\/wp-content\/uploads\/2021\/03\/CleanShot-2021-03-02-at-10.54.57@2x-300x139.png 300w, https:\/\/rosswintle.uk\/wp-content\/uploads\/2021\/03\/CleanShot-2021-03-02-at-10.54.57@2x-768x356.png 768w, https:\/\/rosswintle.uk\/wp-content\/uploads\/2021\/03\/CleanShot-2021-03-02-at-10.54.57@2x-1536x712.png 1536w, https:\/\/rosswintle.uk\/wp-content\/uploads\/2021\/03\/CleanShot-2021-03-02-at-10.54.57@2x-2048x949.png 2048w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" \/><\/figure>\n\n\n\n<p>but you need to configure your app to talk to the right service on the network, so edit your <code>.env<\/code> and change the <code>DB_HOST<\/code> from <code>mysql<\/code> to <code>mariadb<\/code><\/p>\n\n\n<div class=\"wp-block-syntaxhighlighter-code \"><pre class=\"brush: plain; title: ; notranslate\" title=\"\">\nDB_HOST=mariadb\n<\/pre><\/div>\n\n\n<p>You don&#8217;t need to rebuild your containers for this. But this should fix everything!<\/p>\n\n\n\n<h3 class=\"wp-block-heading\">No fix for sail share \/ Expose<\/h3>\n\n\n\n<p>In theory Sail has a great sharing function that lets you share your local sail-hosted site with the outside world. It makes use of <a href=\"https:\/\/beyondco.de\/\">Beyond Code<\/a>&#8216;s open-source <a href=\"https:\/\/beyondco.de\/docs\/expose\/introduction\">Expose<\/a> product which sets up tunnels similar to ngrok and the &#8220;valet share&#8221; command if you&#8217;ve ever used that.<\/p>\n\n\n\n<p>But this also fails.<\/p>\n\n\n\n<p>This appears to run and set up a connections, but it seems that something somewhere just isn&#8217;t running. Connecting to the URL just does nothing.<\/p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" decoding=\"async\" width=\"1024\" height=\"397\" src=\"https:\/\/rosswintle.uk\/wp-content\/uploads\/2021\/03\/CleanShot-2021-03-02-at-11.01.48@2x-1024x397.png\" alt=\"\" class=\"wp-image-9974\" srcset=\"https:\/\/rosswintle.uk\/wp-content\/uploads\/2021\/03\/CleanShot-2021-03-02-at-11.01.48@2x-1024x397.png 1024w, https:\/\/rosswintle.uk\/wp-content\/uploads\/2021\/03\/CleanShot-2021-03-02-at-11.01.48@2x-300x116.png 300w, https:\/\/rosswintle.uk\/wp-content\/uploads\/2021\/03\/CleanShot-2021-03-02-at-11.01.48@2x-768x297.png 768w, https:\/\/rosswintle.uk\/wp-content\/uploads\/2021\/03\/CleanShot-2021-03-02-at-11.01.48@2x-1536x595.png 1536w, https:\/\/rosswintle.uk\/wp-content\/uploads\/2021\/03\/CleanShot-2021-03-02-at-11.01.48@2x-2048x793.png 2048w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" \/><\/figure>\n\n\n\n<p>I&#8217;m not sure if this is an M1-specific problem or not. I&#8217;ve copied <a href=\"https:\/\/github.com\/laravel\/sail\/blob\/f7a857531a135c756c980f6df1bc47978577ca8e\/bin\/sail#L268\">the command from the Sail script<\/a> and tried running it manually with the platform flag:<\/p>\n\n\n<div class=\"wp-block-syntaxhighlighter-code \"><pre class=\"brush: bash; title: ; notranslate\" title=\"\">\ndocker run --platform linux\/amd64 --init beyondcodegmbh\/expose-server share http:\/\/host.docker.internal:&quot;$APP_PORT&quot; \\\n            --server-host=laravel-sail.site \\\n            --server-port=8080\n<\/pre><\/div>\n\n\n<p>This gets rid of the platform error, but this still didn&#8217;t work, so maybe it&#8217;s a wider expose problem. I don&#8217;t know.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Where are my volumes\/databases?<\/h2>\n\n\n\n<p>Finally, there&#8217;s this very hidden-away bit of Docker that I really wanted to understand but couldn&#8217;t: volumes.<\/p>\n\n\n\n<p>I&#8217;d wondered if I could see the database files and maybe run a non-Docker database against them. But for all my hunting I could not find any data files for my application.<\/p>\n\n\n\n<p>The closest I got was running <code>docker inspect &lt;volume name&gt;<\/code>, which gave me this:<\/p>\n\n\n<div class=\"wp-block-syntaxhighlighter-code \"><pre class=\"brush: plain; title: ; notranslate\" title=\"\">\n$ docker inspect breeze_sailmysql\n&#x5B;\n    {\n        &quot;CreatedAt&quot;: &quot;2021-03-02T10:53:58Z&quot;,\n        &quot;Driver&quot;: &quot;local&quot;,\n        &quot;Labels&quot;: {\n            &quot;com.docker.compose.project&quot;: &quot;breeze&quot;,\n            &quot;com.docker.compose.version&quot;: &quot;1.28.2&quot;,\n            &quot;com.docker.compose.volume&quot;: &quot;sailmysql&quot;\n        },\n        &quot;Mountpoint&quot;: &quot;\/var\/lib\/docker\/volumes\/breeze_sailmysql\/_data&quot;,\n        &quot;Name&quot;: &quot;breeze_sailmysql&quot;,\n        &quot;Options&quot;: null,\n        &quot;Scope&quot;: &quot;local&quot;\n    }\n]\n<\/pre><\/div>\n\n\n<p>And I figured I should look for <code>\/var\/lib\/docker\/volumes\/breeze_sailmysql\/_data<\/code>, but I couldn&#8217;t find this or anything like it anywhere.<\/p>\n\n\n\n<p>Searching my local filesystem for Docker stuff revealed a 60GB file at <code>\/Users\/rosswintle\/Library\/Containers\/com.docker.docker\/Data\/vms\/0\/data\/Docker.raw<\/code><\/p>\n\n\n\n<p>This is referenced in the Docker preferences:<\/p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img loading=\"lazy\" decoding=\"async\" width=\"1024\" height=\"641\" src=\"https:\/\/rosswintle.uk\/wp-content\/uploads\/2021\/03\/CleanShot-2021-03-02-at-11.31.42@2x-1024x641.png\" alt=\"\" class=\"wp-image-9977\" srcset=\"https:\/\/rosswintle.uk\/wp-content\/uploads\/2021\/03\/CleanShot-2021-03-02-at-11.31.42@2x-1024x641.png 1024w, https:\/\/rosswintle.uk\/wp-content\/uploads\/2021\/03\/CleanShot-2021-03-02-at-11.31.42@2x-300x188.png 300w, https:\/\/rosswintle.uk\/wp-content\/uploads\/2021\/03\/CleanShot-2021-03-02-at-11.31.42@2x-768x481.png 768w, https:\/\/rosswintle.uk\/wp-content\/uploads\/2021\/03\/CleanShot-2021-03-02-at-11.31.42@2x-1536x961.png 1536w, https:\/\/rosswintle.uk\/wp-content\/uploads\/2021\/03\/CleanShot-2021-03-02-at-11.31.42@2x-2048x1282.png 2048w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" \/><\/figure>\n\n\n\n<p>So I&#8217;m assuming this is some kind of virtual filesystem thing that stores my containers volumes locally. This was kinda <a href=\"https:\/\/twitter.com\/osteel\/status\/1366287151382597634?s=20\">confirmed by Yannik<\/a> also.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Fin<\/h2>\n\n\n\n<p>That&#8217;s all I got. Let me know what you think of Sail, of if you think I got anything wrong.<\/p>\n",
        "excerpt": "<p>So I wanted to have a play with Laravel Breeze and Jetstream. In doing so I noticed that the instructions for Breeze (and for Laravel in general) suggest a Docker-based Laravel Sail install by default. I had not looked into Docker despite a lot of hype around it recently in my tech world. So I [&hellip;]<\/p>\n",
        "parentId": 0,
        "authorId": 2,
        "featuredMediaId": 0
    },
    {
        "dataAsArray": {
            "id": 9949,
            "date": "2021-02-25T15:54:17",
            "date_gmt": "2021-02-25T15:54:17",
            "guid": {
                "rendered": "https:\/\/rosswintle.uk\/?p=9949"
            },
            "modified": "2021-02-25T16:16:20",
            "modified_gmt": "2021-02-25T16:16:20",
            "slug": "sustainable-web-design-book-thoughts",
            "status": "publish",
            "type": "post",
            "link": "https:\/\/rosswintle.uk\/2021\/02\/sustainable-web-design-book-thoughts\/",
            "title": {
                "rendered": "Sustainable Web Design: Book thoughts"
            },
            "content": {
                "rendered": "\n<p>I&#8217;m reading <a href=\"https:\/\/twitter.com\/eatwholegrain\">Tom Greenwood<\/a>&#8216;s book <a href=\"https:\/\/abookapart.com\/products\/sustainable-web-design\">Sustainable Web Design<\/a> and, interestingly, my main takeaways aren&#8217;t technical web design\/development things. They are around:<\/p>\n\n\n\n<ul><li>Business\/strategy &#8211; how there may (or may not) be benefit in positioning yourself as a sustainable web designer\/developer.<\/li><li>UX &#8211; there are some nuggets around user journeys that I&#8217;d not considered before. Reducing page loads is good!<\/li><li>Spaceflight (!) &#8211; as an aviation geek and wannabe engineer I&#8217;m fascinated by space flight tech, and there&#8217;s some interesting stuff about the emissions from SpaceX&#8217;s Starlink satellite launches.<\/li><\/ul>\n\n\n\n<p>I&#8217;ve often wondered about carbon emissions of spaceflight and satellite deployment, but apparently a SpaceX Starlink launch is &#8220;roughly equivalent to 5 full passenger planes journeying from London to Sydney&#8221; and &#8220;a fraction of what it would take to build physical infrastructure&#8221;.<\/p>\n\n\n\n<p>This stat is from The Smithsonian via <a href=\"https:\/\/wholegraindigital.com\/curiously-green\/issue-2\/\">Wholegrain&#8217;s newsletter<\/a> and it looks like it&#8217;s actually ONLY the fuel burning cost, so includes none of the embodied energy in the vehicle (energy used to make the rocket and fuel).<\/p>\n\n\n\n<p>I have to wonder how much energy is needed to make liquid oxygen and create and move around these colossal metal structures.<\/p>\n\n\n\n<p>(Aside: I have so many questions about the use of super-cold liquid fuels in rockets!)<\/p>\n\n\n\n<p>The other thing from the book that terrified me is the thought that so much of the UK&#8217;s internet backbone is in Docklands and could be flooded. If we lost a good proportion of our internet backbone I dread to think what would happen. Supply chains would collapse. My work would disappear overnight. Etc, etc. I&#8217;m sure there are backups and backups of backups for critical stuff like this but even so. Plus, the flooding map of London&#8230; ARGH!<\/p>\n\n\n\n<p>I close with this quote from the book&#8217;s conclusion:<\/p>\n\n\n\n<p>&#8220;There is no downside to a sustainable web, and creating it isn\u2019t fundamentally difficult. In fact, it\u2019s one of the most tangible and achievable steps in the zero-carbon revolution we\u2019re embarking on.&#8221;<\/p>\n",
                "protected": false
            },
            "excerpt": {
                "rendered": "<p>Some brief and random thoughts on the excellent book &#8220;Sustainable Web  Development&#8221;<\/p>\n",
                "protected": false
            },
            "author": 2,
            "featured_media": 0,
            "comment_status": "open",
            "ping_status": "closed",
            "sticky": false,
            "template": "",
            "format": "standard",
            "meta": {
                "sig_custom_text": "",
                "sig_image_type": "featured-image",
                "sig_custom_image": 0,
                "sig_is_disabled": false,
                "url": "",
                "footnotes": ""
            },
            "categories": [
                5,
                23
            ],
            "tags": [
                425,
                5050,
                64,
                301,
                181
            ],
            "yoast_head": "<!-- This site is optimized with the Yoast SEO plugin v21.7 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>Sustainable Web Design: Book thoughts - Ross Wintle<\/title>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/rosswintle.uk\/2021\/02\/sustainable-web-design-book-thoughts\/\" \/>\n<meta property=\"og:locale\" content=\"en_GB\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"Sustainable Web Design: Book thoughts - Ross Wintle\" \/>\n<meta property=\"og:description\" content=\"Some brief and random thoughts on the excellent book &quot;Sustainable Web Development&quot;\" \/>\n<meta property=\"og:url\" content=\"https:\/\/rosswintle.uk\/2021\/02\/sustainable-web-design-book-thoughts\/\" \/>\n<meta property=\"og:site_name\" content=\"Ross Wintle\" \/>\n<meta property=\"article:published_time\" content=\"2021-02-25T15:54:17+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2021-02-25T16:16:20+00:00\" \/>\n<meta property=\"og:image\" content=\"https:\/\/rosswintle.uk\/wp-content\/uploads\/2012\/06\/DSC_0005-small.jpg\" \/>\n\t<meta property=\"og:image:width\" content=\"600\" \/>\n\t<meta property=\"og:image:height\" content=\"399\" \/>\n\t<meta property=\"og:image:type\" content=\"image\/jpeg\" \/>\n<meta name=\"author\" content=\"Ross Wintle\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:creator\" content=\"@magicroundabout\" \/>\n<meta name=\"twitter:site\" content=\"@magicroundabout\" \/>\n<meta name=\"twitter:label1\" content=\"Written by\" \/>\n\t<meta name=\"twitter:data1\" content=\"Ross Wintle\" \/>\n\t<meta name=\"twitter:label2\" content=\"Estimated reading time\" \/>\n\t<meta name=\"twitter:data2\" content=\"2 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"https:\/\/rosswintle.uk\/2021\/02\/sustainable-web-design-book-thoughts\/\",\"url\":\"https:\/\/rosswintle.uk\/2021\/02\/sustainable-web-design-book-thoughts\/\",\"name\":\"Sustainable Web Design: Book thoughts - Ross Wintle\",\"isPartOf\":{\"@id\":\"https:\/\/rosswintle.uk\/#website\"},\"datePublished\":\"2021-02-25T15:54:17+00:00\",\"dateModified\":\"2021-02-25T16:16:20+00:00\",\"author\":{\"@id\":\"https:\/\/rosswintle.uk\/#\/schema\/person\/9f9bec147b2bfd762f09a2c2da7177dc\"},\"breadcrumb\":{\"@id\":\"https:\/\/rosswintle.uk\/2021\/02\/sustainable-web-design-book-thoughts\/#breadcrumb\"},\"inLanguage\":\"en-GB\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/rosswintle.uk\/2021\/02\/sustainable-web-design-book-thoughts\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/rosswintle.uk\/2021\/02\/sustainable-web-design-book-thoughts\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/rosswintle.uk\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"Sustainable Web Design: Book thoughts\"}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/rosswintle.uk\/#website\",\"url\":\"https:\/\/rosswintle.uk\/\",\"name\":\"Ross Wintle\",\"description\":\"Creativity, curiosity, and code\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/rosswintle.uk\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-GB\"},{\"@type\":\"Person\",\"@id\":\"https:\/\/rosswintle.uk\/#\/schema\/person\/9f9bec147b2bfd762f09a2c2da7177dc\",\"name\":\"Ross Wintle\",\"image\":{\"@type\":\"ImageObject\",\"inLanguage\":\"en-GB\",\"@id\":\"https:\/\/rosswintle.uk\/#\/schema\/person\/image\/\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/28519fc7c37998eea059b525da5fc7ce?s=96&d=identicon&r=g\",\"contentUrl\":\"https:\/\/secure.gravatar.com\/avatar\/28519fc7c37998eea059b525da5fc7ce?s=96&d=identicon&r=g\",\"caption\":\"Ross Wintle\"},\"url\":\"https:\/\/rosswintle.uk\/author\/rosswintle\/\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->",
            "yoast_head_json": {
                "title": "Sustainable Web Design: Book thoughts - Ross Wintle",
                "robots": {
                    "index": "index",
                    "follow": "follow",
                    "max-snippet": "max-snippet:-1",
                    "max-image-preview": "max-image-preview:large",
                    "max-video-preview": "max-video-preview:-1"
                },
                "canonical": "https:\/\/rosswintle.uk\/2021\/02\/sustainable-web-design-book-thoughts\/",
                "og_locale": "en_GB",
                "og_type": "article",
                "og_title": "Sustainable Web Design: Book thoughts - Ross Wintle",
                "og_description": "Some brief and random thoughts on the excellent book \"Sustainable Web Development\"",
                "og_url": "https:\/\/rosswintle.uk\/2021\/02\/sustainable-web-design-book-thoughts\/",
                "og_site_name": "Ross Wintle",
                "article_published_time": "2021-02-25T15:54:17+00:00",
                "article_modified_time": "2021-02-25T16:16:20+00:00",
                "og_image": [
                    {
                        "width": "600",
                        "height": "399",
                        "url": "https:\/\/rosswintle.uk\/wp-content\/uploads\/2012\/06\/DSC_0005-small.jpg",
                        "type": "image\/jpeg"
                    }
                ],
                "author": "Ross Wintle",
                "twitter_card": "summary_large_image",
                "twitter_creator": "@magicroundabout",
                "twitter_site": "@magicroundabout",
                "twitter_misc": {
                    "Written by": "Ross Wintle",
                    "Estimated reading time": "2 minutes"
                },
                "schema": {
                    "@context": "https:\/\/schema.org",
                    "@graph": [
                        {
                            "@type": "WebPage",
                            "@id": "https:\/\/rosswintle.uk\/2021\/02\/sustainable-web-design-book-thoughts\/",
                            "url": "https:\/\/rosswintle.uk\/2021\/02\/sustainable-web-design-book-thoughts\/",
                            "name": "Sustainable Web Design: Book thoughts - Ross Wintle",
                            "isPartOf": {
                                "@id": "https:\/\/rosswintle.uk\/#website"
                            },
                            "datePublished": "2021-02-25T15:54:17+00:00",
                            "dateModified": "2021-02-25T16:16:20+00:00",
                            "author": {
                                "@id": "https:\/\/rosswintle.uk\/#\/schema\/person\/9f9bec147b2bfd762f09a2c2da7177dc"
                            },
                            "breadcrumb": {
                                "@id": "https:\/\/rosswintle.uk\/2021\/02\/sustainable-web-design-book-thoughts\/#breadcrumb"
                            },
                            "inLanguage": "en-GB",
                            "potentialAction": [
                                {
                                    "@type": "ReadAction",
                                    "target": [
                                        "https:\/\/rosswintle.uk\/2021\/02\/sustainable-web-design-book-thoughts\/"
                                    ]
                                }
                            ]
                        },
                        {
                            "@type": "BreadcrumbList",
                            "@id": "https:\/\/rosswintle.uk\/2021\/02\/sustainable-web-design-book-thoughts\/#breadcrumb",
                            "itemListElement": [
                                {
                                    "@type": "ListItem",
                                    "position": 1,
                                    "name": "Home",
                                    "item": "https:\/\/rosswintle.uk\/"
                                },
                                {
                                    "@type": "ListItem",
                                    "position": 2,
                                    "name": "Sustainable Web Design: Book thoughts"
                                }
                            ]
                        },
                        {
                            "@type": "WebSite",
                            "@id": "https:\/\/rosswintle.uk\/#website",
                            "url": "https:\/\/rosswintle.uk\/",
                            "name": "Ross Wintle",
                            "description": "Creativity, curiosity, and code",
                            "potentialAction": [
                                {
                                    "@type": "SearchAction",
                                    "target": {
                                        "@type": "EntryPoint",
                                        "urlTemplate": "https:\/\/rosswintle.uk\/?s={search_term_string}"
                                    },
                                    "query-input": "required name=search_term_string"
                                }
                            ],
                            "inLanguage": "en-GB"
                        },
                        {
                            "@type": "Person",
                            "@id": "https:\/\/rosswintle.uk\/#\/schema\/person\/9f9bec147b2bfd762f09a2c2da7177dc",
                            "name": "Ross Wintle",
                            "image": {
                                "@type": "ImageObject",
                                "inLanguage": "en-GB",
                                "@id": "https:\/\/rosswintle.uk\/#\/schema\/person\/image\/",
                                "url": "https:\/\/secure.gravatar.com\/avatar\/28519fc7c37998eea059b525da5fc7ce?s=96&d=identicon&r=g",
                                "contentUrl": "https:\/\/secure.gravatar.com\/avatar\/28519fc7c37998eea059b525da5fc7ce?s=96&d=identicon&r=g",
                                "caption": "Ross Wintle"
                            },
                            "url": "https:\/\/rosswintle.uk\/author\/rosswintle\/"
                        }
                    ]
                }
            },
            "_links": {
                "self": [
                    {
                        "href": "https:\/\/rosswintle.uk\/wp-json\/wp\/v2\/posts\/9949"
                    }
                ],
                "collection": [
                    {
                        "href": "https:\/\/rosswintle.uk\/wp-json\/wp\/v2\/posts"
                    }
                ],
                "about": [
                    {
                        "href": "https:\/\/rosswintle.uk\/wp-json\/wp\/v2\/types\/post"
                    }
                ],
                "author": [
                    {
                        "embeddable": true,
                        "href": "https:\/\/rosswintle.uk\/wp-json\/wp\/v2\/users\/2"
                    }
                ],
                "replies": [
                    {
                        "embeddable": true,
                        "href": "https:\/\/rosswintle.uk\/wp-json\/wp\/v2\/comments?post=9949"
                    }
                ],
                "version-history": [
                    {
                        "count": 2,
                        "href": "https:\/\/rosswintle.uk\/wp-json\/wp\/v2\/posts\/9949\/revisions"
                    }
                ],
                "predecessor-version": [
                    {
                        "id": 9952,
                        "href": "https:\/\/rosswintle.uk\/wp-json\/wp\/v2\/posts\/9949\/revisions\/9952"
                    }
                ],
                "wp:attachment": [
                    {
                        "href": "https:\/\/rosswintle.uk\/wp-json\/wp\/v2\/media?parent=9949"
                    }
                ],
                "wp:term": [
                    {
                        "taxonomy": "category",
                        "embeddable": true,
                        "href": "https:\/\/rosswintle.uk\/wp-json\/wp\/v2\/categories?post=9949"
                    },
                    {
                        "taxonomy": "post_tag",
                        "embeddable": true,
                        "href": "https:\/\/rosswintle.uk\/wp-json\/wp\/v2\/tags?post=9949"
                    }
                ],
                "curies": [
                    {
                        "name": "wp",
                        "href": "https:\/\/api.w.org\/{rel}",
                        "templated": true
                    }
                ]
            }
        },
        "id": 9949,
        "dateGmt": "2021-02-25T15:54:17",
        "modifiedDateGmt": "2021-02-25T16:16:20",
        "slug": "sustainable-web-design-book-thoughts",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/rosswintle.uk\/2021\/02\/sustainable-web-design-book-thoughts\/",
        "title": "Sustainable Web Design: Book thoughts",
        "content": "\n<p>I&#8217;m reading <a href=\"https:\/\/twitter.com\/eatwholegrain\">Tom Greenwood<\/a>&#8216;s book <a href=\"https:\/\/abookapart.com\/products\/sustainable-web-design\">Sustainable Web Design<\/a> and, interestingly, my main takeaways aren&#8217;t technical web design\/development things. They are around:<\/p>\n\n\n\n<ul><li>Business\/strategy &#8211; how there may (or may not) be benefit in positioning yourself as a sustainable web designer\/developer.<\/li><li>UX &#8211; there are some nuggets around user journeys that I&#8217;d not considered before. Reducing page loads is good!<\/li><li>Spaceflight (!) &#8211; as an aviation geek and wannabe engineer I&#8217;m fascinated by space flight tech, and there&#8217;s some interesting stuff about the emissions from SpaceX&#8217;s Starlink satellite launches.<\/li><\/ul>\n\n\n\n<p>I&#8217;ve often wondered about carbon emissions of spaceflight and satellite deployment, but apparently a SpaceX Starlink launch is &#8220;roughly equivalent to 5 full passenger planes journeying from London to Sydney&#8221; and &#8220;a fraction of what it would take to build physical infrastructure&#8221;.<\/p>\n\n\n\n<p>This stat is from The Smithsonian via <a href=\"https:\/\/wholegraindigital.com\/curiously-green\/issue-2\/\">Wholegrain&#8217;s newsletter<\/a> and it looks like it&#8217;s actually ONLY the fuel burning cost, so includes none of the embodied energy in the vehicle (energy used to make the rocket and fuel).<\/p>\n\n\n\n<p>I have to wonder how much energy is needed to make liquid oxygen and create and move around these colossal metal structures.<\/p>\n\n\n\n<p>(Aside: I have so many questions about the use of super-cold liquid fuels in rockets!)<\/p>\n\n\n\n<p>The other thing from the book that terrified me is the thought that so much of the UK&#8217;s internet backbone is in Docklands and could be flooded. If we lost a good proportion of our internet backbone I dread to think what would happen. Supply chains would collapse. My work would disappear overnight. Etc, etc. I&#8217;m sure there are backups and backups of backups for critical stuff like this but even so. Plus, the flooding map of London&#8230; ARGH!<\/p>\n\n\n\n<p>I close with this quote from the book&#8217;s conclusion:<\/p>\n\n\n\n<p>&#8220;There is no downside to a sustainable web, and creating it isn\u2019t fundamentally difficult. In fact, it\u2019s one of the most tangible and achievable steps in the zero-carbon revolution we\u2019re embarking on.&#8221;<\/p>\n",
        "excerpt": "<p>Some brief and random thoughts on the excellent book &#8220;Sustainable Web  Development&#8221;<\/p>\n",
        "parentId": 0,
        "authorId": 2,
        "featuredMediaId": 0
    },
    {
        "dataAsArray": {
            "id": 9889,
            "date": "2021-02-05T19:02:16",
            "date_gmt": "2021-02-05T19:02:16",
            "guid": {
                "rendered": "https:\/\/rosswintle.uk\/?p=9889"
            },
            "modified": "2021-02-05T19:02:18",
            "modified_gmt": "2021-02-05T19:02:18",
            "slug": "simple-free-domain-redirection-with-netlify",
            "status": "publish",
            "type": "post",
            "link": "https:\/\/rosswintle.uk\/2021\/02\/simple-free-domain-redirection-with-netlify\/",
            "title": {
                "rendered": "Simple free domain redirection with Netlify"
            },
            "content": {
                "rendered": "\n<p><em>Note: I&#8217;m jotting this down quickly while I remember &#8211; I may expand it with example code in future.<\/em><\/p>\n\n\n\n<p>It&#8217;s always frustrated me that to redirect one domain to another domain can be tricky and costly.<\/p>\n\n\n\n<p>Yes, some domain\/DNS providers let you do this, but not all.<\/p>\n\n\n\n<p>And yes, you might be able to add the source domain to the hosting for the target domain. <\/p>\n\n\n\n<p>But if, for some reason, you can&#8217;t do either of those things. You kinda have to pay for a small hosting account just to do the redirects. <\/p>\n\n\n\n<p>However, today I went looking into whether you can do this for free with GitHub Pages or Netlify or something, and <a href=\"https:\/\/netlify.com\/\">Netlify<\/a> has come up trumps!<\/p>\n\n\n\n<p>It turns out you can add a <code>_redirects<\/code> file to your Netlify site. This file lets you do reasonably sophisticated redirecting with wildcards and placeholders and status code control. Neat! Map your domain, and you get HTTPS for free too.<\/p>\n\n\n\n<p>You can add a site to Netlify by dragging and dropping files into the &#8220;Dropzone&#8221; or, if you&#8217;re happy using Git, you can deploy from a Git repository.<\/p>\n\n\n\n<figure class=\"wp-block-image size-large is-resized\"><img loading=\"lazy\" decoding=\"async\" src=\"https:\/\/rosswintle.uk\/wp-content\/uploads\/2021\/02\/CleanShot-2021-02-05-at-18.37.53-1024x694.png\" alt=\"Screengrab showing Netlify's &quot;Dropzone&quot; for creating new sites\" class=\"wp-image-9891\" width=\"768\" height=\"521\" srcset=\"https:\/\/rosswintle.uk\/wp-content\/uploads\/2021\/02\/CleanShot-2021-02-05-at-18.37.53-1024x694.png 1024w, https:\/\/rosswintle.uk\/wp-content\/uploads\/2021\/02\/CleanShot-2021-02-05-at-18.37.53-300x203.png 300w, https:\/\/rosswintle.uk\/wp-content\/uploads\/2021\/02\/CleanShot-2021-02-05-at-18.37.53-768x520.png 768w, https:\/\/rosswintle.uk\/wp-content\/uploads\/2021\/02\/CleanShot-2021-02-05-at-18.37.53.png 1258w\" sizes=\"(max-width: 768px) 100vw, 768px\" \/><\/figure>\n\n\n\n<h2 class=\"wp-block-heading\">Documentation<\/h2>\n\n\n\n<p>Netlify&#8217;s documentation explains the details of how this works and the redirects file format.<\/p>\n\n\n\n<ul><li><a href=\"https:\/\/docs.netlify.com\/routing\/redirects\/\">Details of the redirection feature<\/a><\/li><li><a href=\"https:\/\/docs.netlify.com\/routing\/redirects\/redirect-options\/\">_redirects file format<\/a><\/li><\/ul>\n\n\n\n<p>The one gotcha I found is that you do actually have to deploy a file other than <code>_redirects<\/code> into your Netlify site. Otherwise the deployment gets stuck. But don&#8217;t create an index.html as this will be served as a default for the domain breaking any fallback redirect. So I suggest creating a <code>404.html<\/code> or something.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Process<\/h2>\n\n\n\n<ul><li>Create a folder on your computer with a <code>404.html<\/code> (this can contain whatever you need) and a <code>_redirects<\/code> file.<\/li><li>Edit the redirects file to add the rules you need<\/li><li>Log in to Netlify &#8211; create an account if you don&#8217;t have one<\/li><li>Click &#8220;Sites&#8221; in the Netlify menu and scroll down (if you need to) to the Dropzone (as seen in the image above)<\/li><li>Drag and drop the folder from your cpmputer into the drop zone to create the site (you can drag and drop the folder to update the site&#8217;s files too)<\/li><li>In the Netlify site settings, map your domain (for the source URLs) and then go to your DNS provider and update your DNS according to the instructions provided by Netlify.<\/li><li>LetsEncrypt HTTPS certificates will be provided automatically by Netlify when DNS has propagated.<\/li><\/ul>\n\n\n\n<h2 class=\"wp-block-heading\">Using Git<\/h2>\n\n\n\n<p>You can deploy from a Git repository too. If you&#8217;re happy with doing this then I&#8217;m doing to assume you&#8217;re tech-savvy enough to figure this out for yourself. Sorry if that&#8217;s an incorrect assumption.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Other uses&#8230;?<\/h2>\n\n\n\n<p>Now I&#8217;m even thinking this could be a very simple way to run a free custom URL shortener. Hmm&#8230;<\/p>\n",
                "protected": false
            },
            "excerpt": {
                "rendered": "<p>How to host domain redirects for free with Netlify.<\/p>\n",
                "protected": false
            },
            "author": 2,
            "featured_media": 0,
            "comment_status": "open",
            "ping_status": "closed",
            "sticky": false,
            "template": "",
            "format": "standard",
            "meta": {
                "sig_custom_text": "",
                "sig_image_type": "featured-image",
                "sig_custom_image": 0,
                "sig_is_disabled": false,
                "url": "",
                "footnotes": ""
            },
            "categories": [
                23
            ],
            "tags": [
                98,
                4779,
                712
            ],
            "yoast_head": "<!-- This site is optimized with the Yoast SEO plugin v21.7 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>Simple free domain redirection with Netlify - Ross Wintle<\/title>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/rosswintle.uk\/2021\/02\/simple-free-domain-redirection-with-netlify\/\" \/>\n<meta property=\"og:locale\" content=\"en_GB\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"Simple free domain redirection with Netlify - Ross Wintle\" \/>\n<meta property=\"og:description\" content=\"How to host domain redirects for free with Netlify.\" \/>\n<meta property=\"og:url\" content=\"https:\/\/rosswintle.uk\/2021\/02\/simple-free-domain-redirection-with-netlify\/\" \/>\n<meta property=\"og:site_name\" content=\"Ross Wintle\" \/>\n<meta property=\"article:published_time\" content=\"2021-02-05T19:02:16+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2021-02-05T19:02:18+00:00\" \/>\n<meta property=\"og:image\" content=\"https:\/\/rosswintle.uk\/wp-content\/uploads\/2021\/02\/CleanShot-2021-02-05-at-18.37.53-1024x694.png\" \/>\n<meta name=\"author\" content=\"Ross Wintle\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:creator\" content=\"@magicroundabout\" \/>\n<meta name=\"twitter:site\" content=\"@magicroundabout\" \/>\n<meta name=\"twitter:label1\" content=\"Written by\" \/>\n\t<meta name=\"twitter:data1\" content=\"Ross Wintle\" \/>\n\t<meta name=\"twitter:label2\" content=\"Estimated reading time\" \/>\n\t<meta name=\"twitter:data2\" content=\"3 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"https:\/\/rosswintle.uk\/2021\/02\/simple-free-domain-redirection-with-netlify\/\",\"url\":\"https:\/\/rosswintle.uk\/2021\/02\/simple-free-domain-redirection-with-netlify\/\",\"name\":\"Simple free domain redirection with Netlify - Ross Wintle\",\"isPartOf\":{\"@id\":\"https:\/\/rosswintle.uk\/#website\"},\"datePublished\":\"2021-02-05T19:02:16+00:00\",\"dateModified\":\"2021-02-05T19:02:18+00:00\",\"author\":{\"@id\":\"https:\/\/rosswintle.uk\/#\/schema\/person\/9f9bec147b2bfd762f09a2c2da7177dc\"},\"breadcrumb\":{\"@id\":\"https:\/\/rosswintle.uk\/2021\/02\/simple-free-domain-redirection-with-netlify\/#breadcrumb\"},\"inLanguage\":\"en-GB\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/rosswintle.uk\/2021\/02\/simple-free-domain-redirection-with-netlify\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/rosswintle.uk\/2021\/02\/simple-free-domain-redirection-with-netlify\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/rosswintle.uk\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"Simple free domain redirection with Netlify\"}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/rosswintle.uk\/#website\",\"url\":\"https:\/\/rosswintle.uk\/\",\"name\":\"Ross Wintle\",\"description\":\"Creativity, curiosity, and code\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/rosswintle.uk\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-GB\"},{\"@type\":\"Person\",\"@id\":\"https:\/\/rosswintle.uk\/#\/schema\/person\/9f9bec147b2bfd762f09a2c2da7177dc\",\"name\":\"Ross Wintle\",\"image\":{\"@type\":\"ImageObject\",\"inLanguage\":\"en-GB\",\"@id\":\"https:\/\/rosswintle.uk\/#\/schema\/person\/image\/\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/28519fc7c37998eea059b525da5fc7ce?s=96&d=identicon&r=g\",\"contentUrl\":\"https:\/\/secure.gravatar.com\/avatar\/28519fc7c37998eea059b525da5fc7ce?s=96&d=identicon&r=g\",\"caption\":\"Ross Wintle\"},\"url\":\"https:\/\/rosswintle.uk\/author\/rosswintle\/\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->",
            "yoast_head_json": {
                "title": "Simple free domain redirection with Netlify - Ross Wintle",
                "robots": {
                    "index": "index",
                    "follow": "follow",
                    "max-snippet": "max-snippet:-1",
                    "max-image-preview": "max-image-preview:large",
                    "max-video-preview": "max-video-preview:-1"
                },
                "canonical": "https:\/\/rosswintle.uk\/2021\/02\/simple-free-domain-redirection-with-netlify\/",
                "og_locale": "en_GB",
                "og_type": "article",
                "og_title": "Simple free domain redirection with Netlify - Ross Wintle",
                "og_description": "How to host domain redirects for free with Netlify.",
                "og_url": "https:\/\/rosswintle.uk\/2021\/02\/simple-free-domain-redirection-with-netlify\/",
                "og_site_name": "Ross Wintle",
                "article_published_time": "2021-02-05T19:02:16+00:00",
                "article_modified_time": "2021-02-05T19:02:18+00:00",
                "og_image": [
                    {
                        "url": "https:\/\/rosswintle.uk\/wp-content\/uploads\/2021\/02\/CleanShot-2021-02-05-at-18.37.53-1024x694.png"
                    }
                ],
                "author": "Ross Wintle",
                "twitter_card": "summary_large_image",
                "twitter_creator": "@magicroundabout",
                "twitter_site": "@magicroundabout",
                "twitter_misc": {
                    "Written by": "Ross Wintle",
                    "Estimated reading time": "3 minutes"
                },
                "schema": {
                    "@context": "https:\/\/schema.org",
                    "@graph": [
                        {
                            "@type": "WebPage",
                            "@id": "https:\/\/rosswintle.uk\/2021\/02\/simple-free-domain-redirection-with-netlify\/",
                            "url": "https:\/\/rosswintle.uk\/2021\/02\/simple-free-domain-redirection-with-netlify\/",
                            "name": "Simple free domain redirection with Netlify - Ross Wintle",
                            "isPartOf": {
                                "@id": "https:\/\/rosswintle.uk\/#website"
                            },
                            "datePublished": "2021-02-05T19:02:16+00:00",
                            "dateModified": "2021-02-05T19:02:18+00:00",
                            "author": {
                                "@id": "https:\/\/rosswintle.uk\/#\/schema\/person\/9f9bec147b2bfd762f09a2c2da7177dc"
                            },
                            "breadcrumb": {
                                "@id": "https:\/\/rosswintle.uk\/2021\/02\/simple-free-domain-redirection-with-netlify\/#breadcrumb"
                            },
                            "inLanguage": "en-GB",
                            "potentialAction": [
                                {
                                    "@type": "ReadAction",
                                    "target": [
                                        "https:\/\/rosswintle.uk\/2021\/02\/simple-free-domain-redirection-with-netlify\/"
                                    ]
                                }
                            ]
                        },
                        {
                            "@type": "BreadcrumbList",
                            "@id": "https:\/\/rosswintle.uk\/2021\/02\/simple-free-domain-redirection-with-netlify\/#breadcrumb",
                            "itemListElement": [
                                {
                                    "@type": "ListItem",
                                    "position": 1,
                                    "name": "Home",
                                    "item": "https:\/\/rosswintle.uk\/"
                                },
                                {
                                    "@type": "ListItem",
                                    "position": 2,
                                    "name": "Simple free domain redirection with Netlify"
                                }
                            ]
                        },
                        {
                            "@type": "WebSite",
                            "@id": "https:\/\/rosswintle.uk\/#website",
                            "url": "https:\/\/rosswintle.uk\/",
                            "name": "Ross Wintle",
                            "description": "Creativity, curiosity, and code",
                            "potentialAction": [
                                {
                                    "@type": "SearchAction",
                                    "target": {
                                        "@type": "EntryPoint",
                                        "urlTemplate": "https:\/\/rosswintle.uk\/?s={search_term_string}"
                                    },
                                    "query-input": "required name=search_term_string"
                                }
                            ],
                            "inLanguage": "en-GB"
                        },
                        {
                            "@type": "Person",
                            "@id": "https:\/\/rosswintle.uk\/#\/schema\/person\/9f9bec147b2bfd762f09a2c2da7177dc",
                            "name": "Ross Wintle",
                            "image": {
                                "@type": "ImageObject",
                                "inLanguage": "en-GB",
                                "@id": "https:\/\/rosswintle.uk\/#\/schema\/person\/image\/",
                                "url": "https:\/\/secure.gravatar.com\/avatar\/28519fc7c37998eea059b525da5fc7ce?s=96&d=identicon&r=g",
                                "contentUrl": "https:\/\/secure.gravatar.com\/avatar\/28519fc7c37998eea059b525da5fc7ce?s=96&d=identicon&r=g",
                                "caption": "Ross Wintle"
                            },
                            "url": "https:\/\/rosswintle.uk\/author\/rosswintle\/"
                        }
                    ]
                }
            },
            "_links": {
                "self": [
                    {
                        "href": "https:\/\/rosswintle.uk\/wp-json\/wp\/v2\/posts\/9889"
                    }
                ],
                "collection": [
                    {
                        "href": "https:\/\/rosswintle.uk\/wp-json\/wp\/v2\/posts"
                    }
                ],
                "about": [
                    {
                        "href": "https:\/\/rosswintle.uk\/wp-json\/wp\/v2\/types\/post"
                    }
                ],
                "author": [
                    {
                        "embeddable": true,
                        "href": "https:\/\/rosswintle.uk\/wp-json\/wp\/v2\/users\/2"
                    }
                ],
                "replies": [
                    {
                        "embeddable": true,
                        "href": "https:\/\/rosswintle.uk\/wp-json\/wp\/v2\/comments?post=9889"
                    }
                ],
                "version-history": [
                    {
                        "count": 3,
                        "href": "https:\/\/rosswintle.uk\/wp-json\/wp\/v2\/posts\/9889\/revisions"
                    }
                ],
                "predecessor-version": [
                    {
                        "id": 9893,
                        "href": "https:\/\/rosswintle.uk\/wp-json\/wp\/v2\/posts\/9889\/revisions\/9893"
                    }
                ],
                "wp:attachment": [
                    {
                        "href": "https:\/\/rosswintle.uk\/wp-json\/wp\/v2\/media?parent=9889"
                    }
                ],
                "wp:term": [
                    {
                        "taxonomy": "category",
                        "embeddable": true,
                        "href": "https:\/\/rosswintle.uk\/wp-json\/wp\/v2\/categories?post=9889"
                    },
                    {
                        "taxonomy": "post_tag",
                        "embeddable": true,
                        "href": "https:\/\/rosswintle.uk\/wp-json\/wp\/v2\/tags?post=9889"
                    }
                ],
                "curies": [
                    {
                        "name": "wp",
                        "href": "https:\/\/api.w.org\/{rel}",
                        "templated": true
                    }
                ]
            }
        },
        "id": 9889,
        "dateGmt": "2021-02-05T19:02:16",
        "modifiedDateGmt": "2021-02-05T19:02:18",
        "slug": "simple-free-domain-redirection-with-netlify",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/rosswintle.uk\/2021\/02\/simple-free-domain-redirection-with-netlify\/",
        "title": "Simple free domain redirection with Netlify",
        "content": "\n<p><em>Note: I&#8217;m jotting this down quickly while I remember &#8211; I may expand it with example code in future.<\/em><\/p>\n\n\n\n<p>It&#8217;s always frustrated me that to redirect one domain to another domain can be tricky and costly.<\/p>\n\n\n\n<p>Yes, some domain\/DNS providers let you do this, but not all.<\/p>\n\n\n\n<p>And yes, you might be able to add the source domain to the hosting for the target domain. <\/p>\n\n\n\n<p>But if, for some reason, you can&#8217;t do either of those things. You kinda have to pay for a small hosting account just to do the redirects. <\/p>\n\n\n\n<p>However, today I went looking into whether you can do this for free with GitHub Pages or Netlify or something, and <a href=\"https:\/\/netlify.com\/\">Netlify<\/a> has come up trumps!<\/p>\n\n\n\n<p>It turns out you can add a <code>_redirects<\/code> file to your Netlify site. This file lets you do reasonably sophisticated redirecting with wildcards and placeholders and status code control. Neat! Map your domain, and you get HTTPS for free too.<\/p>\n\n\n\n<p>You can add a site to Netlify by dragging and dropping files into the &#8220;Dropzone&#8221; or, if you&#8217;re happy using Git, you can deploy from a Git repository.<\/p>\n\n\n\n<figure class=\"wp-block-image size-large is-resized\"><img loading=\"lazy\" decoding=\"async\" src=\"https:\/\/rosswintle.uk\/wp-content\/uploads\/2021\/02\/CleanShot-2021-02-05-at-18.37.53-1024x694.png\" alt=\"Screengrab showing Netlify's &quot;Dropzone&quot; for creating new sites\" class=\"wp-image-9891\" width=\"768\" height=\"521\" srcset=\"https:\/\/rosswintle.uk\/wp-content\/uploads\/2021\/02\/CleanShot-2021-02-05-at-18.37.53-1024x694.png 1024w, https:\/\/rosswintle.uk\/wp-content\/uploads\/2021\/02\/CleanShot-2021-02-05-at-18.37.53-300x203.png 300w, https:\/\/rosswintle.uk\/wp-content\/uploads\/2021\/02\/CleanShot-2021-02-05-at-18.37.53-768x520.png 768w, https:\/\/rosswintle.uk\/wp-content\/uploads\/2021\/02\/CleanShot-2021-02-05-at-18.37.53.png 1258w\" sizes=\"(max-width: 768px) 100vw, 768px\" \/><\/figure>\n\n\n\n<h2 class=\"wp-block-heading\">Documentation<\/h2>\n\n\n\n<p>Netlify&#8217;s documentation explains the details of how this works and the redirects file format.<\/p>\n\n\n\n<ul><li><a href=\"https:\/\/docs.netlify.com\/routing\/redirects\/\">Details of the redirection feature<\/a><\/li><li><a href=\"https:\/\/docs.netlify.com\/routing\/redirects\/redirect-options\/\">_redirects file format<\/a><\/li><\/ul>\n\n\n\n<p>The one gotcha I found is that you do actually have to deploy a file other than <code>_redirects<\/code> into your Netlify site. Otherwise the deployment gets stuck. But don&#8217;t create an index.html as this will be served as a default for the domain breaking any fallback redirect. So I suggest creating a <code>404.html<\/code> or something.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Process<\/h2>\n\n\n\n<ul><li>Create a folder on your computer with a <code>404.html<\/code> (this can contain whatever you need) and a <code>_redirects<\/code> file.<\/li><li>Edit the redirects file to add the rules you need<\/li><li>Log in to Netlify &#8211; create an account if you don&#8217;t have one<\/li><li>Click &#8220;Sites&#8221; in the Netlify menu and scroll down (if you need to) to the Dropzone (as seen in the image above)<\/li><li>Drag and drop the folder from your cpmputer into the drop zone to create the site (you can drag and drop the folder to update the site&#8217;s files too)<\/li><li>In the Netlify site settings, map your domain (for the source URLs) and then go to your DNS provider and update your DNS according to the instructions provided by Netlify.<\/li><li>LetsEncrypt HTTPS certificates will be provided automatically by Netlify when DNS has propagated.<\/li><\/ul>\n\n\n\n<h2 class=\"wp-block-heading\">Using Git<\/h2>\n\n\n\n<p>You can deploy from a Git repository too. If you&#8217;re happy with doing this then I&#8217;m doing to assume you&#8217;re tech-savvy enough to figure this out for yourself. Sorry if that&#8217;s an incorrect assumption.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Other uses&#8230;?<\/h2>\n\n\n\n<p>Now I&#8217;m even thinking this could be a very simple way to run a free custom URL shortener. Hmm&#8230;<\/p>\n",
        "excerpt": "<p>How to host domain redirects for free with Netlify.<\/p>\n",
        "parentId": 0,
        "authorId": 2,
        "featuredMediaId": 0
    },
    {
        "dataAsArray": {
            "id": 9786,
            "date": "2021-01-01T15:31:43",
            "date_gmt": "2021-01-01T15:31:43",
            "guid": {
                "rendered": "https:\/\/rosswintle.uk\/?p=9786"
            },
            "modified": "2021-01-01T15:32:56",
            "modified_gmt": "2021-01-01T15:32:56",
            "slug": "building-wp-ui",
            "status": "publish",
            "type": "post",
            "link": "https:\/\/rosswintle.uk\/2021\/01\/building-wp-ui\/",
            "title": {
                "rendered": "Building WP-UI"
            },
            "content": {
                "rendered": "\n<p>I was listening to the <a href=\"https:\/\/noplanstomerge.com\/63\">No Plans To Merge guys today discussing the rebuild of Laravel Livewire<\/a>.<\/p>\n\n\n\n<p>There was a segment where they were talking about the difference between building an application and building a framework and how you start to build things one way that\u2019s a bit hacky to get things going and then completely rework things later on to make it more modular.<\/p>\n\n\n\n<p>And I realised that this is KINDA what I\u2019m doing with building <a href=\"https:\/\/twitter.com\/wpui_app\">WP-UI<\/a>. And so I thought it was time to get some rambling thoughts down on paper about WP-UI.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\" id=\"What is WP-UI?\">What is WP-UI?<\/h2>\n\n\n\n<p><a href=\"https:\/\/twitter.com\/wpui_app\">WP-UI<\/a> is a desktop app I\u2019m building in <a href=\"https:\/\/www.electronjs.org\/\">Electron<\/a> that makes working with WordPress quick and easy.<\/p>\n\n\n\n<p>It\u2019s quite hard to explain, but:<\/p>\n\n\n\n<ul><li>If you know what <a href=\"https:\/\/wp-cli.org\/\">WP-CLI<\/a> is, then the aim is for it to be a GUI version of that.<\/li><li>If you know what <a href=\"https:\/\/www.phpmyadmin.net\/\">PHPMyAdmin<\/a> or <a href=\"https:\/\/www.adminer.org\/\">Adminer<\/a> or <a href=\"https:\/\/sequelpro.com\/\">Sequel Pro<\/a> or <a href=\"https:\/\/sequel-ace.com\/\">Sequel Ace<\/a> or <a href=\"https:\/\/www.araelium.com\/querious\">Querious<\/a> or <a href=\"https:\/\/www.tableplus.io\/\">Table Plus<\/a> are then it\u2019s like a WordPress-aware version of that that requires no SQL knowledge.<\/li><\/ul>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-large is-resized\"><img loading=\"lazy\" decoding=\"async\" src=\"https:\/\/rosswintle.uk\/wp-content\/uploads\/2021\/01\/WP-UI-screen-1024x649.jpg\" alt=\"Screen grab of WP-UI\" class=\"wp-image-9787\" width=\"768\" height=\"487\" srcset=\"https:\/\/rosswintle.uk\/wp-content\/uploads\/2021\/01\/WP-UI-screen-1024x649.jpg 1024w, https:\/\/rosswintle.uk\/wp-content\/uploads\/2021\/01\/WP-UI-screen-300x190.jpg 300w, https:\/\/rosswintle.uk\/wp-content\/uploads\/2021\/01\/WP-UI-screen-768x487.jpg 768w, https:\/\/rosswintle.uk\/wp-content\/uploads\/2021\/01\/WP-UI-screen.jpg 1365w\" sizes=\"(max-width: 768px) 100vw, 768px\" \/><figcaption>Screengrab of WP-UI showing a post list<\/figcaption><\/figure><\/div>\n\n\n\n<p>WP-UI lets you inspect WordPress data quickly and easily. And ultimately I\u2019d like you to be able to modify data through it and take actions like managing plugins and themes, deleting transients, running cron jobs &#8211; lots of the things WP-CLI lets you do.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\" id=\"Why I\u2019m building it\">Why I\u2019m building it<\/h2>\n\n\n\n<p>Kinda because I wanted it.<\/p>\n\n\n\n<p>I\u2019d seen a product called \u201c<a href=\"https:\/\/invoker.dev\/\">Invoker<\/a>\u201d that does a similar thing for Laravel applications, and thought \u201cI\u2019d love this for WordPress\u201d. And I had <a href=\"https:\/\/desktopappswithelectron.com\/\">a video course on building Electron apps<\/a>. So I put the two together and started building to see what was possible.<\/p>\n\n\n\n<p>My initial aim was to:<\/p>\n\n\n\n<ul><li>See if my initial ideas were possible<\/li><li>Learn some more <a href=\"https:\/\/www.electronjs.org\/\">Electron<\/a> and <a href=\"https:\/\/vuejs.org\/\">Vue.js<\/a> and <a href=\"https:\/\/tailwindcss.com\/\">Tailwind CSS<\/a>.<\/li><\/ul>\n\n\n\n<p>But I got in quite deep beyond an initial prototype!<\/p>\n\n\n\n<h2 class=\"wp-block-heading\" id=\"How I\u2019m building WP-UI\">How I\u2019m building WP-UI<\/h2>\n\n\n\n<p>I\u2019m using <a href=\"https:\/\/www.electronjs.org\/\">Electron<\/a> and <a href=\"https:\/\/vuejs.org\/\">VueJS.<\/a> I currently use <a href=\"https:\/\/router.vuejs.org\/\">vue-router<\/a>, but not <a href=\"https:\/\/vuex.vuejs.org\/\">vuex<\/a>. I\u2019m kinda putting off adding vuex into the mix because it seems to come with warnings of \u201cyou probably don\u2019t need this\u201d, yet I think it\u2019s inevitable for what I\u2019m doing here.<\/p>\n\n\n\n<p>I\u2019m styling with <a href=\"https:\/\/tailwindcss.com\/\">TailwindCSS<\/a> and <a href=\"https:\/\/tailwindui.com\/\">TailwindUI<\/a>.<\/p>\n\n\n\n<p>In terms of the abstractions I currently have that power the thing, I have a bunch of Vue components for things like table headers, rows and data items. These help componentise the markup, which is essential for using Tailwind without going crazy.<\/p>\n\n\n\n<p>I also have a fairly good abstraction for running PHP\/WordPress. Electron has a node back-end that lets me call command line commands. So I\u2019m running a PHP command line instance and passing it some PHP code to run, then catching the output of the command.<\/p>\n\n\n\n<p>The abstraction automatically uses the PHP binary set in the applications options, and loads <code class=\"code-inline\">wp-load.php<\/code> (I should do this more intelligently &#8211; it assumes it\u2019s in the root of your project for now).<\/p>\n\n\n\n<p>This PHP code has to echo something out that we can get back into JavaScript for display. You usually end with something like:<\/p>\n\n\n\n<p><code class=\"code-inline\">echo json_encode( [ ... some stuff you need \u2026 ] );<\/code><\/p>\n\n\n\n<p>Then, back in JavaScript\/Vue land you JSON.parse the output back into a usable object.<\/p>\n\n\n\n<p>This all works nicely and doesn\u2019t require any plugins or anything to be installed into WordPress. Writing PHP code inside a JavaScript string is pretty weird but I\u2019m not doing anything hugely complex. I\u2019m sure there\u2019s a better way though.<\/p>\n\n\n\n<p>I should add that I\u2019m trying, where possible, to use WordPress APIs rather than going straight to writing SQL queries, though in some cases SQL is needed.<\/p>\n\n\n\n<p>As an extra abstraction, the application uses lots of \u201cpost lists\u201d. So I\u2019ve build a post list API that runs instances of <code>WP_Query<\/code> for you and populates a table. You pass it query options and it creates the table for you. It adds pagination, search, and (I hope, eventually) sorting in for you.<\/p>\n\n\n\n<p>Posts are kinda special and used a lot though, and I\u2019m considering what other abstractions would be helpful. This is where the \u201cam I building a framework?\u201d thing comes in. More on this later.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\" id=\"Security\">Security<\/h2>\n\n\n\n<p>I need to jot things down about security while I think of them.<\/p>\n\n\n\n<p>I\u2019ve honestly not thought through security properly yet. But I guess it works on the principle that if you can use WP-UI on a WordPress install you\u2019ve got shell access anyways so all bets are off.<\/p>\n\n\n\n<p>But I am thinking through things like: can someone store something in the WordPress database that when I pull it out could do weird stuff on your local machine?<\/p>\n\n\n\n<p>Definitely needs more thought though.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\" id=\"What is your plan for it?\">What is your plan for it?<\/h2>\n\n\n\n<p>I\u2019m not entirely sure.<\/p>\n\n\n\n<p>I\u2019d like it to be a paid product of some sort, but there are a LOT of steps to get to that point (licensing, allowing trials, payments and eCommerce, support processes, documentation, legal stuff, tax stuff like VAT, marketing, to name but a few).<\/p>\n\n\n\n<p>Several people have asked if I will open source it? But I\u2019ve put a fair bit of time into this now and I consider it an \u201casset\u201d that I think has value and would like to make some money from if I can. And I hope it\u2019s a tool that will have value for others.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\" id=\"Will this need to be GPL licensed?\">Will this need to be GPL licensed?<\/h2>\n\n\n\n<p>So, there\u2019s this thing about tools that integrate with WordPress needing to be GPL licensed. I think this is possible without making the source code public. And if I\u2019m to keep it as a paid product then this is what I will want to do.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\" id=\"Thoughts about extending WP-UI\">Thoughts about extending WP-UI<\/h2>\n\n\n\n<p>This is where Caleb and Daniel\u2019s discussion application code vs framework code and the iterations of framework code got me thinking.<\/p>\n\n\n\n<p>Part of their conversation was about how, eventually, if you\u2019re writing a framework, it\u2019s good to be super-modular. They talk about how good frameworks seem to end up with \u201cloader\u201d files that contain a bunch of lines that just import functionality from discrete packages.<\/p>\n\n\n\n<p>I would LOVE for WP-UI to be like this and, subsequently, extendable by others in this sort of way. This is how WP-CLI works. And I think Invoker will eventually have extensions that work like this too.<\/p>\n\n\n\n<p>And this is a REALLY interesting space. I\u2019m kinda chuffed that my brain has gone down the route of thinking like this. I feel like it\u2019s a pretty advanced thing to be thinking of this in abstract enough terms.<\/p>\n\n\n\n<p>RIGHT NOW I\u2019m in a place where I\u2019m almost daily, when working on WP-UI, having to decide if I make a layer abstract or not. Whether to do something quickly so that I can deliver WP-UI into the hands of people, or whether to spend time on refactor to make things more abstract and extendable.<\/p>\n\n\n\n<p>At the moment, I have a couple of good abstractions as mentioned above:<\/p>\n\n\n\n<ul><li>One for running PHP (though this could be better) &#8211; a JavaScript class\/object that I can pass some PHP code to and have that code executed in the context of the currently-configured WordPress project.<\/li><li>One for lists of WordPress posts (you basically pass it a set of WP_Query options and it builds the data table)<\/li><\/ul>\n\n\n\n<p>I think Post Lists will always be \u201cspecial\u201d because they\u2019re quite complex. But I feel like the other tables probably need to be abstracted.<\/p>\n\n\n\n<p>I can see a world where an extension:<\/p>\n\n\n\n<ul><li>Defines a new \u201cPage\u201d in the app<\/li><li>Gives some PHP code to run that produces output matching a specific format<\/li><li>Specifies how that data output is converted into tables (by specifying column types, which columns are searchable and sortable, for example)<\/li><li>Specifies how rows in the data table map to other, \u201csingle-entry\u201d screens.<\/li><li>Somehow specifies \u201cactions\u201d for rows in the data table that can run PHP code to make stuff happen &#8211; this probably needs variables\/placeholders to be made available somehow.<\/li><\/ul>\n\n\n\n<p>These \u201cdo I abstract?\u201d questions are huge at this point, because I\u2019m accumulating technical debt. I\u2019m deciding to add work to the pile for myself if I want to make the abstraction later on.<\/p>\n\n\n\n<p>I\u2019m tending towards thinking that I need to get a version 1 out that\u2019s less frameworky and extendable. I want people to be able to use this thing! So that\u2019s v1.<\/p>\n\n\n\n<p>Then v2 will be a big refactor that makes it more frameworky. Build the internal APIs, define the data formats, then refactor all my internal pages to use those APIs.<\/p>\n\n\n\n<p>So my main App file should become a loader file that contains a bunch of lines that import the pages of the app from discrete packages! Win!!<\/p>\n\n\n\n<p>Does this mean I\u2019m building a framework? This isn\u2019t what I set out to do!! But maybe I AM! Eeeek!<\/p>\n\n\n\n<p>However, something like this would allow you to do stuff like extend WP-UI to allow it to act as a desktop app for managing WooCommerce orders.<\/p>\n\n\n\n<p>Bonkers! (In a good way)<\/p>\n\n\n\n<h2 class=\"wp-block-heading\" id=\"A brief aside on datatables and UI libraries\">A brief aside on datatables and UI libraries<\/h2>\n\n\n\n<p>While writing this I looked into some datatable libraries like <a href=\"https:\/\/datatables.net\/\">https:\/\/datatables.net\/<\/a> and I came across the <a href=\"https:\/\/vuetifyjs.com\/en\/\">Vuetify<\/a> design framework too.<\/p>\n\n\n\n<p>It got me wondering if it would be possible and beneficial to use something like this rather than crafting everything myself with Tailwind UI.<\/p>\n\n\n\n<p>For the initial phase of this project it\u2019s been SUPER helpful for me to build things by myself with just Tailwind UI taking care of the layout and some styling. I\u2019ve learned a LOT of Vue along the way and really feel like a JavaScript application programmer (which I never thought I would say).<\/p>\n\n\n\n<p>But maybe I\u2019ll eject out into a UI framework like this in future. It certainly seems like I\u2019ve re-invented the wheel a bit! In some cases this may be necessary, but in many I suspect it\u2019s not.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\" id=\"What else would you like it to do?\">What else would you like it to do?<\/h2>\n\n\n\n<p>I have a roadmap with a bunch of minor tweaks, and some bigger ideas. Eventually I\u2019d like:<\/p>\n\n\n\n<ul><li>To allow editing as well as just viewing of data<\/li><li>To handle serialised data nicely somehow<\/li><li>To be able to use with remote (live?!) sites over SSH<\/li><li>To allow actions to be taken, such as updating plugins, or expiring transients<\/li><li>There was also a cool idea that someone suggested where the application could show you the code that it runs. This would allow you to visually build a query or action in WP-UI by selecting the page, filters, pagination options, sorting, etc and then get the WP_Query or other PHP code to paste back into your theme\/plugin\/whatever.<\/li><\/ul>\n\n\n\n<p>So\u2026lots of ideas. But\u2026<\/p>\n\n\n\n<h2 class=\"wp-block-heading\" id=\"How does this fit with the block editor and full site editing?\">How does this fit with the block editor and full site editing?<\/h2>\n\n\n\n<p>This is a really interesting question I\u2019ve asked myself.<\/p>\n\n\n\n<p>Block editing, full-site-editing and so on are (in my opinion) turning WordPress away from general content management and towards being a publishing platform that cares less for structure data. Data is being pushed into in-post HTML-comments rather than being made available in a structured way in WordPress\u2019s relational database.<\/p>\n\n\n\n<p>And WP-UI is really a relational database explorer. Most of my use cases are exploring things like post meta and options.<\/p>\n\n\n\n<p>So I don\u2019t know if this tool even has a medium\/long term future given the direction of WordPress.<\/p>\n\n\n\n<p>But I march onwards anyway.<\/p>\n\n\n\n<p>Let\u2019s see where we get to. Follow along at <a href=\"https:\/\/twitter.com\/wpui_app\">https:\/\/twitter.com\/wpui_app<\/a><\/p>\n\n\n\n<p>A website is coming soon!<\/p>\n",
                "protected": false
            },
            "excerpt": {
                "rendered": "<p>A very scattergun, brain dump of thoughts about the WP-UI app that I&#8217;m developoing in Electron.<\/p>\n",
                "protected": false
            },
            "author": 2,
            "featured_media": 9787,
            "comment_status": "open",
            "ping_status": "closed",
            "sticky": false,
            "template": "",
            "format": "standard",
            "meta": {
                "sig_custom_text": "",
                "sig_image_type": "featured-image",
                "sig_custom_image": 0,
                "sig_is_disabled": false,
                "url": "",
                "footnotes": ""
            },
            "categories": [
                23,
                639
            ],
            "tags": [
                28,
                462
            ],
            "yoast_head": "<!-- This site is optimized with the Yoast SEO plugin v21.7 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>Building WP-UI - Ross Wintle<\/title>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/rosswintle.uk\/2021\/01\/building-wp-ui\/\" \/>\n<meta property=\"og:locale\" content=\"en_GB\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"Building WP-UI - Ross Wintle\" \/>\n<meta property=\"og:description\" content=\"A very scattergun, brain dump of thoughts about the WP-UI app that I&#039;m developoing in Electron.\" \/>\n<meta property=\"og:url\" content=\"https:\/\/rosswintle.uk\/2021\/01\/building-wp-ui\/\" \/>\n<meta property=\"og:site_name\" content=\"Ross Wintle\" \/>\n<meta property=\"article:published_time\" content=\"2021-01-01T15:31:43+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2021-01-01T15:32:56+00:00\" \/>\n<meta property=\"og:image\" content=\"https:\/\/rosswintle.uk\/wp-content\/uploads\/2021\/01\/WP-UI-screen.jpg\" \/>\n\t<meta property=\"og:image:width\" content=\"1365\" \/>\n\t<meta property=\"og:image:height\" content=\"865\" \/>\n\t<meta property=\"og:image:type\" content=\"image\/jpeg\" \/>\n<meta name=\"author\" content=\"Ross Wintle\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:creator\" content=\"@magicroundabout\" \/>\n<meta name=\"twitter:site\" content=\"@magicroundabout\" \/>\n<meta name=\"twitter:label1\" content=\"Written by\" \/>\n\t<meta name=\"twitter:data1\" content=\"Ross Wintle\" \/>\n\t<meta name=\"twitter:label2\" content=\"Estimated reading time\" \/>\n\t<meta name=\"twitter:data2\" content=\"10 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"https:\/\/rosswintle.uk\/2021\/01\/building-wp-ui\/\",\"url\":\"https:\/\/rosswintle.uk\/2021\/01\/building-wp-ui\/\",\"name\":\"Building WP-UI - Ross Wintle\",\"isPartOf\":{\"@id\":\"https:\/\/rosswintle.uk\/#website\"},\"datePublished\":\"2021-01-01T15:31:43+00:00\",\"dateModified\":\"2021-01-01T15:32:56+00:00\",\"author\":{\"@id\":\"https:\/\/rosswintle.uk\/#\/schema\/person\/9f9bec147b2bfd762f09a2c2da7177dc\"},\"breadcrumb\":{\"@id\":\"https:\/\/rosswintle.uk\/2021\/01\/building-wp-ui\/#breadcrumb\"},\"inLanguage\":\"en-GB\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/rosswintle.uk\/2021\/01\/building-wp-ui\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/rosswintle.uk\/2021\/01\/building-wp-ui\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/rosswintle.uk\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"Building WP-UI\"}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/rosswintle.uk\/#website\",\"url\":\"https:\/\/rosswintle.uk\/\",\"name\":\"Ross Wintle\",\"description\":\"Creativity, curiosity, and code\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/rosswintle.uk\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-GB\"},{\"@type\":\"Person\",\"@id\":\"https:\/\/rosswintle.uk\/#\/schema\/person\/9f9bec147b2bfd762f09a2c2da7177dc\",\"name\":\"Ross Wintle\",\"image\":{\"@type\":\"ImageObject\",\"inLanguage\":\"en-GB\",\"@id\":\"https:\/\/rosswintle.uk\/#\/schema\/person\/image\/\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/28519fc7c37998eea059b525da5fc7ce?s=96&d=identicon&r=g\",\"contentUrl\":\"https:\/\/secure.gravatar.com\/avatar\/28519fc7c37998eea059b525da5fc7ce?s=96&d=identicon&r=g\",\"caption\":\"Ross Wintle\"},\"url\":\"https:\/\/rosswintle.uk\/author\/rosswintle\/\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->",
            "yoast_head_json": {
                "title": "Building WP-UI - Ross Wintle",
                "robots": {
                    "index": "index",
                    "follow": "follow",
                    "max-snippet": "max-snippet:-1",
                    "max-image-preview": "max-image-preview:large",
                    "max-video-preview": "max-video-preview:-1"
                },
                "canonical": "https:\/\/rosswintle.uk\/2021\/01\/building-wp-ui\/",
                "og_locale": "en_GB",
                "og_type": "article",
                "og_title": "Building WP-UI - Ross Wintle",
                "og_description": "A very scattergun, brain dump of thoughts about the WP-UI app that I'm developoing in Electron.",
                "og_url": "https:\/\/rosswintle.uk\/2021\/01\/building-wp-ui\/",
                "og_site_name": "Ross Wintle",
                "article_published_time": "2021-01-01T15:31:43+00:00",
                "article_modified_time": "2021-01-01T15:32:56+00:00",
                "og_image": [
                    {
                        "width": 1365,
                        "height": 865,
                        "url": "https:\/\/rosswintle.uk\/wp-content\/uploads\/2021\/01\/WP-UI-screen.jpg",
                        "type": "image\/jpeg"
                    }
                ],
                "author": "Ross Wintle",
                "twitter_card": "summary_large_image",
                "twitter_creator": "@magicroundabout",
                "twitter_site": "@magicroundabout",
                "twitter_misc": {
                    "Written by": "Ross Wintle",
                    "Estimated reading time": "10 minutes"
                },
                "schema": {
                    "@context": "https:\/\/schema.org",
                    "@graph": [
                        {
                            "@type": "WebPage",
                            "@id": "https:\/\/rosswintle.uk\/2021\/01\/building-wp-ui\/",
                            "url": "https:\/\/rosswintle.uk\/2021\/01\/building-wp-ui\/",
                            "name": "Building WP-UI - Ross Wintle",
                            "isPartOf": {
                                "@id": "https:\/\/rosswintle.uk\/#website"
                            },
                            "datePublished": "2021-01-01T15:31:43+00:00",
                            "dateModified": "2021-01-01T15:32:56+00:00",
                            "author": {
                                "@id": "https:\/\/rosswintle.uk\/#\/schema\/person\/9f9bec147b2bfd762f09a2c2da7177dc"
                            },
                            "breadcrumb": {
                                "@id": "https:\/\/rosswintle.uk\/2021\/01\/building-wp-ui\/#breadcrumb"
                            },
                            "inLanguage": "en-GB",
                            "potentialAction": [
                                {
                                    "@type": "ReadAction",
                                    "target": [
                                        "https:\/\/rosswintle.uk\/2021\/01\/building-wp-ui\/"
                                    ]
                                }
                            ]
                        },
                        {
                            "@type": "BreadcrumbList",
                            "@id": "https:\/\/rosswintle.uk\/2021\/01\/building-wp-ui\/#breadcrumb",
                            "itemListElement": [
                                {
                                    "@type": "ListItem",
                                    "position": 1,
                                    "name": "Home",
                                    "item": "https:\/\/rosswintle.uk\/"
                                },
                                {
                                    "@type": "ListItem",
                                    "position": 2,
                                    "name": "Building WP-UI"
                                }
                            ]
                        },
                        {
                            "@type": "WebSite",
                            "@id": "https:\/\/rosswintle.uk\/#website",
                            "url": "https:\/\/rosswintle.uk\/",
                            "name": "Ross Wintle",
                            "description": "Creativity, curiosity, and code",
                            "potentialAction": [
                                {
                                    "@type": "SearchAction",
                                    "target": {
                                        "@type": "EntryPoint",
                                        "urlTemplate": "https:\/\/rosswintle.uk\/?s={search_term_string}"
                                    },
                                    "query-input": "required name=search_term_string"
                                }
                            ],
                            "inLanguage": "en-GB"
                        },
                        {
                            "@type": "Person",
                            "@id": "https:\/\/rosswintle.uk\/#\/schema\/person\/9f9bec147b2bfd762f09a2c2da7177dc",
                            "name": "Ross Wintle",
                            "image": {
                                "@type": "ImageObject",
                                "inLanguage": "en-GB",
                                "@id": "https:\/\/rosswintle.uk\/#\/schema\/person\/image\/",
                                "url": "https:\/\/secure.gravatar.com\/avatar\/28519fc7c37998eea059b525da5fc7ce?s=96&d=identicon&r=g",
                                "contentUrl": "https:\/\/secure.gravatar.com\/avatar\/28519fc7c37998eea059b525da5fc7ce?s=96&d=identicon&r=g",
                                "caption": "Ross Wintle"
                            },
                            "url": "https:\/\/rosswintle.uk\/author\/rosswintle\/"
                        }
                    ]
                }
            },
            "_links": {
                "self": [
                    {
                        "href": "https:\/\/rosswintle.uk\/wp-json\/wp\/v2\/posts\/9786"
                    }
                ],
                "collection": [
                    {
                        "href": "https:\/\/rosswintle.uk\/wp-json\/wp\/v2\/posts"
                    }
                ],
                "about": [
                    {
                        "href": "https:\/\/rosswintle.uk\/wp-json\/wp\/v2\/types\/post"
                    }
                ],
                "author": [
                    {
                        "embeddable": true,
                        "href": "https:\/\/rosswintle.uk\/wp-json\/wp\/v2\/users\/2"
                    }
                ],
                "replies": [
                    {
                        "embeddable": true,
                        "href": "https:\/\/rosswintle.uk\/wp-json\/wp\/v2\/comments?post=9786"
                    }
                ],
                "version-history": [
                    {
                        "count": 3,
                        "href": "https:\/\/rosswintle.uk\/wp-json\/wp\/v2\/posts\/9786\/revisions"
                    }
                ],
                "predecessor-version": [
                    {
                        "id": 9793,
                        "href": "https:\/\/rosswintle.uk\/wp-json\/wp\/v2\/posts\/9786\/revisions\/9793"
                    }
                ],
                "wp:featuredmedia": [
                    {
                        "embeddable": true,
                        "href": "https:\/\/rosswintle.uk\/wp-json\/wp\/v2\/media\/9787"
                    }
                ],
                "wp:attachment": [
                    {
                        "href": "https:\/\/rosswintle.uk\/wp-json\/wp\/v2\/media?parent=9786"
                    }
                ],
                "wp:term": [
                    {
                        "taxonomy": "category",
                        "embeddable": true,
                        "href": "https:\/\/rosswintle.uk\/wp-json\/wp\/v2\/categories?post=9786"
                    },
                    {
                        "taxonomy": "post_tag",
                        "embeddable": true,
                        "href": "https:\/\/rosswintle.uk\/wp-json\/wp\/v2\/tags?post=9786"
                    }
                ],
                "curies": [
                    {
                        "name": "wp",
                        "href": "https:\/\/api.w.org\/{rel}",
                        "templated": true
                    }
                ]
            }
        },
        "id": 9786,
        "dateGmt": "2021-01-01T15:31:43",
        "modifiedDateGmt": "2021-01-01T15:32:56",
        "slug": "building-wp-ui",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/rosswintle.uk\/2021\/01\/building-wp-ui\/",
        "title": "Building WP-UI",
        "content": "\n<p>I was listening to the <a href=\"https:\/\/noplanstomerge.com\/63\">No Plans To Merge guys today discussing the rebuild of Laravel Livewire<\/a>.<\/p>\n\n\n\n<p>There was a segment where they were talking about the difference between building an application and building a framework and how you start to build things one way that\u2019s a bit hacky to get things going and then completely rework things later on to make it more modular.<\/p>\n\n\n\n<p>And I realised that this is KINDA what I\u2019m doing with building <a href=\"https:\/\/twitter.com\/wpui_app\">WP-UI<\/a>. And so I thought it was time to get some rambling thoughts down on paper about WP-UI.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\" id=\"What is WP-UI?\">What is WP-UI?<\/h2>\n\n\n\n<p><a href=\"https:\/\/twitter.com\/wpui_app\">WP-UI<\/a> is a desktop app I\u2019m building in <a href=\"https:\/\/www.electronjs.org\/\">Electron<\/a> that makes working with WordPress quick and easy.<\/p>\n\n\n\n<p>It\u2019s quite hard to explain, but:<\/p>\n\n\n\n<ul><li>If you know what <a href=\"https:\/\/wp-cli.org\/\">WP-CLI<\/a> is, then the aim is for it to be a GUI version of that.<\/li><li>If you know what <a href=\"https:\/\/www.phpmyadmin.net\/\">PHPMyAdmin<\/a> or <a href=\"https:\/\/www.adminer.org\/\">Adminer<\/a> or <a href=\"https:\/\/sequelpro.com\/\">Sequel Pro<\/a> or <a href=\"https:\/\/sequel-ace.com\/\">Sequel Ace<\/a> or <a href=\"https:\/\/www.araelium.com\/querious\">Querious<\/a> or <a href=\"https:\/\/www.tableplus.io\/\">Table Plus<\/a> are then it\u2019s like a WordPress-aware version of that that requires no SQL knowledge.<\/li><\/ul>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-large is-resized\"><img loading=\"lazy\" decoding=\"async\" src=\"https:\/\/rosswintle.uk\/wp-content\/uploads\/2021\/01\/WP-UI-screen-1024x649.jpg\" alt=\"Screen grab of WP-UI\" class=\"wp-image-9787\" width=\"768\" height=\"487\" srcset=\"https:\/\/rosswintle.uk\/wp-content\/uploads\/2021\/01\/WP-UI-screen-1024x649.jpg 1024w, https:\/\/rosswintle.uk\/wp-content\/uploads\/2021\/01\/WP-UI-screen-300x190.jpg 300w, https:\/\/rosswintle.uk\/wp-content\/uploads\/2021\/01\/WP-UI-screen-768x487.jpg 768w, https:\/\/rosswintle.uk\/wp-content\/uploads\/2021\/01\/WP-UI-screen.jpg 1365w\" sizes=\"(max-width: 768px) 100vw, 768px\" \/><figcaption>Screengrab of WP-UI showing a post list<\/figcaption><\/figure><\/div>\n\n\n\n<p>WP-UI lets you inspect WordPress data quickly and easily. And ultimately I\u2019d like you to be able to modify data through it and take actions like managing plugins and themes, deleting transients, running cron jobs &#8211; lots of the things WP-CLI lets you do.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\" id=\"Why I\u2019m building it\">Why I\u2019m building it<\/h2>\n\n\n\n<p>Kinda because I wanted it.<\/p>\n\n\n\n<p>I\u2019d seen a product called \u201c<a href=\"https:\/\/invoker.dev\/\">Invoker<\/a>\u201d that does a similar thing for Laravel applications, and thought \u201cI\u2019d love this for WordPress\u201d. And I had <a href=\"https:\/\/desktopappswithelectron.com\/\">a video course on building Electron apps<\/a>. So I put the two together and started building to see what was possible.<\/p>\n\n\n\n<p>My initial aim was to:<\/p>\n\n\n\n<ul><li>See if my initial ideas were possible<\/li><li>Learn some more <a href=\"https:\/\/www.electronjs.org\/\">Electron<\/a> and <a href=\"https:\/\/vuejs.org\/\">Vue.js<\/a> and <a href=\"https:\/\/tailwindcss.com\/\">Tailwind CSS<\/a>.<\/li><\/ul>\n\n\n\n<p>But I got in quite deep beyond an initial prototype!<\/p>\n\n\n\n<h2 class=\"wp-block-heading\" id=\"How I\u2019m building WP-UI\">How I\u2019m building WP-UI<\/h2>\n\n\n\n<p>I\u2019m using <a href=\"https:\/\/www.electronjs.org\/\">Electron<\/a> and <a href=\"https:\/\/vuejs.org\/\">VueJS.<\/a> I currently use <a href=\"https:\/\/router.vuejs.org\/\">vue-router<\/a>, but not <a href=\"https:\/\/vuex.vuejs.org\/\">vuex<\/a>. I\u2019m kinda putting off adding vuex into the mix because it seems to come with warnings of \u201cyou probably don\u2019t need this\u201d, yet I think it\u2019s inevitable for what I\u2019m doing here.<\/p>\n\n\n\n<p>I\u2019m styling with <a href=\"https:\/\/tailwindcss.com\/\">TailwindCSS<\/a> and <a href=\"https:\/\/tailwindui.com\/\">TailwindUI<\/a>.<\/p>\n\n\n\n<p>In terms of the abstractions I currently have that power the thing, I have a bunch of Vue components for things like table headers, rows and data items. These help componentise the markup, which is essential for using Tailwind without going crazy.<\/p>\n\n\n\n<p>I also have a fairly good abstraction for running PHP\/WordPress. Electron has a node back-end that lets me call command line commands. So I\u2019m running a PHP command line instance and passing it some PHP code to run, then catching the output of the command.<\/p>\n\n\n\n<p>The abstraction automatically uses the PHP binary set in the applications options, and loads <code class=\"code-inline\">wp-load.php<\/code> (I should do this more intelligently &#8211; it assumes it\u2019s in the root of your project for now).<\/p>\n\n\n\n<p>This PHP code has to echo something out that we can get back into JavaScript for display. You usually end with something like:<\/p>\n\n\n\n<p><code class=\"code-inline\">echo json_encode( [ ... some stuff you need \u2026 ] );<\/code><\/p>\n\n\n\n<p>Then, back in JavaScript\/Vue land you JSON.parse the output back into a usable object.<\/p>\n\n\n\n<p>This all works nicely and doesn\u2019t require any plugins or anything to be installed into WordPress. Writing PHP code inside a JavaScript string is pretty weird but I\u2019m not doing anything hugely complex. I\u2019m sure there\u2019s a better way though.<\/p>\n\n\n\n<p>I should add that I\u2019m trying, where possible, to use WordPress APIs rather than going straight to writing SQL queries, though in some cases SQL is needed.<\/p>\n\n\n\n<p>As an extra abstraction, the application uses lots of \u201cpost lists\u201d. So I\u2019ve build a post list API that runs instances of <code>WP_Query<\/code> for you and populates a table. You pass it query options and it creates the table for you. It adds pagination, search, and (I hope, eventually) sorting in for you.<\/p>\n\n\n\n<p>Posts are kinda special and used a lot though, and I\u2019m considering what other abstractions would be helpful. This is where the \u201cam I building a framework?\u201d thing comes in. More on this later.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\" id=\"Security\">Security<\/h2>\n\n\n\n<p>I need to jot things down about security while I think of them.<\/p>\n\n\n\n<p>I\u2019ve honestly not thought through security properly yet. But I guess it works on the principle that if you can use WP-UI on a WordPress install you\u2019ve got shell access anyways so all bets are off.<\/p>\n\n\n\n<p>But I am thinking through things like: can someone store something in the WordPress database that when I pull it out could do weird stuff on your local machine?<\/p>\n\n\n\n<p>Definitely needs more thought though.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\" id=\"What is your plan for it?\">What is your plan for it?<\/h2>\n\n\n\n<p>I\u2019m not entirely sure.<\/p>\n\n\n\n<p>I\u2019d like it to be a paid product of some sort, but there are a LOT of steps to get to that point (licensing, allowing trials, payments and eCommerce, support processes, documentation, legal stuff, tax stuff like VAT, marketing, to name but a few).<\/p>\n\n\n\n<p>Several people have asked if I will open source it? But I\u2019ve put a fair bit of time into this now and I consider it an \u201casset\u201d that I think has value and would like to make some money from if I can. And I hope it\u2019s a tool that will have value for others.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\" id=\"Will this need to be GPL licensed?\">Will this need to be GPL licensed?<\/h2>\n\n\n\n<p>So, there\u2019s this thing about tools that integrate with WordPress needing to be GPL licensed. I think this is possible without making the source code public. And if I\u2019m to keep it as a paid product then this is what I will want to do.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\" id=\"Thoughts about extending WP-UI\">Thoughts about extending WP-UI<\/h2>\n\n\n\n<p>This is where Caleb and Daniel\u2019s discussion application code vs framework code and the iterations of framework code got me thinking.<\/p>\n\n\n\n<p>Part of their conversation was about how, eventually, if you\u2019re writing a framework, it\u2019s good to be super-modular. They talk about how good frameworks seem to end up with \u201cloader\u201d files that contain a bunch of lines that just import functionality from discrete packages.<\/p>\n\n\n\n<p>I would LOVE for WP-UI to be like this and, subsequently, extendable by others in this sort of way. This is how WP-CLI works. And I think Invoker will eventually have extensions that work like this too.<\/p>\n\n\n\n<p>And this is a REALLY interesting space. I\u2019m kinda chuffed that my brain has gone down the route of thinking like this. I feel like it\u2019s a pretty advanced thing to be thinking of this in abstract enough terms.<\/p>\n\n\n\n<p>RIGHT NOW I\u2019m in a place where I\u2019m almost daily, when working on WP-UI, having to decide if I make a layer abstract or not. Whether to do something quickly so that I can deliver WP-UI into the hands of people, or whether to spend time on refactor to make things more abstract and extendable.<\/p>\n\n\n\n<p>At the moment, I have a couple of good abstractions as mentioned above:<\/p>\n\n\n\n<ul><li>One for running PHP (though this could be better) &#8211; a JavaScript class\/object that I can pass some PHP code to and have that code executed in the context of the currently-configured WordPress project.<\/li><li>One for lists of WordPress posts (you basically pass it a set of WP_Query options and it builds the data table)<\/li><\/ul>\n\n\n\n<p>I think Post Lists will always be \u201cspecial\u201d because they\u2019re quite complex. But I feel like the other tables probably need to be abstracted.<\/p>\n\n\n\n<p>I can see a world where an extension:<\/p>\n\n\n\n<ul><li>Defines a new \u201cPage\u201d in the app<\/li><li>Gives some PHP code to run that produces output matching a specific format<\/li><li>Specifies how that data output is converted into tables (by specifying column types, which columns are searchable and sortable, for example)<\/li><li>Specifies how rows in the data table map to other, \u201csingle-entry\u201d screens.<\/li><li>Somehow specifies \u201cactions\u201d for rows in the data table that can run PHP code to make stuff happen &#8211; this probably needs variables\/placeholders to be made available somehow.<\/li><\/ul>\n\n\n\n<p>These \u201cdo I abstract?\u201d questions are huge at this point, because I\u2019m accumulating technical debt. I\u2019m deciding to add work to the pile for myself if I want to make the abstraction later on.<\/p>\n\n\n\n<p>I\u2019m tending towards thinking that I need to get a version 1 out that\u2019s less frameworky and extendable. I want people to be able to use this thing! So that\u2019s v1.<\/p>\n\n\n\n<p>Then v2 will be a big refactor that makes it more frameworky. Build the internal APIs, define the data formats, then refactor all my internal pages to use those APIs.<\/p>\n\n\n\n<p>So my main App file should become a loader file that contains a bunch of lines that import the pages of the app from discrete packages! Win!!<\/p>\n\n\n\n<p>Does this mean I\u2019m building a framework? This isn\u2019t what I set out to do!! But maybe I AM! Eeeek!<\/p>\n\n\n\n<p>However, something like this would allow you to do stuff like extend WP-UI to allow it to act as a desktop app for managing WooCommerce orders.<\/p>\n\n\n\n<p>Bonkers! (In a good way)<\/p>\n\n\n\n<h2 class=\"wp-block-heading\" id=\"A brief aside on datatables and UI libraries\">A brief aside on datatables and UI libraries<\/h2>\n\n\n\n<p>While writing this I looked into some datatable libraries like <a href=\"https:\/\/datatables.net\/\">https:\/\/datatables.net\/<\/a> and I came across the <a href=\"https:\/\/vuetifyjs.com\/en\/\">Vuetify<\/a> design framework too.<\/p>\n\n\n\n<p>It got me wondering if it would be possible and beneficial to use something like this rather than crafting everything myself with Tailwind UI.<\/p>\n\n\n\n<p>For the initial phase of this project it\u2019s been SUPER helpful for me to build things by myself with just Tailwind UI taking care of the layout and some styling. I\u2019ve learned a LOT of Vue along the way and really feel like a JavaScript application programmer (which I never thought I would say).<\/p>\n\n\n\n<p>But maybe I\u2019ll eject out into a UI framework like this in future. It certainly seems like I\u2019ve re-invented the wheel a bit! In some cases this may be necessary, but in many I suspect it\u2019s not.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\" id=\"What else would you like it to do?\">What else would you like it to do?<\/h2>\n\n\n\n<p>I have a roadmap with a bunch of minor tweaks, and some bigger ideas. Eventually I\u2019d like:<\/p>\n\n\n\n<ul><li>To allow editing as well as just viewing of data<\/li><li>To handle serialised data nicely somehow<\/li><li>To be able to use with remote (live?!) sites over SSH<\/li><li>To allow actions to be taken, such as updating plugins, or expiring transients<\/li><li>There was also a cool idea that someone suggested where the application could show you the code that it runs. This would allow you to visually build a query or action in WP-UI by selecting the page, filters, pagination options, sorting, etc and then get the WP_Query or other PHP code to paste back into your theme\/plugin\/whatever.<\/li><\/ul>\n\n\n\n<p>So\u2026lots of ideas. But\u2026<\/p>\n\n\n\n<h2 class=\"wp-block-heading\" id=\"How does this fit with the block editor and full site editing?\">How does this fit with the block editor and full site editing?<\/h2>\n\n\n\n<p>This is a really interesting question I\u2019ve asked myself.<\/p>\n\n\n\n<p>Block editing, full-site-editing and so on are (in my opinion) turning WordPress away from general content management and towards being a publishing platform that cares less for structure data. Data is being pushed into in-post HTML-comments rather than being made available in a structured way in WordPress\u2019s relational database.<\/p>\n\n\n\n<p>And WP-UI is really a relational database explorer. Most of my use cases are exploring things like post meta and options.<\/p>\n\n\n\n<p>So I don\u2019t know if this tool even has a medium\/long term future given the direction of WordPress.<\/p>\n\n\n\n<p>But I march onwards anyway.<\/p>\n\n\n\n<p>Let\u2019s see where we get to. Follow along at <a href=\"https:\/\/twitter.com\/wpui_app\">https:\/\/twitter.com\/wpui_app<\/a><\/p>\n\n\n\n<p>A website is coming soon!<\/p>\n",
        "excerpt": "<p>A very scattergun, brain dump of thoughts about the WP-UI app that I&#8217;m developoing in Electron.<\/p>\n",
        "parentId": 0,
        "authorId": 2,
        "featuredMediaId": 9787
    },
    {
        "dataAsArray": {
            "id": 9713,
            "date": "2020-12-04T17:15:12",
            "date_gmt": "2020-12-04T17:15:12",
            "guid": {
                "rendered": "https:\/\/rosswintle.uk\/?p=9713"
            },
            "modified": "2021-05-14T10:21:13",
            "modified_gmt": "2021-05-14T09:21:13",
            "slug": "wordpress-multisite-sub-domains-redirects-without-path-domain-alias",
            "status": "publish",
            "type": "post",
            "link": "https:\/\/rosswintle.uk\/2020\/12\/wordpress-multisite-sub-domains-redirects-without-path-domain-alias\/",
            "title": {
                "rendered": "Tech note: WordPress multisite in sub-domains redirects without path when you have a domain alias"
            },
            "content": {
                "rendered": "\n<p>Well this is a super-niche issue that I came across today. I don&#8217;t have an answer &#8211; maybe you do?<\/p>\n\n\n\n<p>I have a WP multisite running in sub-DIRECTORIES. And it has a domain alias pointing at it. There are some redirection plugins installed but these turned out to be irrelevant.<\/p>\n\n\n\n<p>The domain alias was redirecting to the main domain BUT\u2026 it was stripping any path off. So:<\/p>\n\n\n\n<p>https:\/\/my-domain-alias.com\/some-path<\/p>\n\n\n\n<p>was being redirected to:<\/p>\n\n\n\n<p>https:\/\/my-domain.com\/<\/p>\n\n\n\n<p>Which was annoying because I wanted the path so I could do further redirects.<\/p>\n\n\n\n<p>I experimented and eliminated the other redirection plugins as a cause.<\/p>\n\n\n\n<p>And then I added some stuff to <code>wp-config.php<\/code> to trap my requests. These WERE being triggered and so I eliminated the web server as a cause.<\/p>\n\n\n\n<p>So I figured WordPress core was doing a redirect to the main domain without the URL.<\/p>\n\n\n\n<p>There is a <a href=\"https:\/\/developer.wordpress.org\/reference\/functions\/maybe_redirect_404\/\"><code>maybe_redirect_404<\/code><\/a> function that seems to do the redirect I&#8217;m describing and runs in multisite IF a <code>NOBLOGREDIRECT<\/code> constant is set. But this constant was NOT set.<\/p>\n\n\n\n<p>I then tried trapping the request in a must-use plugin, figuring that this was the earliest I could load anything custom, but this code wasn&#8217;t being hit!<\/p>\n\n\n\n<p>So this redirect was happening AFTER loading <code>wp-config.php<\/code> but before mu-plugins are loaded.<\/p>\n\n\n\n<p>It&#8217;s really odd. I&#8217;ve added the hacky fix of redirecting from <code>wp-config.php<\/code> but I&#8217;m not very happy about doing so!<\/p>\n\n\n\n<p>Does anyone with WP Multisite internals knowlegde know what&#8217;s going on here?<\/p>\n",
                "protected": false
            },
            "excerpt": {
                "rendered": "<p>Well this is a super-niche issue that I came across today. I don&#8217;t have an answer &#8211; maybe you do?<\/p>\n",
                "protected": false
            },
            "author": 2,
            "featured_media": 0,
            "comment_status": "open",
            "ping_status": "closed",
            "sticky": false,
            "template": "",
            "format": "standard",
            "meta": {
                "sig_custom_text": "",
                "sig_image_type": "featured-image",
                "sig_custom_image": 0,
                "sig_is_disabled": false,
                "url": "",
                "footnotes": ""
            },
            "categories": [
                23,
                736,
                639
            ],
            "tags": [
                5025,
                5024,
                462
            ],
            "yoast_head": "<!-- This site is optimized with the Yoast SEO plugin v21.7 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>Tech note: WordPress multisite in sub-domains redirects without path when you have a domain alias - Ross Wintle<\/title>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/rosswintle.uk\/2020\/12\/wordpress-multisite-sub-domains-redirects-without-path-domain-alias\/\" \/>\n<meta property=\"og:locale\" content=\"en_GB\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"Tech note: WordPress multisite in sub-domains redirects without path when you have a domain alias - Ross Wintle\" \/>\n<meta property=\"og:description\" content=\"Well this is a super-niche issue that I came across today. I don&#039;t have an answer - maybe you do?\" \/>\n<meta property=\"og:url\" content=\"https:\/\/rosswintle.uk\/2020\/12\/wordpress-multisite-sub-domains-redirects-without-path-domain-alias\/\" \/>\n<meta property=\"og:site_name\" content=\"Ross Wintle\" \/>\n<meta property=\"article:published_time\" content=\"2020-12-04T17:15:12+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2021-05-14T09:21:13+00:00\" \/>\n<meta property=\"og:image\" content=\"https:\/\/rosswintle.uk\/wp-content\/uploads\/2012\/06\/DSC_0005-small.jpg\" \/>\n\t<meta property=\"og:image:width\" content=\"600\" \/>\n\t<meta property=\"og:image:height\" content=\"399\" \/>\n\t<meta property=\"og:image:type\" content=\"image\/jpeg\" \/>\n<meta name=\"author\" content=\"Ross Wintle\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:creator\" content=\"@magicroundabout\" \/>\n<meta name=\"twitter:site\" content=\"@magicroundabout\" \/>\n<meta name=\"twitter:label1\" content=\"Written by\" \/>\n\t<meta name=\"twitter:data1\" content=\"Ross Wintle\" \/>\n\t<meta name=\"twitter:label2\" content=\"Estimated reading time\" \/>\n\t<meta name=\"twitter:data2\" content=\"1 minute\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"https:\/\/rosswintle.uk\/2020\/12\/wordpress-multisite-sub-domains-redirects-without-path-domain-alias\/\",\"url\":\"https:\/\/rosswintle.uk\/2020\/12\/wordpress-multisite-sub-domains-redirects-without-path-domain-alias\/\",\"name\":\"Tech note: WordPress multisite in sub-domains redirects without path when you have a domain alias - Ross Wintle\",\"isPartOf\":{\"@id\":\"https:\/\/rosswintle.uk\/#website\"},\"datePublished\":\"2020-12-04T17:15:12+00:00\",\"dateModified\":\"2021-05-14T09:21:13+00:00\",\"author\":{\"@id\":\"https:\/\/rosswintle.uk\/#\/schema\/person\/9f9bec147b2bfd762f09a2c2da7177dc\"},\"breadcrumb\":{\"@id\":\"https:\/\/rosswintle.uk\/2020\/12\/wordpress-multisite-sub-domains-redirects-without-path-domain-alias\/#breadcrumb\"},\"inLanguage\":\"en-GB\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/rosswintle.uk\/2020\/12\/wordpress-multisite-sub-domains-redirects-without-path-domain-alias\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/rosswintle.uk\/2020\/12\/wordpress-multisite-sub-domains-redirects-without-path-domain-alias\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/rosswintle.uk\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"Tech note: WordPress multisite in sub-domains redirects without path when you have a domain alias\"}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/rosswintle.uk\/#website\",\"url\":\"https:\/\/rosswintle.uk\/\",\"name\":\"Ross Wintle\",\"description\":\"Creativity, curiosity, and code\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/rosswintle.uk\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-GB\"},{\"@type\":\"Person\",\"@id\":\"https:\/\/rosswintle.uk\/#\/schema\/person\/9f9bec147b2bfd762f09a2c2da7177dc\",\"name\":\"Ross Wintle\",\"image\":{\"@type\":\"ImageObject\",\"inLanguage\":\"en-GB\",\"@id\":\"https:\/\/rosswintle.uk\/#\/schema\/person\/image\/\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/28519fc7c37998eea059b525da5fc7ce?s=96&d=identicon&r=g\",\"contentUrl\":\"https:\/\/secure.gravatar.com\/avatar\/28519fc7c37998eea059b525da5fc7ce?s=96&d=identicon&r=g\",\"caption\":\"Ross Wintle\"},\"url\":\"https:\/\/rosswintle.uk\/author\/rosswintle\/\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->",
            "yoast_head_json": {
                "title": "Tech note: WordPress multisite in sub-domains redirects without path when you have a domain alias - Ross Wintle",
                "robots": {
                    "index": "index",
                    "follow": "follow",
                    "max-snippet": "max-snippet:-1",
                    "max-image-preview": "max-image-preview:large",
                    "max-video-preview": "max-video-preview:-1"
                },
                "canonical": "https:\/\/rosswintle.uk\/2020\/12\/wordpress-multisite-sub-domains-redirects-without-path-domain-alias\/",
                "og_locale": "en_GB",
                "og_type": "article",
                "og_title": "Tech note: WordPress multisite in sub-domains redirects without path when you have a domain alias - Ross Wintle",
                "og_description": "Well this is a super-niche issue that I came across today. I don't have an answer - maybe you do?",
                "og_url": "https:\/\/rosswintle.uk\/2020\/12\/wordpress-multisite-sub-domains-redirects-without-path-domain-alias\/",
                "og_site_name": "Ross Wintle",
                "article_published_time": "2020-12-04T17:15:12+00:00",
                "article_modified_time": "2021-05-14T09:21:13+00:00",
                "og_image": [
                    {
                        "width": "600",
                        "height": "399",
                        "url": "https:\/\/rosswintle.uk\/wp-content\/uploads\/2012\/06\/DSC_0005-small.jpg",
                        "type": "image\/jpeg"
                    }
                ],
                "author": "Ross Wintle",
                "twitter_card": "summary_large_image",
                "twitter_creator": "@magicroundabout",
                "twitter_site": "@magicroundabout",
                "twitter_misc": {
                    "Written by": "Ross Wintle",
                    "Estimated reading time": "1 minute"
                },
                "schema": {
                    "@context": "https:\/\/schema.org",
                    "@graph": [
                        {
                            "@type": "WebPage",
                            "@id": "https:\/\/rosswintle.uk\/2020\/12\/wordpress-multisite-sub-domains-redirects-without-path-domain-alias\/",
                            "url": "https:\/\/rosswintle.uk\/2020\/12\/wordpress-multisite-sub-domains-redirects-without-path-domain-alias\/",
                            "name": "Tech note: WordPress multisite in sub-domains redirects without path when you have a domain alias - Ross Wintle",
                            "isPartOf": {
                                "@id": "https:\/\/rosswintle.uk\/#website"
                            },
                            "datePublished": "2020-12-04T17:15:12+00:00",
                            "dateModified": "2021-05-14T09:21:13+00:00",
                            "author": {
                                "@id": "https:\/\/rosswintle.uk\/#\/schema\/person\/9f9bec147b2bfd762f09a2c2da7177dc"
                            },
                            "breadcrumb": {
                                "@id": "https:\/\/rosswintle.uk\/2020\/12\/wordpress-multisite-sub-domains-redirects-without-path-domain-alias\/#breadcrumb"
                            },
                            "inLanguage": "en-GB",
                            "potentialAction": [
                                {
                                    "@type": "ReadAction",
                                    "target": [
                                        "https:\/\/rosswintle.uk\/2020\/12\/wordpress-multisite-sub-domains-redirects-without-path-domain-alias\/"
                                    ]
                                }
                            ]
                        },
                        {
                            "@type": "BreadcrumbList",
                            "@id": "https:\/\/rosswintle.uk\/2020\/12\/wordpress-multisite-sub-domains-redirects-without-path-domain-alias\/#breadcrumb",
                            "itemListElement": [
                                {
                                    "@type": "ListItem",
                                    "position": 1,
                                    "name": "Home",
                                    "item": "https:\/\/rosswintle.uk\/"
                                },
                                {
                                    "@type": "ListItem",
                                    "position": 2,
                                    "name": "Tech note: WordPress multisite in sub-domains redirects without path when you have a domain alias"
                                }
                            ]
                        },
                        {
                            "@type": "WebSite",
                            "@id": "https:\/\/rosswintle.uk\/#website",
                            "url": "https:\/\/rosswintle.uk\/",
                            "name": "Ross Wintle",
                            "description": "Creativity, curiosity, and code",
                            "potentialAction": [
                                {
                                    "@type": "SearchAction",
                                    "target": {
                                        "@type": "EntryPoint",
                                        "urlTemplate": "https:\/\/rosswintle.uk\/?s={search_term_string}"
                                    },
                                    "query-input": "required name=search_term_string"
                                }
                            ],
                            "inLanguage": "en-GB"
                        },
                        {
                            "@type": "Person",
                            "@id": "https:\/\/rosswintle.uk\/#\/schema\/person\/9f9bec147b2bfd762f09a2c2da7177dc",
                            "name": "Ross Wintle",
                            "image": {
                                "@type": "ImageObject",
                                "inLanguage": "en-GB",
                                "@id": "https:\/\/rosswintle.uk\/#\/schema\/person\/image\/",
                                "url": "https:\/\/secure.gravatar.com\/avatar\/28519fc7c37998eea059b525da5fc7ce?s=96&d=identicon&r=g",
                                "contentUrl": "https:\/\/secure.gravatar.com\/avatar\/28519fc7c37998eea059b525da5fc7ce?s=96&d=identicon&r=g",
                                "caption": "Ross Wintle"
                            },
                            "url": "https:\/\/rosswintle.uk\/author\/rosswintle\/"
                        }
                    ]
                }
            },
            "_links": {
                "self": [
                    {
                        "href": "https:\/\/rosswintle.uk\/wp-json\/wp\/v2\/posts\/9713"
                    }
                ],
                "collection": [
                    {
                        "href": "https:\/\/rosswintle.uk\/wp-json\/wp\/v2\/posts"
                    }
                ],
                "about": [
                    {
                        "href": "https:\/\/rosswintle.uk\/wp-json\/wp\/v2\/types\/post"
                    }
                ],
                "author": [
                    {
                        "embeddable": true,
                        "href": "https:\/\/rosswintle.uk\/wp-json\/wp\/v2\/users\/2"
                    }
                ],
                "replies": [
                    {
                        "embeddable": true,
                        "href": "https:\/\/rosswintle.uk\/wp-json\/wp\/v2\/comments?post=9713"
                    }
                ],
                "version-history": [
                    {
                        "count": 1,
                        "href": "https:\/\/rosswintle.uk\/wp-json\/wp\/v2\/posts\/9713\/revisions"
                    }
                ],
                "predecessor-version": [
                    {
                        "id": 9716,
                        "href": "https:\/\/rosswintle.uk\/wp-json\/wp\/v2\/posts\/9713\/revisions\/9716"
                    }
                ],
                "wp:attachment": [
                    {
                        "href": "https:\/\/rosswintle.uk\/wp-json\/wp\/v2\/media?parent=9713"
                    }
                ],
                "wp:term": [
                    {
                        "taxonomy": "category",
                        "embeddable": true,
                        "href": "https:\/\/rosswintle.uk\/wp-json\/wp\/v2\/categories?post=9713"
                    },
                    {
                        "taxonomy": "post_tag",
                        "embeddable": true,
                        "href": "https:\/\/rosswintle.uk\/wp-json\/wp\/v2\/tags?post=9713"
                    }
                ],
                "curies": [
                    {
                        "name": "wp",
                        "href": "https:\/\/api.w.org\/{rel}",
                        "templated": true
                    }
                ]
            }
        },
        "id": 9713,
        "dateGmt": "2020-12-04T17:15:12",
        "modifiedDateGmt": "2021-05-14T09:21:13",
        "slug": "wordpress-multisite-sub-domains-redirects-without-path-domain-alias",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/rosswintle.uk\/2020\/12\/wordpress-multisite-sub-domains-redirects-without-path-domain-alias\/",
        "title": "Tech note: WordPress multisite in sub-domains redirects without path when you have a domain alias",
        "content": "\n<p>Well this is a super-niche issue that I came across today. I don&#8217;t have an answer &#8211; maybe you do?<\/p>\n\n\n\n<p>I have a WP multisite running in sub-DIRECTORIES. And it has a domain alias pointing at it. There are some redirection plugins installed but these turned out to be irrelevant.<\/p>\n\n\n\n<p>The domain alias was redirecting to the main domain BUT\u2026 it was stripping any path off. So:<\/p>\n\n\n\n<p>https:\/\/my-domain-alias.com\/some-path<\/p>\n\n\n\n<p>was being redirected to:<\/p>\n\n\n\n<p>https:\/\/my-domain.com\/<\/p>\n\n\n\n<p>Which was annoying because I wanted the path so I could do further redirects.<\/p>\n\n\n\n<p>I experimented and eliminated the other redirection plugins as a cause.<\/p>\n\n\n\n<p>And then I added some stuff to <code>wp-config.php<\/code> to trap my requests. These WERE being triggered and so I eliminated the web server as a cause.<\/p>\n\n\n\n<p>So I figured WordPress core was doing a redirect to the main domain without the URL.<\/p>\n\n\n\n<p>There is a <a href=\"https:\/\/developer.wordpress.org\/reference\/functions\/maybe_redirect_404\/\"><code>maybe_redirect_404<\/code><\/a> function that seems to do the redirect I&#8217;m describing and runs in multisite IF a <code>NOBLOGREDIRECT<\/code> constant is set. But this constant was NOT set.<\/p>\n\n\n\n<p>I then tried trapping the request in a must-use plugin, figuring that this was the earliest I could load anything custom, but this code wasn&#8217;t being hit!<\/p>\n\n\n\n<p>So this redirect was happening AFTER loading <code>wp-config.php<\/code> but before mu-plugins are loaded.<\/p>\n\n\n\n<p>It&#8217;s really odd. I&#8217;ve added the hacky fix of redirecting from <code>wp-config.php<\/code> but I&#8217;m not very happy about doing so!<\/p>\n\n\n\n<p>Does anyone with WP Multisite internals knowlegde know what&#8217;s going on here?<\/p>\n",
        "excerpt": "<p>Well this is a super-niche issue that I came across today. I don&#8217;t have an answer &#8211; maybe you do?<\/p>\n",
        "parentId": 0,
        "authorId": 2,
        "featuredMediaId": 0
    },
    {
        "dataAsArray": {
            "id": 9686,
            "date": "2020-11-19T12:24:20",
            "date_gmt": "2020-11-19T12:24:20",
            "guid": {
                "rendered": "https:\/\/rosswintle.uk\/?p=9686"
            },
            "modified": "2020-11-19T12:24:24",
            "modified_gmt": "2020-11-19T12:24:24",
            "slug": "where-are-my-mysql-database-files-on-macos",
            "status": "publish",
            "type": "post",
            "link": "https:\/\/rosswintle.uk\/2020\/11\/where-are-my-mysql-database-files-on-macos\/",
            "title": {
                "rendered": "Where are my MySQL database files on MacOS?"
            },
            "content": {
                "rendered": "\n<p><em>My 7-year-old MacBook got bricked. So I needed to recover some MySQL files from a Time Machine backup and load them onto a new computer.<\/em><\/p>\n\n\n\n<p><em>And so I&#8217;ve been digging around finding out where all my homebrew and MySQL files are. While running mulitple instances of everything!<\/em><\/p>\n\n\n\n<p><em>Here&#8217;s a fairly unstructured brain-dump of all that I&#8217;ve learned (or re-learned) along the way.<\/em><\/p>\n\n\n\n<p>Includes using:<\/p>\n\n\n\n<ul><li><a href=\"https:\/\/brew.sh\/\">homebrew<\/a> versions of MySQL and MariaDB<\/li><li><a href=\"https:\/\/dbngin.com\/\">DBNgin<\/a> (a MacOS App for managing installed databases)<\/li><li><a href=\"https:\/\/www.araelium.com\/querious\">Querious<\/a> and <a href=\"https:\/\/sequel-ace.com\/\">Sequel Ace<\/a> database management tools<\/li><\/ul>\n\n\n\n<p>Requires: better than average command-line knowledge<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Where is homebrew installed?<\/h2>\n\n\n\n<p>Turns out <a href=\"https:\/\/docs.brew.sh\/Installation#untar-anywhere\">you can have multiple copies of homebrew installed<\/a>.<\/p>\n\n\n\n<p>The current default install goes to <code>\/usr\/local\/Homebrew<\/code><\/p>\n\n\n\n<p>It seems that they may be moving the default install to <code>\/opt\/homebrew<\/code> on MacOS ARM\/Apple Silicon processors. <a href=\"https:\/\/docs.brew.sh\/Installation#untar-anywhere\">More&#8230;<\/a><\/p>\n\n\n\n<p>If you run <code>\/some\/homebrew\/path\/bin\/brew<\/code> then all operations will happen within that homebrew instance and not affect others.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Where are homebrew-installed MySQL\/MariaDB binaries\/executables?<\/h2>\n\n\n\n<p>Homebrew keeps package binaries in <code>\/some\/homebrew\/path\/Cellar<\/code><\/p>\n\n\n\n<p>So if you want to use a specific version of the mysql client you can do, for example: <code>\/some\/homebrew\/path\/Cellar\/mariadb@10.4\/10.4.17\/bin\/mysql<\/code><\/p>\n\n\n\n<p>Note that there is a notion of a &#8220;current&#8221; version that is symlinked into <code>\/some\/homebrew\/path\/bin\/<\/code><\/p>\n\n\n\n<p>You can change the symlinked current version using <code>brew link<\/code> (make sure you use the right brew instance!)<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Where are homebrew-installed MySQL\/MariaDB data files?<\/h2>\n\n\n\n<p>The standard location for the database data files is <code>\/some\/homebrew\/path\/var\/mysql<\/code><\/p>\n\n\n\n<p>Every version of MySQL\/MariaDB installed in a particular brew instance appears to share the same location. Which is odd. This MUST be configurable from somewhere, but I didn&#8217;t get to finding out where it was. <code>\/some\/homebrew\/path\/etc<\/code> would be the obvious place. And there is a file there, but it doesn&#8217;t have much config in.<\/p>\n\n\n\n<p>You&#8217;ll have to dig in to this to find out yourself. I would assume MySQL has some default location it&#8217;s reading from.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Starting and stopping MySQL\/MariaDB using homebrew<\/h2>\n\n\n\n<p>Worth a quick note that you can start and stop homebrew-installed MySQL\/MariaDB as a service using:<\/p>\n\n\n\n<p><code>\/some\/homebrew\/path\/bin\/brew services start &lt;servicename><\/code><\/p>\n\n\n\n<p>e.g.<\/p>\n\n\n\n<p><code>\/some\/homebrew\/path\/bin\/brew services start mariadb@10.4<\/code><\/p>\n\n\n\n<h2 class=\"wp-block-heading\">What even IS DBngin?<\/h2>\n\n\n\n<p>DBngin is a free MacOS app that lets you install\/start\/stop different databases. I figured all this out while I was moving to a new Mac and so thought I&#8217;d give it a go.<\/p>\n\n\n\n<p>It&#8217;s limited in that it doesn&#8217;t include MariaDB yet. One of my big issues was &#8211; I think &#8211; incompatibilities between MariaDB and MySQL when reading data files.<\/p>\n\n\n\n<p>Anyway&#8230;<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Where are DBngin MySQL binaries?<\/h2>\n\n\n\n<p>DBngin puts binaries in <code>\/Users\/Shared\/DBngin\/mysql\/&lt;version><\/code><\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Where does DBngin put data files?<\/h2>\n\n\n\n<p>DBngin puts data files in <code>\/Users\/&lt;you>\/Library\/Application Support\/com.tinyapp.DBngin\/engines\/mysql\/&lt;some ID><\/code><\/p>\n\n\n\n<p>I discovered while doing this migration that if there are not files called <code>auto.cnf<\/code> and <code>com.tinyapp.DBngin.mysqld-&lt;some ID>.plist<\/code> in this directory then the whole directory will be wiped clean when you use DBngin to start up the database.<\/p>\n\n\n\n<p>So if you empty this directory and copy a bunch of existing data files into it then you&#8217;ll immediately have them all deleted.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">That&#8230;<\/h2>\n\n\n\n<p>is all I got!<\/p>\n",
                "protected": false
            },
            "excerpt": {
                "rendered": "<p>My 7-year-old MacBook got bricked. So I needed to recover some MySQL files from a Time Machine backup and load them onto a new computer. And so I&#8217;ve been digging around finding out where all my homebrew and MySQL files are. While running mulitple instances of everything! Here&#8217;s a fairly unstructured brain-dump of all that I&#8217;ve learned (or re-learned) along the way.<\/p>\n",
                "protected": false
            },
            "author": 2,
            "featured_media": 0,
            "comment_status": "open",
            "ping_status": "closed",
            "sticky": false,
            "template": "",
            "format": "standard",
            "meta": {
                "sig_custom_text": "",
                "sig_image_type": "featured-image",
                "sig_custom_image": 0,
                "sig_is_disabled": false,
                "url": "",
                "footnotes": ""
            },
            "categories": [
                23
            ],
            "tags": [
                725
            ],
            "yoast_head": "<!-- This site is optimized with the Yoast SEO plugin v21.7 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>Where are my MySQL database files on MacOS? - Ross Wintle<\/title>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/rosswintle.uk\/2020\/11\/where-are-my-mysql-database-files-on-macos\/\" \/>\n<meta property=\"og:locale\" content=\"en_GB\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"Where are my MySQL database files on MacOS? - Ross Wintle\" \/>\n<meta property=\"og:description\" content=\"My 7-year-old MacBook got bricked. So I needed to recover some MySQL files from a Time Machine backup and load them onto a new computer. And so I&#039;ve been digging around finding out where all my homebrew and MySQL files are. While running mulitple instances of everything! Here&#039;s a fairly unstructured brain-dump of all that I&#039;ve learned (or re-learned) along the way.\" \/>\n<meta property=\"og:url\" content=\"https:\/\/rosswintle.uk\/2020\/11\/where-are-my-mysql-database-files-on-macos\/\" \/>\n<meta property=\"og:site_name\" content=\"Ross Wintle\" \/>\n<meta property=\"article:published_time\" content=\"2020-11-19T12:24:20+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2020-11-19T12:24:24+00:00\" \/>\n<meta property=\"og:image\" content=\"https:\/\/rosswintle.uk\/wp-content\/uploads\/2012\/06\/DSC_0005-small.jpg\" \/>\n\t<meta property=\"og:image:width\" content=\"600\" \/>\n\t<meta property=\"og:image:height\" content=\"399\" \/>\n\t<meta property=\"og:image:type\" content=\"image\/jpeg\" \/>\n<meta name=\"author\" content=\"Ross Wintle\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:creator\" content=\"@magicroundabout\" \/>\n<meta name=\"twitter:site\" content=\"@magicroundabout\" \/>\n<meta name=\"twitter:label1\" content=\"Written by\" \/>\n\t<meta name=\"twitter:data1\" content=\"Ross Wintle\" \/>\n\t<meta name=\"twitter:label2\" content=\"Estimated reading time\" \/>\n\t<meta name=\"twitter:data2\" content=\"3 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"https:\/\/rosswintle.uk\/2020\/11\/where-are-my-mysql-database-files-on-macos\/\",\"url\":\"https:\/\/rosswintle.uk\/2020\/11\/where-are-my-mysql-database-files-on-macos\/\",\"name\":\"Where are my MySQL database files on MacOS? - Ross Wintle\",\"isPartOf\":{\"@id\":\"https:\/\/rosswintle.uk\/#website\"},\"datePublished\":\"2020-11-19T12:24:20+00:00\",\"dateModified\":\"2020-11-19T12:24:24+00:00\",\"author\":{\"@id\":\"https:\/\/rosswintle.uk\/#\/schema\/person\/9f9bec147b2bfd762f09a2c2da7177dc\"},\"breadcrumb\":{\"@id\":\"https:\/\/rosswintle.uk\/2020\/11\/where-are-my-mysql-database-files-on-macos\/#breadcrumb\"},\"inLanguage\":\"en-GB\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/rosswintle.uk\/2020\/11\/where-are-my-mysql-database-files-on-macos\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/rosswintle.uk\/2020\/11\/where-are-my-mysql-database-files-on-macos\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/rosswintle.uk\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"Where are my MySQL database files on MacOS?\"}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/rosswintle.uk\/#website\",\"url\":\"https:\/\/rosswintle.uk\/\",\"name\":\"Ross Wintle\",\"description\":\"Creativity, curiosity, and code\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/rosswintle.uk\/?s={search_term_string}\"},\"query-input\":\"required name=search_term_string\"}],\"inLanguage\":\"en-GB\"},{\"@type\":\"Person\",\"@id\":\"https:\/\/rosswintle.uk\/#\/schema\/person\/9f9bec147b2bfd762f09a2c2da7177dc\",\"name\":\"Ross Wintle\",\"image\":{\"@type\":\"ImageObject\",\"inLanguage\":\"en-GB\",\"@id\":\"https:\/\/rosswintle.uk\/#\/schema\/person\/image\/\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/28519fc7c37998eea059b525da5fc7ce?s=96&d=identicon&r=g\",\"contentUrl\":\"https:\/\/secure.gravatar.com\/avatar\/28519fc7c37998eea059b525da5fc7ce?s=96&d=identicon&r=g\",\"caption\":\"Ross Wintle\"},\"url\":\"https:\/\/rosswintle.uk\/author\/rosswintle\/\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->",
            "yoast_head_json": {
                "title": "Where are my MySQL database files on MacOS? - Ross Wintle",
                "robots": {
                    "index": "index",
                    "follow": "follow",
                    "max-snippet": "max-snippet:-1",
                    "max-image-preview": "max-image-preview:large",
                    "max-video-preview": "max-video-preview:-1"
                },
                "canonical": "https:\/\/rosswintle.uk\/2020\/11\/where-are-my-mysql-database-files-on-macos\/",
                "og_locale": "en_GB",
                "og_type": "article",
                "og_title": "Where are my MySQL database files on MacOS? - Ross Wintle",
                "og_description": "My 7-year-old MacBook got bricked. So I needed to recover some MySQL files from a Time Machine backup and load them onto a new computer. And so I've been digging around finding out where all my homebrew and MySQL files are. While running mulitple instances of everything! Here's a fairly unstructured brain-dump of all that I've learned (or re-learned) along the way.",
                "og_url": "https:\/\/rosswintle.uk\/2020\/11\/where-are-my-mysql-database-files-on-macos\/",
                "og_site_name": "Ross Wintle",
                "article_published_time": "2020-11-19T12:24:20+00:00",
                "article_modified_time": "2020-11-19T12:24:24+00:00",
                "og_image": [
                    {
                        "width": "600",
                        "height": "399",
                        "url": "https:\/\/rosswintle.uk\/wp-content\/uploads\/2012\/06\/DSC_0005-small.jpg",
                        "type": "image\/jpeg"
                    }
                ],
                "author": "Ross Wintle",
                "twitter_card": "summary_large_image",
                "twitter_creator": "@magicroundabout",
                "twitter_site": "@magicroundabout",
                "twitter_misc": {
                    "Written by": "Ross Wintle",
                    "Estimated reading time": "3 minutes"
                },
                "schema": {
                    "@context": "https:\/\/schema.org",
                    "@graph": [
                        {
                            "@type": "WebPage",
                            "@id": "https:\/\/rosswintle.uk\/2020\/11\/where-are-my-mysql-database-files-on-macos\/",
                            "url": "https:\/\/rosswintle.uk\/2020\/11\/where-are-my-mysql-database-files-on-macos\/",
                            "name": "Where are my MySQL database files on MacOS? - Ross Wintle",
                            "isPartOf": {
                                "@id": "https:\/\/rosswintle.uk\/#website"
                            },
                            "datePublished": "2020-11-19T12:24:20+00:00",
                            "dateModified": "2020-11-19T12:24:24+00:00",
                            "author": {
                                "@id": "https:\/\/rosswintle.uk\/#\/schema\/person\/9f9bec147b2bfd762f09a2c2da7177dc"
                            },
                            "breadcrumb": {
                                "@id": "https:\/\/rosswintle.uk\/2020\/11\/where-are-my-mysql-database-files-on-macos\/#breadcrumb"
                            },
                            "inLanguage": "en-GB",
                            "potentialAction": [
                                {
                                    "@type": "ReadAction",
                                    "target": [
                                        "https:\/\/rosswintle.uk\/2020\/11\/where-are-my-mysql-database-files-on-macos\/"
                                    ]
                                }
                            ]
                        },
                        {
                            "@type": "BreadcrumbList",
                            "@id": "https:\/\/rosswintle.uk\/2020\/11\/where-are-my-mysql-database-files-on-macos\/#breadcrumb",
                            "itemListElement": [
                                {
                                    "@type": "ListItem",
                                    "position": 1,
                                    "name": "Home",
                                    "item": "https:\/\/rosswintle.uk\/"
                                },
                                {
                                    "@type": "ListItem",
                                    "position": 2,
                                    "name": "Where are my MySQL database files on MacOS?"
                                }
                            ]
                        },
                        {
                            "@type": "WebSite",
                            "@id": "https:\/\/rosswintle.uk\/#website",
                            "url": "https:\/\/rosswintle.uk\/",
                            "name": "Ross Wintle",
                            "description": "Creativity, curiosity, and code",
                            "potentialAction": [
                                {
                                    "@type": "SearchAction",
                                    "target": {
                                        "@type": "EntryPoint",
                                        "urlTemplate": "https:\/\/rosswintle.uk\/?s={search_term_string}"
                                    },
                                    "query-input": "required name=search_term_string"
                                }
                            ],
                            "inLanguage": "en-GB"
                        },
                        {
                            "@type": "Person",
                            "@id": "https:\/\/rosswintle.uk\/#\/schema\/person\/9f9bec147b2bfd762f09a2c2da7177dc",
                            "name": "Ross Wintle",
                            "image": {
                                "@type": "ImageObject",
                                "inLanguage": "en-GB",
                                "@id": "https:\/\/rosswintle.uk\/#\/schema\/person\/image\/",
                                "url": "https:\/\/secure.gravatar.com\/avatar\/28519fc7c37998eea059b525da5fc7ce?s=96&d=identicon&r=g",
                                "contentUrl": "https:\/\/secure.gravatar.com\/avatar\/28519fc7c37998eea059b525da5fc7ce?s=96&d=identicon&r=g",
                                "caption": "Ross Wintle"
                            },
                            "url": "https:\/\/rosswintle.uk\/author\/rosswintle\/"
                        }
                    ]
                }
            },
            "_links": {
                "self": [
                    {
                        "href": "https:\/\/rosswintle.uk\/wp-json\/wp\/v2\/posts\/9686"
                    }
                ],
                "collection": [
                    {
                        "href": "https:\/\/rosswintle.uk\/wp-json\/wp\/v2\/posts"
                    }
                ],
                "about": [
                    {
                        "href": "https:\/\/rosswintle.uk\/wp-json\/wp\/v2\/types\/post"
                    }
                ],
                "author": [
                    {
                        "embeddable": true,
                        "href": "https:\/\/rosswintle.uk\/wp-json\/wp\/v2\/users\/2"
                    }
                ],
                "replies": [
                    {
                        "embeddable": true,
                        "href": "https:\/\/rosswintle.uk\/wp-json\/wp\/v2\/comments?post=9686"
                    }
                ],
                "version-history": [
                    {
                        "count": 2,
                        "href": "https:\/\/rosswintle.uk\/wp-json\/wp\/v2\/posts\/9686\/revisions"
                    }
                ],
                "predecessor-version": [
                    {
                        "id": 9688,
                        "href": "https:\/\/rosswintle.uk\/wp-json\/wp\/v2\/posts\/9686\/revisions\/9688"
                    }
                ],
                "wp:attachment": [
                    {
                        "href": "https:\/\/rosswintle.uk\/wp-json\/wp\/v2\/media?parent=9686"
                    }
                ],
                "wp:term": [
                    {
                        "taxonomy": "category",
                        "embeddable": true,
                        "href": "https:\/\/rosswintle.uk\/wp-json\/wp\/v2\/categories?post=9686"
                    },
                    {
                        "taxonomy": "post_tag",
                        "embeddable": true,
                        "href": "https:\/\/rosswintle.uk\/wp-json\/wp\/v2\/tags?post=9686"
                    }
                ],
                "curies": [
                    {
                        "name": "wp",
                        "href": "https:\/\/api.w.org\/{rel}",
                        "templated": true
                    }
                ]
            }
        },
        "id": 9686,
        "dateGmt": "2020-11-19T12:24:20",
        "modifiedDateGmt": "2020-11-19T12:24:24",
        "slug": "where-are-my-mysql-database-files-on-macos",
        "status": "publish",
        "type": "post",
        "link": "https:\/\/rosswintle.uk\/2020\/11\/where-are-my-mysql-database-files-on-macos\/",
        "title": "Where are my MySQL database files on MacOS?",
        "content": "\n<p><em>My 7-year-old MacBook got bricked. So I needed to recover some MySQL files from a Time Machine backup and load them onto a new computer.<\/em><\/p>\n\n\n\n<p><em>And so I&#8217;ve been digging around finding out where all my homebrew and MySQL files are. While running mulitple instances of everything!<\/em><\/p>\n\n\n\n<p><em>Here&#8217;s a fairly unstructured brain-dump of all that I&#8217;ve learned (or re-learned) along the way.<\/em><\/p>\n\n\n\n<p>Includes using:<\/p>\n\n\n\n<ul><li><a href=\"https:\/\/brew.sh\/\">homebrew<\/a> versions of MySQL and MariaDB<\/li><li><a href=\"https:\/\/dbngin.com\/\">DBNgin<\/a> (a MacOS App for managing installed databases)<\/li><li><a href=\"https:\/\/www.araelium.com\/querious\">Querious<\/a> and <a href=\"https:\/\/sequel-ace.com\/\">Sequel Ace<\/a> database management tools<\/li><\/ul>\n\n\n\n<p>Requires: better than average command-line knowledge<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Where is homebrew installed?<\/h2>\n\n\n\n<p>Turns out <a href=\"https:\/\/docs.brew.sh\/Installation#untar-anywhere\">you can have multiple copies of homebrew installed<\/a>.<\/p>\n\n\n\n<p>The current default install goes to <code>\/usr\/local\/Homebrew<\/code><\/p>\n\n\n\n<p>It seems that they may be moving the default install to <code>\/opt\/homebrew<\/code> on MacOS ARM\/Apple Silicon processors. <a href=\"https:\/\/docs.brew.sh\/Installation#untar-anywhere\">More&#8230;<\/a><\/p>\n\n\n\n<p>If you run <code>\/some\/homebrew\/path\/bin\/brew<\/code> then all operations will happen within that homebrew instance and not affect others.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Where are homebrew-installed MySQL\/MariaDB binaries\/executables?<\/h2>\n\n\n\n<p>Homebrew keeps package binaries in <code>\/some\/homebrew\/path\/Cellar<\/code><\/p>\n\n\n\n<p>So if you want to use a specific version of the mysql client you can do, for example: <code>\/some\/homebrew\/path\/Cellar\/mariadb@10.4\/10.4.17\/bin\/mysql<\/code><\/p>\n\n\n\n<p>Note that there is a notion of a &#8220;current&#8221; version that is symlinked into <code>\/some\/homebrew\/path\/bin\/<\/code><\/p>\n\n\n\n<p>You can change the symlinked current version using <code>brew link<\/code> (make sure you use the right brew instance!)<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Where are homebrew-installed MySQL\/MariaDB data files?<\/h2>\n\n\n\n<p>The standard location for the database data files is <code>\/some\/homebrew\/path\/var\/mysql<\/code><\/p>\n\n\n\n<p>Every version of MySQL\/MariaDB installed in a particular brew instance appears to share the same location. Which is odd. This MUST be configurable from somewhere, but I didn&#8217;t get to finding out where it was. <code>\/some\/homebrew\/path\/etc<\/code> would be the obvious place. And there is a file there, but it doesn&#8217;t have much config in.<\/p>\n\n\n\n<p>You&#8217;ll have to dig in to this to find out yourself. I would assume MySQL has some default location it&#8217;s reading from.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Starting and stopping MySQL\/MariaDB using homebrew<\/h2>\n\n\n\n<p>Worth a quick note that you can start and stop homebrew-installed MySQL\/MariaDB as a service using:<\/p>\n\n\n\n<p><code>\/some\/homebrew\/path\/bin\/brew services start &lt;servicename><\/code><\/p>\n\n\n\n<p>e.g.<\/p>\n\n\n\n<p><code>\/some\/homebrew\/path\/bin\/brew services start mariadb@10.4<\/code><\/p>\n\n\n\n<h2 class=\"wp-block-heading\">What even IS DBngin?<\/h2>\n\n\n\n<p>DBngin is a free MacOS app that lets you install\/start\/stop different databases. I figured all this out while I was moving to a new Mac and so thought I&#8217;d give it a go.<\/p>\n\n\n\n<p>It&#8217;s limited in that it doesn&#8217;t include MariaDB yet. One of my big issues was &#8211; I think &#8211; incompatibilities between MariaDB and MySQL when reading data files.<\/p>\n\n\n\n<p>Anyway&#8230;<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Where are DBngin MySQL binaries?<\/h2>\n\n\n\n<p>DBngin puts binaries in <code>\/Users\/Shared\/DBngin\/mysql\/&lt;version><\/code><\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Where does DBngin put data files?<\/h2>\n\n\n\n<p>DBngin puts data files in <code>\/Users\/&lt;you>\/Library\/Application Support\/com.tinyapp.DBngin\/engines\/mysql\/&lt;some ID><\/code><\/p>\n\n\n\n<p>I discovered while doing this migration that if there are not files called <code>auto.cnf<\/code> and <code>com.tinyapp.DBngin.mysqld-&lt;some ID>.plist<\/code> in this directory then the whole directory will be wiped clean when you use DBngin to start up the database.<\/p>\n\n\n\n<p>So if you empty this directory and copy a bunch of existing data files into it then you&#8217;ll immediately have them all deleted.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">That&#8230;<\/h2>\n\n\n\n<p>is all I got!<\/p>\n",
        "excerpt": "<p>My 7-year-old MacBook got bricked. So I needed to recover some MySQL files from a Time Machine backup and load them onto a new computer. And so I&#8217;ve been digging around finding out where all my homebrew and MySQL files are. While running mulitple instances of everything! Here&#8217;s a fairly unstructured brain-dump of all that I&#8217;ve learned (or re-learned) along the way.<\/p>\n",
        "parentId": 0,
        "authorId": 2,
        "featuredMediaId": 0
    }
]