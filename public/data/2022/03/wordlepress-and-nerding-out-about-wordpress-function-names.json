{
    "id": 10904,
    "date": "2022-03-27T17:35:24",
    "date_gmt": "2022-03-27T16:35:24",
    "guid": {
        "rendered": "https:\/\/rosswintle.uk\/?p=10904"
    },
    "modified": "2022-03-27T17:35:27",
    "modified_gmt": "2022-03-27T16:35:27",
    "slug": "wordlepress-and-nerding-out-about-wordpress-function-names",
    "status": "publish",
    "type": "post",
    "link": "https:\/\/rosswintle.uk\/2022\/03\/wordlepress-and-nerding-out-about-wordpress-function-names\/",
    "title": {
        "rendered": "WordlePress and nerding out about WordPress function names"
    },
    "content": {
        "rendered": "\n<p>Given all the &#8220;Wordle&#8221; hype these days, I think I was one of the first (of many) people to wonder about what &#8220;WordlePress&#8221; might look like:<\/p>\n\n\n\n<figure class=\"wp-block-embed is-type-rich is-provider-twitter wp-block-embed-twitter\"><div class=\"wp-block-embed__wrapper\">\nhttps:\/\/twitter.com\/magicroundabout\/status\/1478999708228108293\n<\/div><\/figure>\n\n\n\n<p>Not long after, Taco Verdo did buy the domain, with the aim of preserving it for the good of the WordPress community.<\/p>\n\n\n\n<figure class=\"wp-block-embed is-type-rich is-provider-twitter wp-block-embed-twitter\"><div class=\"wp-block-embed__wrapper\">\n<blockquote class=\"twitter-tweet\" data-width=\"550\" data-dnt=\"true\"><p lang=\"en\" dir=\"ltr\">I have <a href=\"https:\/\/t.co\/oNmgelSNll\">https:\/\/t.co\/oNmgelSNll<\/a>, but no time to turn it into a game.<\/p>&mdash; Taco Verdo (@TacoVerdo) <a href=\"https:\/\/twitter.com\/TacoVerdo\/status\/1490612545484378112?ref_src=twsrc%5Etfw\">February 7, 2022<\/a><\/blockquote><script async src=\"https:\/\/platform.twitter.com\/widgets.js\" charset=\"utf-8\"><\/script>\n<\/div><\/figure>\n\n\n\n<p>Then, one bored weekend, I came up with the idea of making <a href=\"https:\/\/wordlepress.netlify.app\/\">a Wordle-style game<\/a> where you had to guess a WordPress core function name.<\/p>\n\n\n\n<p>The prototype took a couple of hours to make. And it&#8217;s fine as a game in principle. But it&#8217;s REALLY hard.<\/p>\n\n\n\n<p>You can play at <a href=\"https:\/\/wordlepress.netlify.app\/\">https:\/\/wordlepress.netlify.app\/<\/a> &#8211; I but I warn you, you need to be a proper back-end WordPress geek to be anything like any good!<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Behind the scenes<\/h2>\n\n\n\n<p>I wanted to write some notes about the behind the scenes, how I made this work stuff. And, because I&#8217;m a geek, I got all curious about WordPress function names: how long they are; how common the different name parts are.<\/p>\n\n\n\n<p>Let&#8217;s dig in!<\/p>\n\n\n\n<h3 class=\"wp-block-heading\">Finding all the function names<\/h3>\n\n\n\n<p>The game is based on 4-part function names. &#8220;Parts&#8221; are separated by underscores. So <code>get_attachment_image_url<\/code> is a good example.<\/p>\n\n\n\n<p>I needed to find all the global function names, count their &#8220;parts&#8221;, and filter them. So I needed to do some pre-processing of the WordPress code.<\/p>\n\n\n\n<p>I got all the function names from the <code><a href=\"https:\/\/github.com\/php-stubs\/wordpress-stubs\">wordpress-stubs<\/a><\/code> package. This is a package used for static analysis that contains all the class, and function signatures throughout WordPress core, but without the actual function\/class code. All the function\/method bodies are empty. And they are all concatenated into <a href=\"https:\/\/raw.githubusercontent.com\/php-stubs\/wordpress-stubs\/master\/wordpress-stubs.php\">one file<\/a>.<\/p>\n\n\n\n<p>I used a combination of <code>grep<\/code> and <code>cut<\/code> commands to get all the function names from this file. Because the regex filtered out any functions with <code>public<\/code>\/<code>protected<\/code>\/<code>private<\/code> visibility specified, this should have ignored most class methods, and only given my globally available functions.<\/p>\n\n\n\n<p>Here&#8217;s the command I used:<\/p>\n\n\n<div class=\"wp-block-syntaxhighlighter-code \"><pre class=\"brush: plain; title: ; notranslate\" title=\"\">\negrep '^\\s+function\\s+(&#x5B;^ \\(]+)' wordpress-stubs.php | cut -d&quot; &quot; -f6 | cut -d &quot;(&quot; -f 1 &gt; wpfuncs.txt\n<\/pre><\/div>\n\n\n<p>I then opened <a href=\"https:\/\/rosswintle.uk\/2020\/01\/tinkerwell-for-wordpress-developers\/\">Tinkerwell<\/a> to mess about with the data I had using my PHP skills. This just seemed like the quickest way to get to some interesting answers about the function names.<\/p>\n\n\n\n<p>The thing I really wanted to know was how many function names had 3, 4 or 5 parts, as this would influence the game.<\/p>\n\n\n\n<p>This isn&#8217;t clean, well-engineered code, but it does the job. I&#8217;m gonna use it once and throw it away so I&#8217;m not thinking too hard.<\/p>\n\n\n<div class=\"wp-block-syntaxhighlighter-code \"><pre class=\"brush: plain; title: ; notranslate\" title=\"\">\n\/\/ Read in all the function names.\n$funcs = file_get_contents('wpfuncs.txt');\n\n\/\/ Keep counts of number of function name parts\n$lengths = &#x5B;];\n\nforeach (explode(&quot;\\n&quot;, $funcs) as $func) {\n  if (! empty(trim($func))) {\n    \/\/ Split the function name at _'s\n    $parts = explode ('_', $func);\n    \/\/ Discard empty parts\n    $parts = array_filter( $parts, function ($a) { return ! empty($a); } );\n    $parts = count($parts);\n\n    \/\/ Update the count in the array\n    if (isset($lengths&#x5B;$parts])) {\n      $lengths&#x5B;$parts]++;\n    } else {\n      $lengths&#x5B;$parts] = 1;\n    }\n  }\n}\n\n\/\/ Sort the array by number of function parts\nksort($lengths);\n\nvar_dump($lengths);\n<\/pre><\/div>\n\n\n<p>At the time of writing, this gives us:<\/p>\n\n\n<div class=\"wp-block-syntaxhighlighter-code \"><pre class=\"brush: plain; title: ; notranslate\" title=\"\">\n&#x5B;\n     0 =&gt; 1, \n     1 =&gt; 42,\n     2 =&gt; 576,\n     3 =&gt; 1196,\n     4 =&gt; 1004,\n     5 =&gt; 420,\n     6 =&gt; 182,\n     7 =&gt; 62,\n     8 =&gt; 18,\n     9 =&gt; 4,\n     10 =&gt; 2,\n     11 =&gt; 1,\n   ]\n<\/pre><\/div>\n\n\n<p>From the point of view of making the game, we see that 3-part functions give us the greatest number of functions with 1196 function names. This isn&#8217;t necessarily good though as:<\/p>\n\n\n\n<ul class=\"wp-block-list\"><li>Guessing more parts means we more quickly rule words in or out of the function name<\/li><li>So guessing fewer parts each time AND having more functions to guess makes the game harder.<\/li><\/ul>\n\n\n\n<p>The 420 5-part functions seemed too small though. So I decided to go with the 1004 4-part functions for the game.<\/p>\n\n\n\n<p>It turns out this is STILL a very hard game!<\/p>\n\n\n\n<h2 class=\"wp-block-heading\">Stats, functions and &#8220;fun&#8221;<\/h2>\n\n\n\n<p>This section has no real value at all. But I was curious about some of the numbers and functions here.<\/p>\n\n\n\n<ul class=\"wp-block-list\"><li>How many global functions are there?<\/li><li>What are the shortest and longest function names?<\/li><li>What are the most common &#8220;parts&#8221;\/&#8221;words&#8221; in function names (apart from <code>wp_<\/code>)?<\/li><\/ul>\n\n\n\n<p>Let&#8217;s dig in.<\/p>\n\n\n\n<p><strong>Total global functions<\/strong><\/p>\n\n\n\n<p>According to this analysis there are 3508 global functions in WordPress.<\/p>\n\n\n\n<p>That&#8217;s quite a lot!<\/p>\n\n\n\n<p><strong>Longest and shortest function names<\/strong><\/p>\n\n\n\n<p>In terms of function name parts\/words, we can easily see:<\/p>\n\n\n\n<ul class=\"wp-block-list\"><li>There&#8217;s a function with ZERO WORDS? Bear in mind that underscores themselves don&#8217;t count. Maybe you can guess it? If not, head to <a href=\"https:\/\/developer.wordpress.org\/reference\/functions\/__\/\">the docs<\/a>.<\/li><li>There are thirty-four 1-word functions. Perhaps you&#8217;ve used <code>dbdelta<\/code>, <code>trailingslashit<\/code>, <code>mysql2date<\/code>, <code>absint<\/code>, <code>bloginfo<\/code>, <code>selected<\/code> or <code>checked<\/code>? But what about <code><a href=\"https:\/\/developer.wordpress.org\/reference\/functions\/saveDomDocument\/\">saveDomDocument<\/a><\/code>, <code><a href=\"https:\/\/developer.wordpress.org\/reference\/functions\/zeroise\/\">zeroise<\/a><\/code> (curious in its non-US English spelling), or <code><a href=\"https:\/\/developer.wordpress.org\/reference\/functions\/antispambot\/\">antispambot<\/a><\/code>?<\/li><li>There are 2 10-part function. Hands up if you&#8217;ve used <code><a href=\"https:\/\/developer.wordpress.org\/reference\/functions\/wp_add_trashed_suffix_to_post_name_for_trashed_posts\/\">wp_add_trashed_suffix_to_post_name_for_trashed_posts<\/a><\/code> or the undocumented <code>_delete_site_logo_on_remove_custom_logo_on_setup_theme<\/code>?<\/li><li>And there is just one 11-part function. Bonus points if you&#8217;ve ever called <code>block_core_calendar_update_has_published_post_on_transition_post_status<\/code> for some reason (it&#8217;s also undocumented).<\/li><\/ul>\n\n\n\n<p><strong>Most common words\/parts<\/strong><\/p>\n\n\n\n<p>I&#8217;ll need to add some new code to analyse this. Here we go:<\/p>\n\n\n<div class=\"wp-block-syntaxhighlighter-code \"><pre class=\"brush: plain; title: ; notranslate\" title=\"\">\n$funcs = file_get_contents('wpfuncs.txt');\n\n$wordUses = &#x5B;];\n\nforeach (explode(&quot;\\n&quot;, $funcs) as $func) {\n  if (! empty(trim($func))) {\n    $parts = explode('_', $func);\n    $parts = array_filter( $parts, function ($a) { return ! empty($a); } );\n  \tforeach($parts as $part) {\n      $wordUses&#x5B;$part] = isset($wordUses&#x5B;$part]) ? $wordUses&#x5B;$part] + 1 : 1;\n    }\n  }\n}\n\nasort($wordUses);\nvar_dump($wordUses);\n<\/pre><\/div>\n\n\n<p>Sorting this way around (ascending order of use) isn&#8217;t particularly revealing. We just get all the words\/parts that are only used in one function. Of which there are a LOT!<\/p>\n\n\n\n<p>In fact, there are 1434 distinct words used in WordPress core global functions. And 563 (nearly 40%) of those words are only used in one function name! No wonder WordlePress is so hard! Perhaps we can analyse just the 4-part functions in a moment.<\/p>\n\n\n\n<p>A quick <code>array_reverse()<\/code> gives us the most-used words\/parts. And it&#8217;s no surprise that <code>wp<\/code> leads the way, appearing in 1245 functions. More than a third of all functions have <code>wp<\/code> in!<\/p>\n\n\n\n<p>If you&#8217;re playing WordlePress you&#8217;ll want the top-ten for starter words. So these are:<\/p>\n\n\n\n<ul class=\"wp-block-list\"><li><code>wp<\/code> (1245 instances)<\/li><li><code>get<\/code> (firmly second with a massive 762 instances!)<\/li><li><code>post<\/code> (third with 308 instances)<\/li><li><code>block<\/code> (fast upcoming in 4th place with 217 instances)<\/li><li><code>link<\/code> (166 instances)<\/li><li><code>is<\/code> (156 instances)<\/li><li><code>core<\/code> (144 instances)<\/li><li><code>update<\/code> (138 instances)<\/li><li><code>the<\/code> (133 instances)<\/li><li><code>add<\/code> (124 instances)<\/li><\/ul>\n\n\n\n<p><strong>WordlePress words\/parts<\/strong><\/p>\n\n\n\n<p>So is <code>wp_get_post_block<\/code> the best opener for WordlePress?<\/p>\n\n\n\n<p>Remember we&#8217;re only using 4-part functions. Is the analysis any different?<\/p>\n\n\n\n<p>Well, it&#8217;s a little different.<\/p>\n\n\n\n<p>The best WordlePress opening guess is <code>wp_get_post_link<\/code><\/p>\n\n\n\n<p><code>wp<\/code> remains strongest by far. It&#8217;s in 482 of the 1004 4-part function names. Close to 50%!<\/p>\n\n\n\n<p><code>core<\/code> and <code>block<\/code> get demoted a bit. <code>update<\/code> drops down the rankings. And <code>ajax<\/code>, <code>image<\/code> and <code>register<\/code> climb into the top ten:<\/p>\n\n\n\n<ul class=\"wp-block-list\"><li><code>wp<\/code> (482 instances)<\/li><li><code>get<\/code> (300 instances)<\/li><li><code>post<\/code> (115 instances)<\/li><li><code>link<\/code> (62 instances)<\/li><li><code>ajax<\/code> (54 instances)<\/li><li><code>block<\/code> (52 instances)<\/li><li><code>is<\/code> (45 instances)<\/li><li><code>the<\/code> (43 instances)<\/li><li><code>image<\/code> (41 instances)<\/li><li><code>register<\/code> (36 instances)<\/li><\/ul>\n\n\n\n<p>But there&#8217;s still 763 words to choose from! Which is one of the reasons WordlePress is so hard.<\/p>\n\n\n\n<p>Hopefully this new knowledge will help you play. Or maybe I&#8217;ll use it to refine the game to make it easier in future.<\/p>\n\n\n\n<p>In any case, this was kinda fun weekend tinkering. I hope you learned something!<\/p>\n",
        "protected": false
    },
    "excerpt": {
        "rendered": "<p>Given all the &#8220;Wordle&#8221; hype these days, I think I was one of the first (of many) people to wonder about what &#8220;WordlePress&#8221; might look like: Not long after, Taco Verdo did buy the domain, with the aim of preserving it for the good of the WordPress community. Then, one bored weekend, I came up [&hellip;]<\/p>\n",
        "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "closed",
    "ping_status": "closed",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": {
        "sig_custom_text": "",
        "sig_image_type": "featured-image",
        "sig_custom_image": 0,
        "sig_is_disabled": false,
        "url": "",
        "footnotes": ""
    },
    "categories": [
        10,
        639
    ],
    "tags": [
        286,
        462
    ],
    "class_list": [
        "post-10904",
        "post",
        "type-post",
        "status-publish",
        "format-standard",
        "hentry",
        "category-general",
        "category-wordpress",
        "tag-coding",
        "tag-wordpress"
    ],
    "yoast_head": "<!-- This site is optimized with the Yoast SEO plugin v23.6 - https:\/\/yoast.com\/wordpress\/plugins\/seo\/ -->\n<title>WordlePress and nerding out about WordPress function names - Ross Wintle<\/title>\n<meta name=\"robots\" content=\"index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1\" \/>\n<link rel=\"canonical\" href=\"https:\/\/rosswintle.uk\/2022\/03\/wordlepress-and-nerding-out-about-wordpress-function-names\/\" \/>\n<meta property=\"og:locale\" content=\"en_US\" \/>\n<meta property=\"og:type\" content=\"article\" \/>\n<meta property=\"og:title\" content=\"WordlePress and nerding out about WordPress function names - Ross Wintle\" \/>\n<meta property=\"og:description\" content=\"Given all the &#8220;Wordle&#8221; hype these days, I think I was one of the first (of many) people to wonder about what &#8220;WordlePress&#8221; might look like: Not long after, Taco Verdo did buy the domain, with the aim of preserving it for the good of the WordPress community. Then, one bored weekend, I came up [&hellip;]\" \/>\n<meta property=\"og:url\" content=\"https:\/\/rosswintle.uk\/2022\/03\/wordlepress-and-nerding-out-about-wordpress-function-names\/\" \/>\n<meta property=\"og:site_name\" content=\"Ross Wintle\" \/>\n<meta property=\"article:published_time\" content=\"2022-03-27T16:35:24+00:00\" \/>\n<meta property=\"article:modified_time\" content=\"2022-03-27T16:35:27+00:00\" \/>\n<meta property=\"og:image\" content=\"https:\/\/rosswintle.uk\/wp-content\/uploads\/2012\/06\/DSC_0005-small.jpg\" \/>\n\t<meta property=\"og:image:width\" content=\"600\" \/>\n\t<meta property=\"og:image:height\" content=\"399\" \/>\n\t<meta property=\"og:image:type\" content=\"image\/jpeg\" \/>\n<meta name=\"author\" content=\"Ross Wintle\" \/>\n<meta name=\"twitter:card\" content=\"summary_large_image\" \/>\n<meta name=\"twitter:creator\" content=\"@magicroundabout\" \/>\n<meta name=\"twitter:site\" content=\"@magicroundabout\" \/>\n<meta name=\"twitter:label1\" content=\"Written by\" \/>\n\t<meta name=\"twitter:data1\" content=\"Ross Wintle\" \/>\n\t<meta name=\"twitter:label2\" content=\"Est. reading time\" \/>\n\t<meta name=\"twitter:data2\" content=\"6 minutes\" \/>\n<script type=\"application\/ld+json\" class=\"yoast-schema-graph\">{\"@context\":\"https:\/\/schema.org\",\"@graph\":[{\"@type\":\"WebPage\",\"@id\":\"https:\/\/rosswintle.uk\/2022\/03\/wordlepress-and-nerding-out-about-wordpress-function-names\/\",\"url\":\"https:\/\/rosswintle.uk\/2022\/03\/wordlepress-and-nerding-out-about-wordpress-function-names\/\",\"name\":\"WordlePress and nerding out about WordPress function names - Ross Wintle\",\"isPartOf\":{\"@id\":\"https:\/\/rosswintle.uk\/#website\"},\"datePublished\":\"2022-03-27T16:35:24+00:00\",\"dateModified\":\"2022-03-27T16:35:27+00:00\",\"author\":{\"@id\":\"https:\/\/rosswintle.uk\/#\/schema\/person\/9f9bec147b2bfd762f09a2c2da7177dc\"},\"breadcrumb\":{\"@id\":\"https:\/\/rosswintle.uk\/2022\/03\/wordlepress-and-nerding-out-about-wordpress-function-names\/#breadcrumb\"},\"inLanguage\":\"en-US\",\"potentialAction\":[{\"@type\":\"ReadAction\",\"target\":[\"https:\/\/rosswintle.uk\/2022\/03\/wordlepress-and-nerding-out-about-wordpress-function-names\/\"]}]},{\"@type\":\"BreadcrumbList\",\"@id\":\"https:\/\/rosswintle.uk\/2022\/03\/wordlepress-and-nerding-out-about-wordpress-function-names\/#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https:\/\/rosswintle.uk\/\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"WordlePress and nerding out about WordPress function names\"}]},{\"@type\":\"WebSite\",\"@id\":\"https:\/\/rosswintle.uk\/#website\",\"url\":\"https:\/\/rosswintle.uk\/\",\"name\":\"Ross Wintle\",\"description\":\"Creativity, curiosity, and code\",\"potentialAction\":[{\"@type\":\"SearchAction\",\"target\":{\"@type\":\"EntryPoint\",\"urlTemplate\":\"https:\/\/rosswintle.uk\/?s={search_term_string}\"},\"query-input\":{\"@type\":\"PropertyValueSpecification\",\"valueRequired\":true,\"valueName\":\"search_term_string\"}}],\"inLanguage\":\"en-US\"},{\"@type\":\"Person\",\"@id\":\"https:\/\/rosswintle.uk\/#\/schema\/person\/9f9bec147b2bfd762f09a2c2da7177dc\",\"name\":\"Ross Wintle\",\"image\":{\"@type\":\"ImageObject\",\"inLanguage\":\"en-US\",\"@id\":\"https:\/\/rosswintle.uk\/#\/schema\/person\/image\/\",\"url\":\"https:\/\/secure.gravatar.com\/avatar\/28519fc7c37998eea059b525da5fc7ce?s=96&d=identicon&r=g\",\"contentUrl\":\"https:\/\/secure.gravatar.com\/avatar\/28519fc7c37998eea059b525da5fc7ce?s=96&d=identicon&r=g\",\"caption\":\"Ross Wintle\"},\"url\":\"https:\/\/rosswintle.uk\/author\/rosswintle\/\"}]}<\/script>\n<!-- \/ Yoast SEO plugin. -->",
    "yoast_head_json": {
        "title": "WordlePress and nerding out about WordPress function names - Ross Wintle",
        "robots": {
            "index": "index",
            "follow": "follow",
            "max-snippet": "max-snippet:-1",
            "max-image-preview": "max-image-preview:large",
            "max-video-preview": "max-video-preview:-1"
        },
        "canonical": "https:\/\/rosswintle.uk\/2022\/03\/wordlepress-and-nerding-out-about-wordpress-function-names\/",
        "og_locale": "en_US",
        "og_type": "article",
        "og_title": "WordlePress and nerding out about WordPress function names - Ross Wintle",
        "og_description": "Given all the &#8220;Wordle&#8221; hype these days, I think I was one of the first (of many) people to wonder about what &#8220;WordlePress&#8221; might look like: Not long after, Taco Verdo did buy the domain, with the aim of preserving it for the good of the WordPress community. Then, one bored weekend, I came up [&hellip;]",
        "og_url": "https:\/\/rosswintle.uk\/2022\/03\/wordlepress-and-nerding-out-about-wordpress-function-names\/",
        "og_site_name": "Ross Wintle",
        "article_published_time": "2022-03-27T16:35:24+00:00",
        "article_modified_time": "2022-03-27T16:35:27+00:00",
        "og_image": [
            {
                "width": 600,
                "height": 399,
                "url": "https:\/\/rosswintle.uk\/wp-content\/uploads\/2012\/06\/DSC_0005-small.jpg",
                "type": "image\/jpeg"
            }
        ],
        "author": "Ross Wintle",
        "twitter_card": "summary_large_image",
        "twitter_creator": "@magicroundabout",
        "twitter_site": "@magicroundabout",
        "twitter_misc": {
            "Written by": "Ross Wintle",
            "Est. reading time": "6 minutes"
        },
        "schema": {
            "@context": "https:\/\/schema.org",
            "@graph": [
                {
                    "@type": "WebPage",
                    "@id": "https:\/\/rosswintle.uk\/2022\/03\/wordlepress-and-nerding-out-about-wordpress-function-names\/",
                    "url": "https:\/\/rosswintle.uk\/2022\/03\/wordlepress-and-nerding-out-about-wordpress-function-names\/",
                    "name": "WordlePress and nerding out about WordPress function names - Ross Wintle",
                    "isPartOf": {
                        "@id": "https:\/\/rosswintle.uk\/#website"
                    },
                    "datePublished": "2022-03-27T16:35:24+00:00",
                    "dateModified": "2022-03-27T16:35:27+00:00",
                    "author": {
                        "@id": "https:\/\/rosswintle.uk\/#\/schema\/person\/9f9bec147b2bfd762f09a2c2da7177dc"
                    },
                    "breadcrumb": {
                        "@id": "https:\/\/rosswintle.uk\/2022\/03\/wordlepress-and-nerding-out-about-wordpress-function-names\/#breadcrumb"
                    },
                    "inLanguage": "en-US",
                    "potentialAction": [
                        {
                            "@type": "ReadAction",
                            "target": [
                                "https:\/\/rosswintle.uk\/2022\/03\/wordlepress-and-nerding-out-about-wordpress-function-names\/"
                            ]
                        }
                    ]
                },
                {
                    "@type": "BreadcrumbList",
                    "@id": "https:\/\/rosswintle.uk\/2022\/03\/wordlepress-and-nerding-out-about-wordpress-function-names\/#breadcrumb",
                    "itemListElement": [
                        {
                            "@type": "ListItem",
                            "position": 1,
                            "name": "Home",
                            "item": "https:\/\/rosswintle.uk\/"
                        },
                        {
                            "@type": "ListItem",
                            "position": 2,
                            "name": "WordlePress and nerding out about WordPress function names"
                        }
                    ]
                },
                {
                    "@type": "WebSite",
                    "@id": "https:\/\/rosswintle.uk\/#website",
                    "url": "https:\/\/rosswintle.uk\/",
                    "name": "Ross Wintle",
                    "description": "Creativity, curiosity, and code",
                    "potentialAction": [
                        {
                            "@type": "SearchAction",
                            "target": {
                                "@type": "EntryPoint",
                                "urlTemplate": "https:\/\/rosswintle.uk\/?s={search_term_string}"
                            },
                            "query-input": {
                                "@type": "PropertyValueSpecification",
                                "valueRequired": true,
                                "valueName": "search_term_string"
                            }
                        }
                    ],
                    "inLanguage": "en-US"
                },
                {
                    "@type": "Person",
                    "@id": "https:\/\/rosswintle.uk\/#\/schema\/person\/9f9bec147b2bfd762f09a2c2da7177dc",
                    "name": "Ross Wintle",
                    "image": {
                        "@type": "ImageObject",
                        "inLanguage": "en-US",
                        "@id": "https:\/\/rosswintle.uk\/#\/schema\/person\/image\/",
                        "url": "https:\/\/secure.gravatar.com\/avatar\/28519fc7c37998eea059b525da5fc7ce?s=96&d=identicon&r=g",
                        "contentUrl": "https:\/\/secure.gravatar.com\/avatar\/28519fc7c37998eea059b525da5fc7ce?s=96&d=identicon&r=g",
                        "caption": "Ross Wintle"
                    },
                    "url": "https:\/\/rosswintle.uk\/author\/rosswintle\/"
                }
            ]
        }
    },
    "_links": {
        "self": [
            {
                "href": "https:\/\/rosswintle.uk\/wp-json\/wp\/v2\/posts\/10904"
            }
        ],
        "collection": [
            {
                "href": "https:\/\/rosswintle.uk\/wp-json\/wp\/v2\/posts"
            }
        ],
        "about": [
            {
                "href": "https:\/\/rosswintle.uk\/wp-json\/wp\/v2\/types\/post"
            }
        ],
        "author": [
            {
                "embeddable": true,
                "href": "https:\/\/rosswintle.uk\/wp-json\/wp\/v2\/users\/2"
            }
        ],
        "replies": [
            {
                "embeddable": true,
                "href": "https:\/\/rosswintle.uk\/wp-json\/wp\/v2\/comments?post=10904"
            }
        ],
        "version-history": [
            {
                "count": 2,
                "href": "https:\/\/rosswintle.uk\/wp-json\/wp\/v2\/posts\/10904\/revisions"
            }
        ],
        "predecessor-version": [
            {
                "id": 10906,
                "href": "https:\/\/rosswintle.uk\/wp-json\/wp\/v2\/posts\/10904\/revisions\/10906"
            }
        ],
        "wp:attachment": [
            {
                "href": "https:\/\/rosswintle.uk\/wp-json\/wp\/v2\/media?parent=10904"
            }
        ],
        "wp:term": [
            {
                "taxonomy": "category",
                "embeddable": true,
                "href": "https:\/\/rosswintle.uk\/wp-json\/wp\/v2\/categories?post=10904"
            },
            {
                "taxonomy": "post_tag",
                "embeddable": true,
                "href": "https:\/\/rosswintle.uk\/wp-json\/wp\/v2\/tags?post=10904"
            }
        ],
        "curies": [
            {
                "name": "wp",
                "href": "https:\/\/api.w.org\/{rel}",
                "templated": true
            }
        ]
    }
}